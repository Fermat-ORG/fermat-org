<?xml version="1.0" encoding="UTF-8"?>
<procs>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Broker Identity creation</name>
		<desc>Broker identity creation procedure, to be used by Crypto Brokers</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2718fb3968867d2a404</_id>
				<id>0</id>
				<title>User requests the creation of a new identity</title>
				<desc>The user enters the Crypto broker Itentity Sub App and creates a new Crypto Broker identity</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a40a</_id>
				<id>1</id>
				<title>Crypto Broker Identity processes request</title>
				<desc>The Crypto Broker Identity Sub App Module processes the new identity request</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a410</_id>
				<id>2</id>
				<title>Crypto Broker Identity creates the new identity</title>
				<desc>Receives the request and creates a new identity for the Crypto Broker</desc>
				<type>end</type>
				<name>crypto broker</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2718fb3968867d2a3fd</upd_at>
		<_id>56e1e2718fb3968867d2a3fe</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Customer Identity creation</name>
		<desc>Customer identity creation procedure, to be used by Crypto Customers</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2718fb3968867d2a419</_id>
				<id>0</id>
				<title>User requests the creation of a new identity</title>
				<desc>The user enters the Crypto Customer Itentity Sub App and creates a new Crypto Customer identity</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a41f</_id>
				<id>1</id>
				<title>Crypto Customer Identity processes request</title>
				<desc>The Crypto Customer Identity Sub App Module processes the new identity request</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a425</_id>
				<id>2</id>
				<title>Crypto Customer Identity creates the new identity</title>
				<desc>Receives the request and creates a new identity for the Crypto Customer</desc>
				<type>end</type>
				<name>crypto customer</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2718fb3968867d2a412</upd_at>
		<_id>56e1e2718fb3968867d2a413</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Customer Start a Negotiation</name>
		<desc>The Crypto Customer start a negotiation with a Crypto Broker.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2738fb3968867d2a666</_id>
				<id>0</id>
				<title>Customer set the info to start a New Negotiation</title>
				<desc>The Crypto Customer indicates he wants to start a new negotiation with a selected Crypto Broker passing the necesary info (merchandise, amount to buy, hoy to recive the merchandise, etc)</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a66c</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to create negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a672</_id>
				<id>2</id>
				<title>Manages the creation of Negotiation</title>
				<desc>Create a transaction to manage the negotiation Customer Broker</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker new</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a678</_id>
				<id>3</id>
				<title>Create The Purchase Negotiation</title>
				<desc>Create the purchase negotiation of Customer</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a67e</_id>
				<id>4</id>
				<title>Process Sending Negotiation To Broker</title>
				<desc>Process Sending Negotiation To Broker</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker new</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a684</_id>
				<id>5</id>
				<title>Sending Negotiation To Broker</title>
				<desc>Sending negotiation to Broker for creation Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>fermat message</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a68a</_id>
				<id>6</id>
				<title>Receiving Negotiation From Customer</title>
				<desc>Receiving negotiation from Customer for creation Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a690</_id>
				<id>7</id>
				<title>Process Receiving Negotiation From Customer</title>
				<desc>Process Receiving Negotiation From Customer</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker new</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a696</_id>
				<id>8</id>
				<title>Create The Sale Negotiation</title>
				<desc>Create the Sale negotiation of Broker</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a69c</_id>
				<id>9</id>
				<title>Sending Confirmation of Negotiation</title>
				<desc>Sending Confirmation of Creation Negotiation to Customer</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>fermat message</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6a2</_id>
				<id>10</id>
				<title>Receiving Confirmation of Negotiation</title>
				<desc>Receiving Confirmation of Creation Negotiation From Broker</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6a8</_id>
				<id>11</id>
				<title>Process the Receive Confirmation of Negotiation</title>
				<desc>Process the Receive Confirmation of Negotiation</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>direct call</type>
				</next>
				<name>customer broker new</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6ae</_id>
				<id>12</id>
				<title>Confirm the Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2738fb3968867d2a65f</upd_at>
		<_id>56e1e2738fb3968867d2a660</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Open a Purchase Contract</name>
		<desc>Creates and opens a Customer - Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2738fb3968867d2a810</_id>
				<id>0</id>
				<title>Start a Purchase Contract beetwen a Customer and a Broker</title>
				<desc>Based on a closed negotiation, start an Open Contract Business Transaction.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>user level business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a816</_id>
				<id>1</id>
				<title>Gets the Negotiation ID</title>
				<desc>Gets the ID of closed negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a81c</_id>
				<id>2</id>
				<title>Creates an Open Contract Business Transaction</title>
				<desc>Creates an Open Contract Business Transaction with the data of the closed negotiation.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>open contract</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a822</_id>
				<id>3</id>
				<title>Gets the Negotiation clauses</title>
				<desc>Gets the Clauses associated to the ID of the closed negotiation.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a828</_id>
				<id>4</id>
				<title>Creates a new Contract Record</title>
				<desc>Creates a new Contract Record with the Negotiation data.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>open contract</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a82e</_id>
				<id>5</id>
				<title>Creates a new Customer Broker Purchase Contract</title>
				<desc>Creates a new Customer Broker Purchase Contract with the negotiation data. This generate a Hash that&apos;s goint to be send to the Crypto Broker</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a834</_id>
				<id>6</id>
				<title>Sends Contract Hash to Crypto Broker</title>
				<desc>Sends the contract hash to the Crypto Broker, this hash will be used as the contract Id</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a83a</_id>
				<id>7</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a840</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to pending payment.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2738fb3968867d2a809</upd_at>
		<_id>56e1e2738fb3968867d2a80a</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Broker submits an Offline Cash Merchandise</name>
		<desc>Crypto Broker submits an Offline Cash Merchandise to a Crypto Customer, this merchandise is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2748fb3968867d2a997</_id>
				<id>0</id>
				<title>Crypto Broker submits an Offline Cash Merchandise</title>
				<desc>Customer select a contract and submit merchandise.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a99d</_id>
				<id>1</id>
				<title>Process Submit Merchandise Request</title>
				<desc>Process request and starts the Submit Merchandise process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9a3</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9a9</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Broker Submit Offline Merchandise Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>broker submit offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9af</_id>
				<id>4</id>
				<title>Performs a De-stock Transaction</title>
				<desc>Performs a Cash De-stock Transaction.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>cash money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9b4</_id>
				<id>5</id>
				<title>Performs a Cash Withdrawal Transaction</title>
				<desc>Performs a Cash Withdrawal Transaction to perform a destock.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9ba</_id>
				<id>6</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the cash merchandise was submitted.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>broker submit offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9c0</_id>
				<id>7</id>
				<title>Sends Payment Notification to Crypto Customer</title>
				<desc>Sends the successful submit offline merchandise notification to Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9c6</_id>
				<id>8</id>
				<title>Gets the Crypto Customer Confirmation</title>
				<desc>Raises an event with the Crypto Customer Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9cc</_id>
				<id>9</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to merchandise submit.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2748fb3968867d2a990</upd_at>
		<_id>56e1e2748fb3968867d2a991</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Broker submits an Offline Bank Transfer Merchandise</name>
		<desc>Crypto Broker submits an Offline Bank Transfer to a Crypto Customer, this merchandise is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2748fb3968867d2a9d5</_id>
				<id>0</id>
				<title>Crypto Broker submits an Offline Bank Transfer Merchandise</title>
				<desc>Customer select a contract and submit merchandise.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9db</_id>
				<id>1</id>
				<title>Process Submit Merchandise Request</title>
				<desc>Process request and starts the Submit Merchandise process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9e1</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9e7</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Broker Submit Offline Merchandise Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>broker submit offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9ed</_id>
				<id>4</id>
				<title>Performs a De-stock Transaction</title>
				<desc>Performs a Bank De-stock Transaction.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>bank money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9f2</_id>
				<id>5</id>
				<title>Performs a Bank Withdrawal Transaction</title>
				<desc>Performs a Bank Withdrawal Transaction.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9f8</_id>
				<id>6</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the bank merchandise was submitted</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>broker submit offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a9fe</_id>
				<id>7</id>
				<title>Sends Payment Notification to Crypto Customer</title>
				<desc>Sends the successful submit offline merchandise notification to Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa04</_id>
				<id>8</id>
				<title>Gets the Crypto Customer Confirmation</title>
				<desc>Raises an event with the Crypto Customer Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa0a</_id>
				<id>9</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to merchandise submit.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2748fb3968867d2a9ce</upd_at>
		<_id>56e1e2748fb3968867d2a9cf</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer Acknowledge Online Merchandise</name>
		<desc>Broker receive an Online Merchandise from a Crypto Broker, this merchandise is associated to a Customer Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2748fb3968867d2aa13</_id>
				<id>0</id>
				<title>Incoming an Online merchandise</title>
				<desc>Raise an event when is incoming an online merchandise</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer ack online merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa19</_id>
				<id>1</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Acknowledge Online Merchandise Business Transaction with the merchandise associated to a contract data.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>customer ack online merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa1f</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa25</_id>
				<id>3</id>
				<title>Listen an incoming money event</title>
				<desc>Listens an incoming money notification.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>incoming intra user</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa2b</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the merchandise is incoming.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer ack online merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa31</_id>
				<id>5</id>
				<title>Sends Acknowledge Merchandise Notification to Crypto Broker</title>
				<desc>Sends the successful Acknowledge merchandise notification to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa37</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa3d</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to ready to close.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2748fb3968867d2aa0c</upd_at>
		<_id>56e1e2748fb3968867d2aa0d</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer Acknowledge Offline Merchandise</name>
		<desc>Customer receive an Offline Merchandise from a Crypto Broker, this payment is associated to a Customer Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2748fb3968867d2aa46</_id>
				<id>0</id>
				<title>Crypto Customer acknowledges merchandise</title>
				<desc>The crypto Customer acknowledges the incoming merchandise</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa4c</_id>
				<id>1</id>
				<title>Process Acknowledge Request</title>
				<desc>Process request and starts the acknowledge process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa52</_id>
				<id>2</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Ack Offline Merchandise Business Transaction with the payment associated to a contract data.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer ack offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa58</_id>
				<id>3</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa5e</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the merchandise is incoming.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer ack offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa64</_id>
				<id>5</id>
				<title>Sends Acknowledge Merchandise Notification to Crypto Broker</title>
				<desc>Sends the successful Acknowledge merchandise notification to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa6a</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa70</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to ready to close.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2748fb3968867d2aa3f</upd_at>
		<_id>56e1e2748fb3968867d2aa40</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Close a Purchase Contract</name>
		<desc>Creates and closes a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2748fb3968867d2aa78</_id>
				<id>0</id>
				<title>Start a Customer Broker Sale Contract closing</title>
				<desc>Start a Close Contract Business Transaction.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>user level business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa7e</_id>
				<id>1</id>
				<title>Gets the Negotiation ID</title>
				<desc>Gets the closed negotiation Id.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa84</_id>
				<id>2</id>
				<title>Sends Contract Hash to Crypto Broker</title>
				<desc>Sends the contract hash to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa8a</_id>
				<id>3</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2aa90</_id>
				<id>4</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to COMPLETED.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2aaa2</_id>
				<id>6</id>
				<title>Sends Contract Hash to Crypto Broker</title>
				<desc>Sends the contract hash to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2aaa8</_id>
				<id>7</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2aaae</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to COMPLETED.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>5703ea5b9da0016f17a5cd8e</upd_at>
		<_id>56e1e2748fb3968867d2aa73</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Add New Account</name>
		<desc>A customer registers a new bank account in the wallet.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2aab6</_id>
				<id>0</id>
				<title>inputs account registration</title>
				<desc>inputs account, currency and account type.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2aabc</_id>
				<id>1</id>
				<title>sends registration request</title>
				<desc>sends data to the wallet plugin to registrate the account.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2aac2</_id>
				<id>2</id>
				<title>registers account</title>
				<desc>registers account: account, currency and account type</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2aab0</upd_at>
		<_id>56e1e2758fb3968867d2aab1</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Deposit</name>
		<desc>A User Deposits a certain amount on a specific account.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2aaca</_id>
				<id>0</id>
				<title>request deposit transaction</title>
				<desc>inputs amount and selects account.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2aad0</_id>
				<id>1</id>
				<title>sends deposit request</title>
				<desc>sends data to the deposit plugin to make the transaction.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2aad6</_id>
				<id>2</id>
				<title>registers deposit transaction and sends credits to the wallet.</title>
				<desc>registers the transaction and send credits on the available and book balance of the account</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>deposit</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2aadc</_id>
				<id>3</id>
				<title>register credit on the wallet</title>
				<desc>makes credit on the balances of the account.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2aac4</upd_at>
		<_id>56e1e2758fb3968867d2aac5</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Withdraw</name>
		<desc>A User Withdraws a certain amount on a specific account.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2aae4</_id>
				<id>0</id>
				<title>request withdraw transaction</title>
				<desc>inputs amount and selects account.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2aaea</_id>
				<id>1</id>
				<title>sends withdraw request</title>
				<desc>sends data to the withdraw plugin to make the transaction.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2aaf0</_id>
				<id>2</id>
				<title>registers withdraw transaction and sends debits to the wallet.</title>
				<desc>registers the transaction and validates that the selected account has enough money and send debits to the available and book balance of the account</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>withdraw</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2aaf6</_id>
				<id>3</id>
				<title>register credit on the wallet</title>
				<desc>makes credit on the balances of the account.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2aade</upd_at>
		<_id>56e1e2758fb3968867d2aadf</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Balance Inquiry</name>
		<desc>returns the current available and book balance of an account.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2aafe</_id>
				<id>0</id>
				<title>balance inquiry</title>
				<desc>requests book and available balance of an account</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab04</_id>
				<id>1</id>
				<title>sends balance request</title>
				<desc>sends balance request to the wallet plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab0a</_id>
				<id>2</id>
				<title>returns balance of the account</title>
				<desc>return balance of the account.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2aaf8</upd_at>
		<_id>56e1e2758fb3968867d2aaf9</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Transaction History</name>
		<desc>returns the transaction history of an account.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2ab12</_id>
				<id>0</id>
				<title>transaction history request</title>
				<desc>requests list of transactions account</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab18</_id>
				<id>1</id>
				<title>sends transaction history request</title>
				<desc>sends balance request to the wallet plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab1e</_id>
				<id>2</id>
				<title>returns transaction history</title>
				<desc>returns transaction history sorted by date (from most recent to older).</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2ab0c</upd_at>
		<_id>56e1e2758fb3968867d2ab0d</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Hold</name>
		<desc>Holds a certain amount of money in the bank account</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2ab24</_id>
				<id>0</id>
				<title>request Hold</title>
				<desc>request a hold of the funds in an account</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab2a</_id>
				<id>1</id>
				<title>process hold transaction request</title>
				<desc>registers and sends holds funds on the available balance of the account</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>hold</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab30</_id>
				<id>2</id>
				<title>makes hold</title>
				<desc>processes the hold request by making a debit in the account.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2ab20</upd_at>
		<_id>56e1e2758fb3968867d2ab21</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Unhold</name>
		<desc>Unholds funds from an account that were previusly held by the hold transaction</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2ab36</_id>
				<id>0</id>
				<title>request unhold</title>
				<desc>request an unhold of the funds in an account</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab3c</_id>
				<id>1</id>
				<title>process hold transaction request</title>
				<desc>registers, validates that has enough funds held, and sends unhold funds on the available balance of the account</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>unhold</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab42</_id>
				<id>2</id>
				<title>makes unhhold</title>
				<desc>processes the unhold request by summing all the amount of the hold transactions previusly made in the account, then makes the credit.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2ab32</upd_at>
		<_id>56e1e2758fb3968867d2ab33</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Balance Inquiry</name>
		<desc>Returns the current Available and Book balances of the Cash Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2ab4a</_id>
				<id>0</id>
				<title>Balance inquiry</title>
				<desc>Requests both Book and Available balances of the wallet</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab50</_id>
				<id>1</id>
				<title>Sends balance request</title>
				<desc>Sends balance request to the Wallet plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>cash money</name>
				<layer>wallet module</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab56</_id>
				<id>2</id>
				<title>Fetches and returns balances</title>
				<desc>Consults database for current balances of the cash wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2ab44</upd_at>
		<_id>56e1e2758fb3968867d2ab45</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Transaction History</name>
		<desc>Returns the transaction history (Only deposits and withdrawals) of the cash wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2ab5e</_id>
				<id>0</id>
				<title>Transaction history inquiry</title>
				<desc>Requests list of transactions</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab64</_id>
				<id>1</id>
				<title>Sends transaction history request to cash wallet</title>
				<desc>Sends balance request to the cash wallet plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>cash money</name>
				<layer>wallet module</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab6a</_id>
				<id>2</id>
				<title>Retches and returns transaction history</title>
				<desc>Returns transaction history sorted by date DESC</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2ab58</upd_at>
		<_id>56e1e2758fb3968867d2ab59</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Deposit</name>
		<desc>A Fermat user deposits cash money on his Cash Money Reference Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2ab72</_id>
				<id>0</id>
				<title>User requests deposit transaction</title>
				<desc>User enters amount and memo</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab78</_id>
				<id>1</id>
				<title>Sends deposit request</title>
				<desc>Sends deposit data to the deposit plugin to make the transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>cash money</name>
				<layer>wallet module</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab7e</_id>
				<id>2</id>
				<title>Registers deposit transaction and sends credits to the wallet.</title>
				<desc>Tries to register a credit on the Available and Book balances of the wallet and, if succeded, registers the transaction internally</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>deposit</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab84</_id>
				<id>3</id>
				<title>Register credit on the Available and Book balances of the wallet</title>
				<desc>Applies a credit on the Available and Book balances of the wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2ab6c</upd_at>
		<_id>56e1e2758fb3968867d2ab6d</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Withdrawal</name>
		<desc>A Fermat user whithdraws cash money from his Cash Money Reference Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2ab8c</_id>
				<id>0</id>
				<title>User requests withdrawal transaction</title>
				<desc>User enters amount and memo</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab92</_id>
				<id>1</id>
				<title>Sends withdrawal request</title>
				<desc>Sends withdrawal data to the withdrawal plugin to make the transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>cash money</name>
				<layer>wallet module</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab98</_id>
				<id>2</id>
				<title>Registers withdrawal transaction and sends debit to the wallet.</title>
				<desc>Tries to register a debit on the Available and Book balances of the wallet and, if succeded, registers the transaction internally</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>withdrawal</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ab9e</_id>
				<id>3</id>
				<title>Register debit on the Available and Book balances of the wallet</title>
				<desc>Applies a debit on the Available and Book balances of the wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2ab86</upd_at>
		<_id>56e1e2758fb3968867d2ab87</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Hold</name>
		<desc>Holds (decrements available balance) an amount of cash money from the cash wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2aba4</_id>
				<id>0</id>
				<title>External plugin requests a hold of the funds from the cash wallet</title>
				<desc>For this, it sends a transaction UUID, an amount, a memo, and its own public key</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2abaa</_id>
				<id>1</id>
				<title>Receives hold transaction request</title>
				<desc>Registers hold transaction internally as an ACKNOWLEDGED transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>hold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2abb0</_id>
				<id>2</id>
				<title>Internal agent processes hold transaction request</title>
				<desc>Tries to hold funds in wallet, if succeded, changes internal status to CONFIRMED, otherwise REJECTED</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>hold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2abb6</_id>
				<id>3</id>
				<title>Tries to hold available funds</title>
				<desc>Processes the hold request by making a debit on the available balance of the cash wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2aba0</upd_at>
		<_id>56e1e2758fb3968867d2aba1</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Refuse Payment Request from Intra user</name>
		<desc>A Wallet&apos;s Intra User refuse a payment request sent by another actor.</desc>
		<prev>List Payment Request</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2ac44</_id>
				<id>0</id>
				<title>Select payment request record to refuse </title>
				<desc>The actor selects a payment request from the list and press deny button.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac4a</_id>
				<id>1</id>
				<title>Route request to payment request plugin</title>
				<desc>The module routes this payment request refuse to the Crypto Payment Request Plugin to reach the selected intra user.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac4f</_id>
				<id>2</id>
				<title>Route refuse to network service</title>
				<desc>The module routes this refuse to the network service to reach the selected intra user.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac55</_id>
				<id>3</id>
				<title>Call the intra user to deliver the refuse</title>
				<desc>The network service places a call to the intra user and then it delivers the refuse via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac5a</_id>
				<id>4</id>
				<title>Transport request</title>
				<desc>The payment request is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>5</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac60</_id>
				<id>5</id>
				<title>Receive the payment request</title>
				<desc>The network service receives the refuse and informs that to Request Crypto Payment Plugin.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>event</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac66</_id>
				<id>6</id>
				<title>Update the request status</title>
				<desc>The payment request is update with the status deny.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>crypto payment</name>
				<layer>request</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac6c</_id>
				<id>7</id>
				<title>Return payment request send list</title>
				<desc>The module returns the payement request send list.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac71</_id>
				<id>8</id>
				<title>List Send Payment Request</title>
				<desc>The wallet&apos;s user go to Payment Request menu and list payment request send, and show this status.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2ac3e</upd_at>
		<_id>56e1e2758fb3968867d2ac3f</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Accept  Payment Request From Intra user</name>
		<desc>A Wallet&apos;s Intra User accept a payment request sent by another actor.</desc>
		<prev>List Payment Request</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2ac79</_id>
				<id>0</id>
				<title>Select payment request receive and accept it</title>
				<desc>The customer selects a payment request from the receive list and press accept button.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac7f</_id>
				<id>1</id>
				<title>Route request acceptance to plugin</title>
				<desc>The module routes this acceptance to the Crypto Payment Request Plugin to apply the payment to the intra user actor.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac84</_id>
				<id>2</id>
				<title>Route acceptance to network service</title>
				<desc>The Crypto Payment Request Plugin routes this acceptance to the network service to inform the actor intra user about payment acceptance.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac89</_id>
				<id>3</id>
				<title>Route acceptance to Outgoing Intra User</title>
				<desc>The Crypto Payment Request Plugin notifies the outgoing intra user plugin to generate the send crypto transaction. And continuous workflow of sending btc an intra user actor </desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac8f</_id>
				<id>4</id>
				<title>Call the intra user to deliver the acceptance message</title>
				<desc>The network service places a call to the intra user and then it delivers the message via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac94</_id>
				<id>5</id>
				<title>Transport request</title>
				<desc>The acceptance message is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>6</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac9a</_id>
				<id>6</id>
				<title>Receive the acceptance notification</title>
				<desc>The network service receives the acceptance notification and informs that to Request Crypto Payment Plugin.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>event</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2aca0</_id>
				<id>7</id>
				<title>Update the Payment request</title>
				<desc>The payment request is updated  with the Request Action in state INFORM_APPROVAL .</desc>
				<type>end</type>
				<name>crypto payment</name>
				<layer>request</layer>
				<platfrm>CCP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2ac73</upd_at>
		<_id>56e1e2758fb3968867d2ac74</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Creates an Intra Wallet User</name>
		<desc>Creates an Intra Wallet User Identity.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2aca6</_id>
				<id>0</id>
				<title>Open the wallet to create a new Identity</title>
				<desc>The user open the Wallet User Identity and proceed to fill the requested data inside the form and press the save button.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2aca9</_id>
				<id>1</id>
				<title>Process Intra User Identity creation request</title>
				<desc>The module routes the data containing the name and profile picture to the  IntraWalletUserModule plugin. </desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2acac</_id>
				<id>2</id>
				<title>Process Intra User Identity creation request</title>
				<desc>The module routes the name and profile picture to the  IntraWalletIdentityPluginRoot  plugin.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2acb1</_id>
				<id>3</id>
				<title>Process Intra User Identity creation request</title>
				<desc>Within this plugin, two different keys are created, a public one and a private one, after that the plugin routes the data to the IntraWalletUserIdentityDao.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2acb4</_id>
				<id>4</id>
				<title>Creates the Intra User Identity</title>
				<desc>The dao  inserts the data in the DB.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2aca2</upd_at>
		<_id>56e1e2758fb3968867d2aca3</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Open Intra Wallet Community</name>
		<desc>List all discovered connections.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2acba</_id>
				<id>0</id>
				<title>Start </title>
				<desc>The user opens the Intra Wallet Community and the fragment proceeds to initialize all required components.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2acbf</_id>
				<id>1</id>
				<title>Processing the requested list </title>
				<desc>The module routes the requested list. </desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2acc4</_id>
				<id>2</id>
				<title>Routing the requested list.</title>
				<desc>The NS routes the request to the WS.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2acc7</_id>
				<id>3</id>
				<title>Processing the list</title>
				<desc>The ws gets the connected list of components and send it back to the ns</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2accc</_id>
				<id>4</id>
				<title>Getting the list of connected users.</title>
				<desc>The NS routes the request back to the module.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2acd1</_id>
				<id>5</id>
				<title>Sends the list back to the view</title>
				<desc>The module routes the requested list to the fragment.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2acd4</_id>
				<id>6</id>
				<title>Display the list of users </title>
				<desc>The fragment displays the list of discovered users.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2acb6</upd_at>
		<_id>56e1e2758fb3968867d2acb7</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Add Intra User Actor as a Wallet Contact</name>
		<desc>A Wallet&apos;s User sends a payment to an intra user is not your wallet contact.</desc>
		<prev>Connect with other intra user</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2768fb3968867d2ad1c</_id>
				<id>0</id>
				<title>Select Send btc options.</title>
				<desc>The wallet user selects Send btc options and write contact name in in the sending form, then select a intra user connection</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad22</_id>
				<id>1</id>
				<title>Convert connection as wallet contact</title>
				<desc>The module create a new contact through the Wallet Contact Middleware and send crypto address request for network services.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad28</_id>
				<id>2</id>
				<title>Call the intra user to deliver the address request</title>
				<desc>The network service places a call to the intra user and then it delivers the address request via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto addresses</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad2d</_id>
				<id>3</id>
				<title>Transport request</title>
				<desc>The address request is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>4</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad33</_id>
				<id>4</id>
				<title>Receive the address request</title>
				<desc>The network service receives the address request and informs that to Crypto Addresses Middleware.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>crypto addresses</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad37</_id>
				<id>5</id>
				<title>Get the address of intra user</title>
				<desc>Crypto Addresses Middleware gets a new address through the Crypto Address Manager and the return to Crypto Address Network Services.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad3d</_id>
				<id>6</id>
				<title>Call the Wallet Contacts middleware to deliver the intra user address</title>
				<desc>The network service places a call to the Wallet Contacts middleware and then it delivers the crypto address via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>crypto addresses</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad42</_id>
				<id>7</id>
				<title>Transport request</title>
				<desc>The crypto address is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>8</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad47</_id>
				<id>8</id>
				<title>Update wallet contact crypto address</title>
				<desc>The crypto address network services returns the address of the contact, which is updated in the database .</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad4c</_id>
				<id>9</id>
				<title>List wallets contacts</title>
				<desc>The wallet&apos;s user will contact list and select the new contact to view his address.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2768fb3968867d2ad16</upd_at>
		<_id>56e1e2768fb3968867d2ad17</_id>
	</proc>
	<proc>
		<platfrm>COR</platfrm>
		<name>Test Process</name>
		<desc>This is a process intended to test the workflow drawing</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2768fb3968867d2ad54</_id>
				<id>0</id>
				<title>Start step</title>
				<desc>This is the first step</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad59</_id>
				<id>1</id>
				<title>Next step</title>
				<desc>This is the first step, this one has a bifurcation, which can be parallel process or an &apos;if&apos;</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad5e</_id>
				<id>2</id>
				<title>True state</title>
				<desc>This step is executed if the sentence is true</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad63</_id>
				<id>3</id>
				<title>False state</title>
				<desc>This step is executed if the sentence is false, it loops back</desc>
				<type>activity</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad68</_id>
				<id>4</id>
				<title>Out of loop</title>
				<desc>This is out of the loop</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2768fb3968867d2ad4e</upd_at>
		<_id>56e1e2768fb3968867d2ad4f</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Distribution</name>
		<desc>Describes the process of distributing an issued asset to an user</desc>
		<prev>Asset Issuing</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2718fb3968867d2a2d9</_id>
				<id>0</id>
				<title>Process Start</title>
				<desc>Platform starts</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2de</_id>
				<id>1</id>
				<title>Asset Issuer Wallet</title>
				<desc>Starts by opening the Asset Issuer Wallet with positive balance of an asset</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2e4</_id>
				<id>2</id>
				<title>Asset Issuer Identity</title>
				<desc>Asset Issuer Identity is created and Issuer Actor is registered in P2P</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>asset issuer</name>
				<layer>identity</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2e9</_id>
				<id>3</id>
				<title>Asset User Selection</title>
				<desc>The Asset Issuer selects the previously connected asset user to distribute</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2ef</_id>
				<id>4</id>
				<title>Asset Distribution</title>
				<desc>We generate a Bitcoin Transaction using the genesis Transaction of this asset</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>asset distribution</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2f5</_id>
				<id>5</id>
				<title>Asset Distribution</title>
				<desc>The Digital Asset Metadata information containing asset and asset transaction is sent to user.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2fb</_id>
				<id>6</id>
				<title>Asset Distribution</title>
				<desc>The digital asset metadata is received by the user</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a301</_id>
				<id>7</id>
				<title>Asset Distribution</title>
				<desc>User validated metadata by requesting to BCH the Genesis Transaction op_return. Is compated with hash.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset reception</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a307</_id>
				<id>8</id>
				<title>Asset Distribution</title>
				<desc>The contract info is validated. OK or fail response is sent back to issuer</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a30d</_id>
				<id>9</id>
				<title>Asset Distribution</title>
				<desc>If user is ok, we broadcast the previously generated transaction to the Genesis Address. If not, we cancel the transaction and free the founds.</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<next>
					<id>21</id>
					<type>direct call</type>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a312</_id>
				<id>10</id>
				<title>Asset Distribution</title>
				<desc>Once the transaction is confirmed, we generate the debit in the issuer wallet and update stats.</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a317</_id>
				<id>11</id>
				<title>Asset Distribution</title>
				<desc>Once the transaction is confirmed, we generate the debit in the User wallet and update stats.</desc>
				<type>activity</type>
				<next>
					<id>19</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a31a</_id>
				<id>19</id>
				<title>End</title>
				<desc>End of proccess.</desc>
				<type>activity</type>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a320</_id>
				<id>20</id>
				<title>Process Interrupted</title>
				<desc>Transaction is rollbacked, and Asset is available again in the Issuer Wallet.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>asset distribution</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a326</_id>
				<id>21</id>
				<title>Asset not accepted</title>
				<desc>Due to poor network or invalidate contract, the asset is not accepted and rollbacked.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>asset distribution</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2718fb3968867d2a2d5</upd_at>
		<_id>56e1e2718fb3968867d2a2d6</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Redemption</name>
		<desc>Describes the process of redeeming an issued asset to a redeem point</desc>
		<prev>Asset Distribution</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2718fb3968867d2a32c</_id>
				<id>0</id>
				<title>Process Start</title>
				<desc>Platform starts</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a331</_id>
				<id>1</id>
				<title>Asset User Wallet</title>
				<desc>Starts by opening the Asset User Wallet with positive balance of an asset</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a337</_id>
				<id>2</id>
				<title>Asset User Identity</title>
				<desc>Asset User Identity is created and User Actor is registered in P2P</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>asset user</name>
				<layer>identity</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a33c</_id>
				<id>3</id>
				<title>Redeem Point Selection</title>
				<desc>The Asset User selects the previously connected redeem point to redeeem to</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a342</_id>
				<id>4</id>
				<title>Asset Redemption</title>
				<desc>We generate a Bitcoin Transaction using the genesis Transaction of this asset</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>user redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a348</_id>
				<id>5</id>
				<title>Asset Redemption</title>
				<desc>The Digital Asset Metadata information containing asset and asset transaction is sent to the Redeem Point.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a34e</_id>
				<id>6</id>
				<title>Asset Redemption</title>
				<desc>The digital asset metadata is received by the Redeem Point</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a354</_id>
				<id>7</id>
				<title>Asset Redemption</title>
				<desc>Redeem Points validated metadata by requesting to BCH the Genesis Transaction op_return. Is compared with hash.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>redeem point redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a35a</_id>
				<id>8</id>
				<title>Asset Redemption</title>
				<desc>The contract info is validated and the assets is from an Issuer we redeem from. OK or fail response is sent back to issuer</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a360</_id>
				<id>9</id>
				<title>Asset Redemption</title>
				<desc>If redeem point is ok, we broadcast the previously generated transaction to the Genesis Address. If not, we cancel the transaction and free the founds.</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<next>
					<id>21</id>
					<type>direct call</type>
				</next>
				<name>user redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a365</_id>
				<id>10</id>
				<title>Asset Redemption</title>
				<desc>Once the transaction is confirmed, we generate the debit in the User wallet and update stats.</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a36b</_id>
				<id>11</id>
				<title>Asset Redemption</title>
				<desc>Once the transaction is confirmed, we generate the credit in the Redeem point wallet and update stats.</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>direct call</type>
				</next>
				<name>redeem point wallet</name>
				<layer>wallet</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a371</_id>
				<id>12</id>
				<title>Asset Redemption</title>
				<desc>Since Issuer shares public Key, Issuer also received the transaction and update stats.</desc>
				<type>activity</type>
				<next>
					<id>13</id>
					<type>direct call</type>
				</next>
				<name>issuer redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a376</_id>
				<id>13</id>
				<title>Asset Redemption</title>
				<desc>Asset is recicled and available again in the Issuer Wallet to restart the process</desc>
				<type>activity</type>
				<next>
					<id>19</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a379</_id>
				<id>19</id>
				<title>End</title>
				<desc>End of process.</desc>
				<type>activity</type>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a37f</_id>
				<id>20</id>
				<title>Process Interrupted</title>
				<desc>Transaction is rollbacked, and Asset is available again in the Issuer Wallet.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>user redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a385</_id>
				<id>21</id>
				<title>Asset not accepted</title>
				<desc>Due to poor network or invalidate contract, the asset is not accepted and rollbacked.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>user redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2718fb3968867d2a328</upd_at>
		<_id>56e1e2718fb3968867d2a329</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer requests a connection to a Broker</name>
		<desc>A Crypto Customer sends a connection request to a Crypto Broker, in order to be able to see his products and start a negotiation</desc>
		<prev>Listing of Crypto Broker Identities</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2728fb3968867d2a4f1</_id>
				<id>0</id>
				<title>Broker selection and request submission</title>
				<desc>The Customer selects a Broker from the list of Brokers, and submits the request to make a connection</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a4f7</_id>
				<id>1</id>
				<title>Route request to Network Service</title>
				<desc>The module routes this request to the Network Service so that it reaches the selected Broker</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker community</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a4fd</_id>
				<id>2</id>
				<title>Call the Broker to deliver the request</title>
				<desc>The network service places a call to the broker, delivering the request via the Fermat Network.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a502</_id>
				<id>3</id>
				<title>Routing of the Customer&apos;s request through the network</title>
				<desc>The request is then transported through the communication layer, using one of the available channels</desc>
				<type>communication</type>
				<next>
					<id>4</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a508</_id>
				<id>4</id>
				<title>Request reception on the Broker&apos;s side</title>
				<desc>The Network Service receives the request and informs the Crypto Broker Actor</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>crypto broker</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a50e</_id>
				<id>5</id>
				<title>Request recording and notification</title>
				<desc>The request is saved and a notification to the Broker is generated</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a514</_id>
				<id>6</id>
				<title>Records the notification</title>
				<desc>The the notification is saved, and the OS core library is notified.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>event</type>
				</next>
				<name>notification</name>
				<layer>middleware</layer>
				<platfrm>PIP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a519</_id>
				<id>7</id>
				<title>Sends notification to the OS</title>
				<desc>The notification manager displays the notification to the OS, notifying the Broker of the connection request</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2728fb3968867d2a4ea</upd_at>
		<_id>56e1e2728fb3968867d2a4eb</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Update Negotiation Customer Broker</name>
		<desc>The Crypto Customer update negotiation with Crypto Broker.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2738fb3968867d2a6b7</_id>
				<id>0</id>
				<title>Start Customer Broker Update Negotiation Transaction</title>
				<desc>The Crypto Customer indicates to update negotiations with the selected Crypto Broker</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6bd</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to update negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6c3</_id>
				<id>2</id>
				<title>Manages the update of Negotiation</title>
				<desc>Create a transaction to manage the update negotiation Customer Broker</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6c8</_id>
				<id>3</id>
				<title>Update The Purchase Negotiation</title>
				<desc>Update the purchase negotiation of Customer</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6ce</_id>
				<id>4</id>
				<title>Process Sending Update Negotiation To Broker</title>
				<desc>Process Sending Update Negotiation To Broker</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6d4</_id>
				<id>5</id>
				<title>Sending Update Negotiation To Broker</title>
				<desc>Sending update negotiation to Broker for update Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>fermat message</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6da</_id>
				<id>6</id>
				<title>Receiving Update Negotiation From Customer</title>
				<desc>Receiving update negotiation from Customer for update Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6e0</_id>
				<id>7</id>
				<title>Process Receiving Update Negotiation From Customer</title>
				<desc>Process Receiving Update Negotiation From Customer and Request data Sale negotiation</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6e6</_id>
				<id>8</id>
				<title>Provides data of Sale negotiation</title>
				<desc>Provides data of Sale negotiation</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6ec</_id>
				<id>9</id>
				<title>Compare Date of Purchase Negotiation vs Sale Negotiation</title>
				<desc>Compare Date of Purchase Negotiation vs Sale Negotiation to maintain synchronization of Negotiation Customer-Broker.</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6f2</_id>
				<id>10</id>
				<title>Update The Sale Negotiation</title>
				<desc>If the data del Sale Negotiation are more updated than the negotiation Purchase keeps if not update</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6f8</_id>
				<id>11</id>
				<title>Sending Confirmation of Update Negotiation</title>
				<desc>Sending Confirmation of Update Negotiation to Customer</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>fermat message</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a6fe</_id>
				<id>12</id>
				<title>Receiving Confirmation of Update Negotiation</title>
				<desc>Receiving Confirmation of Update Negotiation From Broker</desc>
				<type>activity</type>
				<next>
					<id>13</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a704</_id>
				<id>13</id>
				<title>Process the Receive Confirmation of Update Negotiation</title>
				<desc>Process the Receive Confirmation of Update Negotiation</desc>
				<type>activity</type>
				<next>
					<id>14</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a70a</_id>
				<id>14</id>
				<title>Confirm the Update Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2738fb3968867d2a6b0</upd_at>
		<_id>56e1e2738fb3968867d2a6b1</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Update Negotiation Broker Customer</name>
		<desc>The Crypto Broker update negotiation with Crypto Customer.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2738fb3968867d2a713</_id>
				<id>0</id>
				<title>Start Customer Broker Update Negotiation Transaction</title>
				<desc>The Crypto Broker indicates to update negotiations with the selected Crypto Customer</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a719</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to update negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a71f</_id>
				<id>2</id>
				<title>Manages the update of Negotiation</title>
				<desc>Create a transaction to manage the update negotiation Broker Customer</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a725</_id>
				<id>3</id>
				<title>Update The Sale Negotiation</title>
				<desc>Update the Sale negotiation of Customer</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a72b</_id>
				<id>4</id>
				<title>Process Sending Update Negotiation To Customer</title>
				<desc>Process Sending Update Negotiation To Customer</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a731</_id>
				<id>5</id>
				<title>Sending Update Negotiation To Customer</title>
				<desc>Sending update negotiation to Customer for update Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a737</_id>
				<id>6</id>
				<title>Receiving Update Negotiation From Broker</title>
				<desc>Receiving update negotiation from Broker for update Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a73d</_id>
				<id>7</id>
				<title>Prosess Receiving Update Negotiation From Broker</title>
				<desc>Prosess Receiving Update Negotiation From Broker and Request data Purchase negotiation</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a742</_id>
				<id>8</id>
				<title>Provides data of Pruchase negotiation</title>
				<desc>Provides data of Purchase negotiation</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a748</_id>
				<id>9</id>
				<title>Compare Date of Sale Negotiation vs Purchase Negotiation</title>
				<desc>Compare Date of Sale Negotiation vs Purchase Negotiation to maintain synchronization of Negotiation Customer-Broker.</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a74e</_id>
				<id>10</id>
				<title>Update The Purchase Negotiation</title>
				<desc>If the data del Purchase Negotiation are more updated than the negotiation Purchase keeps if not update</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a754</_id>
				<id>11</id>
				<title>Sending Confirmation of Update Negotiation</title>
				<desc>Sending Confirmation of Update Negotiation to Broker</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a75a</_id>
				<id>12</id>
				<title>Receiving Confirmation of Update Negotiation</title>
				<desc>Receiving Confirmation of Update Negotiation From Customer</desc>
				<type>activity</type>
				<next>
					<id>13</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a760</_id>
				<id>13</id>
				<title>Process the Receive Confirmation of Update Negotiation</title>
				<desc>Process the Receive Confirmation of Update Negotiation</desc>
				<type>activity</type>
				<next>
					<id>14</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a766</_id>
				<id>14</id>
				<title>Confirm the Update Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2738fb3968867d2a70c</upd_at>
		<_id>56e1e2738fb3968867d2a70d</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Close Negotiation Customer Broker</name>
		<desc>The Crypto Customer update negotiation with Crypto Broker.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2738fb3968867d2a76f</_id>
				<id>0</id>
				<title>Start Customer Broker Close Negotiation Transaction</title>
				<desc>The Crypto Customer Acept all clause and it Close negotiations with the selected Crypto Broker</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a775</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to Close negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a77b</_id>
				<id>2</id>
				<title>Manages the Close of Negotiation</title>
				<desc>Create a transaction to manage the Close negotiation Customer Broker, If the merchandise is currency Crypto, requesting Crypto address actuality the Customer</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a780</_id>
				<id>3</id>
				<title>Close The Purchase Negotiation</title>
				<desc>If the merchandise is currency Crypto, add to information of Purchase Negotiation the Crypto address actuality the Customer and later Close the Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a786</_id>
				<id>4</id>
				<title>Process Sending Close Negotiation To Broker</title>
				<desc>Process Sending Close Negotiation To Broker</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a78c</_id>
				<id>5</id>
				<title>Sending Close Negotiation To Broker</title>
				<desc>Sending Close negotiation to Broker for Close Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a792</_id>
				<id>6</id>
				<title>Receiving Close Negotiation From Customer</title>
				<desc>Receiving Close negotiation from Customer for Close Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a798</_id>
				<id>7</id>
				<title>Process Receiving Close Negotiation From Customer</title>
				<desc>Process Receiving Close Negotiation From Customer. If the payment is currency Crypto, requesting Crypto address actuality the Broker</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a79e</_id>
				<id>8</id>
				<title>Close The Sale Negotiation</title>
				<desc>If the payment is currency Crypto, add to information of Sale Negotiation the Crypto address actuality the Broker and later Close the Sale Negotiation </desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7a4</_id>
				<id>9</id>
				<title>Sending Confirmation of Close Negotiation</title>
				<desc>Sending Confirmation of Close Negotiation to Customer</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7aa</_id>
				<id>10</id>
				<title>Receiving Confirmation of Close Negotiation</title>
				<desc>Receiving Confirmation of Close Negotiation From Broker</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7b0</_id>
				<id>11</id>
				<title>Process the Receive Confirmation of Close Negotiation</title>
				<desc>Process the Receive Confirmation of Close Negotiation</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7b6</_id>
				<id>12</id>
				<title>Confirm the Close Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2738fb3968867d2a768</upd_at>
		<_id>56e1e2738fb3968867d2a769</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Close Negotiation Broker Customer</name>
		<desc>The Crypto Broker update negotiation with Crypto Customer.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2738fb3968867d2a7bf</_id>
				<id>0</id>
				<title>Start Customer Broker Close Negotiation Transaction</title>
				<desc>The Crypto Broker Acept all clause and it Close negotiations with the selected Crypto Customer</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7c5</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to Close negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7cb</_id>
				<id>2</id>
				<title>Manages the Close of Negotiation</title>
				<desc>Create a transaction to manage the Close Negotiation Broker Customer. If the payment is currency Crypto, requesting Crypto address actuality the Broker</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7d1</_id>
				<id>3</id>
				<title>Close The Sale Negotiation</title>
				<desc>If the merchandise is currency Crypto, add to information of Sale Negotiation the Crypto address actuality the Broker and later Close the Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7d7</_id>
				<id>4</id>
				<title>Process Sending Close Negotiation To Customer</title>
				<desc>Process Sending Close Negotiation To Customer</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7dd</_id>
				<id>5</id>
				<title>Sending Close Negotiation To Customer</title>
				<desc>Sending Close negotiation to Customer for Close Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7e3</_id>
				<id>6</id>
				<title>Receiving Close Negotiation From Broker</title>
				<desc>Receiving Close negotiation from Broker for Close Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7e9</_id>
				<id>7</id>
				<title>Process Receiving Close Negotiation From Broker</title>
				<desc>Process Receiving Close Negotiation From Broker. If the merchandise is currency Crypto, requesting Crypto address actuality the Customer</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7ef</_id>
				<id>8</id>
				<title>Close The Purchase Negotiation</title>
				<desc>If the merchandise is currency Crypto, add to information of Purchase Negotiation the Crypto address actuality the Customer and later Close the Purchase Negotiation </desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7f5</_id>
				<id>9</id>
				<title>Sending Confirmation of Close Negotiation</title>
				<desc>Sending Confirmation of Close Negotiation to Customer</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a7fb</_id>
				<id>10</id>
				<title>Receiving Confirmation of Close Negotiation</title>
				<desc>Receiving Confirmation of Close Negotiation From Broker</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a801</_id>
				<id>11</id>
				<title>Process the Receive Confirmation of Close Negotiation</title>
				<desc>Process the Receive Confirmation of Close Negotiation</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a807</_id>
				<id>12</id>
				<title>Confirm the Close Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2738fb3968867d2a7b8</upd_at>
		<_id>56e1e2738fb3968867d2a7b9</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Broker Acknowledge Offline Payment</name>
		<desc>Broker receive an Offline Payment from a Crypto Customer, this payment is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2748fb3968867d2a926</_id>
				<id>0</id>
				<title>Crypto Broker acknowledges payment</title>
				<desc>The crypto broker acknowledges the incoming payment</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a92c</_id>
				<id>1</id>
				<title>Process Acknowledge Request</title>
				<desc>Process request and starts the acknowledge process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a932</_id>
				<id>2</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Offline Payment Business Transaction with the payment associated to a contract data.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>broker ack offline payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a938</_id>
				<id>3</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a93e</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate an incoming payment.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>broker ack offline payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a944</_id>
				<id>5</id>
				<title>Sends Acknowledge Payment Notification to Crypto Customer</title>
				<desc>Sends the successful Acknowledge payment notification to Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a94a</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a950</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to pending merchandise.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2748fb3968867d2a91f</upd_at>
		<_id>56e1e2748fb3968867d2a920</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Send Crypto to Intra user</name>
		<desc>A Wallet&apos;s Intra User sends a crypto to another intra user contact for a specific amount.</desc>
		<prev>List Wallet Contacts</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2abd6</_id>
				<id>0</id>
				<title>Select Intra User contact and send crypto</title>
				<desc>The customer selects a contact from the list and press send button, then complete Send forms and confirms the operation.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2abdc</_id>
				<id>1</id>
				<title>Route send crypto to outgoing intra user plugin</title>
				<desc>The module sends it to the outgoing intra user plugin to create the crypto transaction.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2abe2</_id>
				<id>2</id>
				<title>Route send crypto metadata to network service</title>
				<desc>The outgoing intra user plugin routes this crypto transaction to the crypto transmission network service to send metadata.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2abe8</_id>
				<id>3</id>
				<title>Route send crypto to Crypto Bitcoin Vault</title>
				<desc>The outgoing intra user plugin routes this crypto transaction to the Crypto Bitcoin Vault to send btc to another actor and debit amount to Available Balance.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2abee</_id>
				<id>4</id>
				<title>Send the crypto metadata</title>
				<desc>The network service sends the crypto metadata and informs that to Incoming Intra User Plugin.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>crypto transmission</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2abf3</_id>
				<id>5</id>
				<title>Transport request</title>
				<desc>The send metadata is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>6</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2abf9</_id>
				<id>6</id>
				<title>Receive the crypto metadata</title>
				<desc>The network service receives the crypto metadata and informs that to Incoming Intra User Plugin.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>event</type>
				</next>
				<name>crypto transmission</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2abfd</_id>
				<id>7</id>
				<title>Call the incoming intra user plugin to deliver the sends bitcoins</title>
				<desc>The crypto network bitcoin places a call to the incoming intra user plugin and then it delivers the sends crypto.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac03</_id>
				<id>8</id>
				<title>List Received Transaction</title>
				<desc>The wallet&apos;s user go to Home menu and list receive transactions.</desc>
				<type>end</type>
				<name>incoming intra user</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2abd0</upd_at>
		<_id>56e1e2758fb3968867d2abd1</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Issuing</name>
		<desc>Describes the process of issuing Assets by the actor Asset Issuer</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2718fb3968867d2a28b</_id>
				<id>0</id>
				<title>Process Start</title>
				<desc>Platform starts</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a291</_id>
				<id>1</id>
				<title>Asset Factory</title>
				<desc>Starts by opening the Asset Factory Sub App</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>asset factory</name>
				<layer>sub app</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a297</_id>
				<id>2</id>
				<title>Asset Issuer Identity</title>
				<desc>Asset Issuer Identity is created and Issuer Actor is registered in P2P</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>asset issuer</name>
				<layer>identity</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a29d</_id>
				<id>3</id>
				<title>Asset parameters definition</title>
				<desc>The Asset information is entered, including the value on bitcoins for each asset</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>asset factory</name>
				<layer>sub app</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2a3</_id>
				<id>4</id>
				<title>Transaction Asset Issuing</title>
				<desc>We revalidate we have enough founds in the wallet.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset factory</name>
				<layer>sub app</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2a9</_id>
				<id>5</id>
				<title>Transaction Asset Issuing</title>
				<desc>We validate the contract and properties defined are all valid for each asset.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2af</_id>
				<id>6</id>
				<title>Transaction Asset Issuing</title>
				<desc>We request the Genesis Address to the Asset Vault and register it in the Address Book.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2b5</_id>
				<id>7</id>
				<title>Transaction Asset Issuing</title>
				<desc>We lock the asset and generate the Digital Asset Metadata with its asses hash.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2bb</_id>
				<id>8</id>
				<title>Transaction Asset Issuing</title>
				<desc>We generate a Bitcoin transaction using the Outgoing Intra Actor plugin, which includes the op_return, the Genesis Amount and the Genesis Address.</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2c1</_id>
				<id>9</id>
				<title>Transaction Asset Issuing</title>
				<desc>We store the Genesis Transaction in the metadata, and wait for broadcasting of the transaction.</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2c7</_id>
				<id>10</id>
				<title>Transaction Asset Issuing</title>
				<desc>When transaction is registered to be On Block Chain, we finish the asset Issuing process.</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2cd</_id>
				<id>11</id>
				<title>End</title>
				<desc>The asset is received at the Asset Issuer Wallet.</desc>
				<type>activity</type>
				<name>asset factory</name>
				<layer>sub app</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a2d3</_id>
				<id>20</id>
				<title>Process Interrupted</title>
				<desc>A validation did not pass, or error was thrown. We rollback the process and Asset is again editable.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2718fb3968867d2a287</upd_at>
		<_id>56e1e2718fb3968867d2a288</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Broker Reference Wallet Installation</name>
		<desc>Wallet Store installation procedure for the Crypto Broker Reference Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2718fb3968867d2a38e</_id>
				<id>0</id>
				<title>User selects the Broker Wallet on the Wallet Store</title>
				<desc>The user enters the Wallet Store and selects the Crypto Broker Reference Wallet to install it</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>wallet store</name>
				<layer>sub app</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a394</_id>
				<id>1</id>
				<title>Wallet Store invokes the Wallet Manager Middleware Plugin</title>
				<desc>Notifies the Wallet Manager Middleware Plugin so it can install the Wallet</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>wallet store</name>
				<layer>sub app module</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a39a</_id>
				<id>2</id>
				<title>Wallet Manager Middleware Plugin processes installation request</title>
				<desc>Sends a request to the Wallet Resources Network Service, to gather the resources of the Reference Wallet to be installed</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>wallet manager</name>
				<layer>middleware</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3a0</_id>
				<id>3</id>
				<title>Wallet Resources Network Service downloads wallet&apos;s resources</title>
				<desc>Downloads the Crypto Broker Reference Wallet&apos;s resources, from the GitHub repository</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>wallet resources</name>
				<layer>network service</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3a6</_id>
				<id>4</id>
				<title>Processing of the Wallet&apos;s Navigation Structure</title>
				<desc>Processes the Navigation Structure of the Reference Wallet and fires an event which effectively registers the Reference Wallet</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>wallet runtime</name>
				<layer>engine</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3ac</_id>
				<id>5</id>
				<title>Setting the Crypto Broker Reference Wallet as Installed</title>
				<desc>Sets the Crypto Broker Reference Wallet as installed, and fires an event</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>event</type>
				</next>
				<name>wallet manager</name>
				<layer>middleware</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3b1</_id>
				<id>6</id>
				<title>Sub App Manager requests resources for the Wallet&apos;s Sub Apps</title>
				<desc>Sends a request to the Sub App Resources Network Service so it can download the necessary resources (Crypto Broker Identity and Crypto Customer Community Sub Apps)</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3b6</_id>
				<id>7</id>
				<title>Sub App Resources Network Service downloads Sub App&apos;s resources</title>
				<desc>Downloads resources for Crypto Broker Identity and Crypto Customer Community Sub Apps</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3bb</_id>
				<id>8</id>
				<title>Sub App Runtime parses the Navigation Structure and activates the Sub Apps</title>
				<desc>Processes the Navigation Structure of the Crypto Broker Identity and Crypto Customer Community Sub Apps and fires a event to activate them</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3c0</_id>
				<id>9</id>
				<title>Setting the Sub Apps as Installed</title>
				<desc>The Sub App Manager Middleware sets the Sub Apps as Installed</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2718fb3968867d2a387</upd_at>
		<_id>56e1e2718fb3968867d2a388</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Customer Reference Wallet Installation</name>
		<desc>Wallet Store installation procedure for the Crypto Customer Reference Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2718fb3968867d2a3c9</_id>
				<id>0</id>
				<title>User selects the Customer Wallet on the Wallet Store</title>
				<desc>The user enters the Wallet Store and selects the Crypto Customer Reference Wallet to install it</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>wallet store</name>
				<layer>sub app</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3cf</_id>
				<id>1</id>
				<title>Wallet Store invokes the Wallet Manager Middleware Plugin</title>
				<desc>The Wallet Store notifies the Wallet Manager Middleware Plugin so it can install the Wallet</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>wallet store</name>
				<layer>sub app module</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3d5</_id>
				<id>2</id>
				<title>Wallet Manager Middleware Plugin processes installation request</title>
				<desc>Sends a request to the Wallet Resources Network Service, to gather the resources of the Reference Wallet to be installed</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>wallet manager</name>
				<layer>middleware</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3db</_id>
				<id>3</id>
				<title>Wallet Resources Network Service downloads wallet&apos;s resources</title>
				<desc>Downloads the Crypto Customer Reference Wallet&apos;s resources, from the GitHub repository</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>wallet resources</name>
				<layer>network service</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3e1</_id>
				<id>4</id>
				<title>Processing of the Wallet&apos;s Navigation Structure</title>
				<desc>Processes the Navigation Structure of the Reference Wallet and fires an event which effectively registers this</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>wallet runtime</name>
				<layer>engine</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3e7</_id>
				<id>5</id>
				<title>Setting the Crypto Customer Reference Wallet as Installed</title>
				<desc>Sets the Crypto Customer Reference Wallet as installed, and fires an event</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>event</type>
				</next>
				<name>wallet manager</name>
				<layer>middleware</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3ec</_id>
				<id>6</id>
				<title>Sub App Manager requests resources for the Wallet&apos;s Sub Apps</title>
				<desc>Sends a request to the Sub App Resources Network Service so it can download the necessary resources (Crypto Customer Identity and Crypto Customer Community Sub Apps)</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3f1</_id>
				<id>7</id>
				<title>Sub App Resources Network Service downloads Sub App&apos;s resources</title>
				<desc>Downloads resources for Crypto Customer Identity and Crypto Customer Community Sub Apps</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3f6</_id>
				<id>8</id>
				<title>Sub App Runtime parses the Navigation Structure and activates the Sub Apps</title>
				<desc>Processes the Navigation Structure of the Crypto Customer Identity and Crypto Customer Community Sub Apps and fires a event to activate them</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a3fb</_id>
				<id>9</id>
				<title>Setting the Sub Apps as Installed</title>
				<desc>The Sub App Manager Middleware sets the Sub Apps as Installed</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2718fb3968867d2a3c2</upd_at>
		<_id>56e1e2718fb3968867d2a3c3</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Listing of Crypto Broker Identities</name>
		<desc>Shows a list of Crypto Broker Identities</desc>
		<prev>Crypto Broker Identity creation</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2718fb3968867d2a42e</_id>
				<id>0</id>
				<title>Request list of identities</title>
				<desc>The Broker requests the list of his identities</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2718fb3968867d2a434</_id>
				<id>1</id>
				<title>Process the request of the list of Identities</title>
				<desc>The Crypto Broker Identity Sub App Module processes the request</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a43a</_id>
				<id>2</id>
				<title>Fetches and returns the list of identities</title>
				<desc>The Crypto Broker Identity returns the list of identities associated to the broker</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a440</_id>
				<id>3</id>
				<title>Returns the list of Identities</title>
				<desc>Returns the list of Identities to the Identity Sub App</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a446</_id>
				<id>4</id>
				<title>Shows the list of Identities</title>
				<desc>Shows the Broker the list of his Identities</desc>
				<type>end</type>
				<name>crypto broker identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2718fb3968867d2a427</upd_at>
		<_id>56e1e2718fb3968867d2a428</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Listing of Crypto Customer Identities</name>
		<desc>Shows a list of Crypto Customer Identities</desc>
		<prev>Crypto Customer Identity creation</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2728fb3968867d2a44f</_id>
				<id>0</id>
				<title>Request list of identities</title>
				<desc>The Customer requests the list of his identities</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a455</_id>
				<id>1</id>
				<title>Process the request of the list of Identities</title>
				<desc>The Crypto Customer Identity Sub App Module processes the request</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a45b</_id>
				<id>2</id>
				<title>Fetches and returns the list of identities</title>
				<desc>The Crypto Customer Identity returns the list of identities associated to the Customer</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a461</_id>
				<id>3</id>
				<title>Returns the list of Identities</title>
				<desc>Returns the list of Identities to the Identity Sub App</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a467</_id>
				<id>4</id>
				<title>Shows the list of Identities</title>
				<desc>Shows the Customer the list of his Identities</desc>
				<type>end</type>
				<name>crypto customer identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2728fb3968867d2a448</upd_at>
		<_id>56e1e2728fb3968867d2a449</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Broker Identity - Reference Wallet association</name>
		<desc>A Broker associates one of his Identities to a Crypto Broker Reference Wallet</desc>
		<prev>List of Crypto Broker Identities</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2728fb3968867d2a470</_id>
				<id>0</id>
				<title>Broker selects a Crypto Broker Reference Wallet and requests the list of Identities</title>
				<desc>The Broker enter in a Crypto Broker Reference Wallet and requests the list of his identities to associate with this wallet</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a476</_id>
				<id>1</id>
				<title>Process the request of the list of Identities</title>
				<desc>Wallet module receives the request from the Reference Wallet to obtain the list of Identities. The module forwards the request to the Crypto Broker Identity Plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a47c</_id>
				<id>2</id>
				<title>Return the Identities list</title>
				<desc>Crypto broker Identity returns the list of Identities</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a482</_id>
				<id>3</id>
				<title>Return Identities list</title>
				<desc>The Crypto Broker Wallet Module returns the list of Identities</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a488</_id>
				<id>4</id>
				<title>Reference Wallet shows the list of Identities andthe Broker selects one</title>
				<desc>Displays the list to the Broker, he then selects one, requesting the wallet module to commit the association</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a48e</_id>
				<id>5</id>
				<title>Processing of the Wallet - Identity association request</title>
				<desc>Wallet Module receives the request and indicates the Crypto Broker Actor Plugin to create the association</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a494</_id>
				<id>6</id>
				<title>Wallet - Identity association</title>
				<desc>The Wallet module registers the Wallet - Identity association in its database</desc>
				<type>end</type>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2728fb3968867d2a469</upd_at>
		<_id>56e1e2728fb3968867d2a46a</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer Identity - Reference Wallet association</name>
		<desc>A Customer associates one of his Identities to a Crypto Customer Reference Wallet</desc>
		<prev>List of Crypto Customer Identities</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2728fb3968867d2a49d</_id>
				<id>0</id>
				<title>Customer selects a Crypto Customer Reference Wallet and requests the list of Identities</title>
				<desc>The Customer enter in a Crypto Customer Reference Wallet and requests the list of his identities to associate with this wallet</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a4a3</_id>
				<id>1</id>
				<title>Process the request of the list of Identities</title>
				<desc>Wallet module receives the request from the Reference Wallet to obtain the list of Identities. The module forwards the request to the Crypto Customer Identity Plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a4a9</_id>
				<id>2</id>
				<title>Return the Identities list</title>
				<desc>Crypto Customer Identity returns the list of Identities</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a4af</_id>
				<id>3</id>
				<title>Return Identities list</title>
				<desc>The Crypto Customer Wallet Module returns the list of Identities</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a4b5</_id>
				<id>4</id>
				<title>Reference Wallet shows the list of Identities and the Customer selects one</title>
				<desc>Displays the list to the Customer, he then selects one, requesting the wallet module to commit the association</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a4bb</_id>
				<id>5</id>
				<title>Processing of the Wallet - Identity association request</title>
				<desc>Wallet Module receives the request and indicates the Crypto Customer Actor Plugin to create the association</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a4c1</_id>
				<id>6</id>
				<title>Wallet - Identity association</title>
				<desc>The Wallet module registers the Wallet - Identity association in its database</desc>
				<type>end</type>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2728fb3968867d2a496</upd_at>
		<_id>56e1e2728fb3968867d2a497</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Publishing the Crypto Broker Identity</name>
		<desc>The Broker publishes his Identity, making it visible to the Fermat Network</desc>
		<prev>Listing of Crypto Broker Identities</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2728fb3968867d2a4ca</_id>
				<id>0</id>
				<title>Broker selects an Identity and selects &apos;Publish&apos;</title>
				<desc>The Broker selects one of his associated identities and publishes it. This requests the wallet module to change the state of this identity to Public</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a4d0</_id>
				<id>1</id>
				<title>Forward the request to the actor in order to publish the identity</title>
				<desc>The Crypto Broker Identity Sub App Module forwards this request to the Crypto Broker Actor</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a4d6</_id>
				<id>2</id>
				<title>Changes the status of the Identity to Public</title>
				<desc>The Crypto Broker Actor modifies the status of the Identity to Public</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a4dc</_id>
				<id>3</id>
				<title>Commits status change in database</title>
				<desc>The Crypto Broker Identity Plugin changes its database to reflect the new Public status of the selected Identity</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a4e2</_id>
				<id>4</id>
				<title>Sends the Identity to the Actor Network Service</title>
				<desc>The Crypto Broker Actor Plugin sends the Identity&apos;s Information to the Actor Network Service</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a4e8</_id>
				<id>5</id>
				<title>Consults the details of the identity to publish</title>
				<desc>The Crypto Broker Actor Network Seervice consults the details of the identity to publish and finally sends it to the Fermat Network</desc>
				<type>end</type>
				<name>crypto broker</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2728fb3968867d2a4c3</upd_at>
		<_id>56e1e2728fb3968867d2a4c4</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Broker accepts a connection from a Customer</name>
		<desc>A Crypto Broker accepts a connection request send by a Crypto Customer</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2728fb3968867d2a522</_id>
				<id>0</id>
				<title>Request list of Crypto Customers waiting for connection</title>
				<desc>The Broker requests a list of Crypto Customers waiting to connect to him</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a528</_id>
				<id>1</id>
				<title>Forward request of list of Crypto Customers waiting for connection</title>
				<desc>The module routes this request to the Actor Plugin to get the list</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a52e</_id>
				<id>2</id>
				<title>Returns list of Crypto Customers waiting for connection</title>
				<desc>Plugin consults its database to get the Crypto Customers waiting for connection</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a534</_id>
				<id>3</id>
				<title>Return the list of Crypto Customers waiting for connection</title>
				<desc>The module returns the list of Crypto Customers waiting for connection</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a53a</_id>
				<id>4</id>
				<title>Customer selection from returned Customer list</title>
				<desc>Shows the Broker the list of Crypto Customers waiting for connection so that he can select one to accept</desc>
				<type>start</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a540</_id>
				<id>5</id>
				<title>Register the acceptance of the connection</title>
				<desc>The Crypto Customer Community Module routes this request to the Actor so it can register the new connection</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a546</_id>
				<id>6</id>
				<title>Register the new connection in database</title>
				<desc>Changes in database the state of the connection to Accepted, while also notifying the Network Service to forward the change to the Crypto Customer</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a54c</_id>
				<id>7</id>
				<title>Sends the message of the accepted connection to the Crypto Customer</title>
				<desc>Forwards the change of state to the Crypto Customer&apos;s device, that the connection request has been accepted</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>fermat message</type>
				</next>
				<name>crypto customer</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a552</_id>
				<id>8</id>
				<title>Receives the accepted changed state</title>
				<desc>Receives the state change of the acceptance of the connection by the Broker, while also sending an event to the OS</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>event</type>
				</next>
				<name>crypto customer</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a557</_id>
				<id>9</id>
				<title>Sends notification to the OS</title>
				<desc>Sends the notification to the OS, to notify the Customer of the state change</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2728fb3968867d2a51b</upd_at>
		<_id>56e1e2728fb3968867d2a51c</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Bank Account Restock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2728fb3968867d2a560</_id>
				<id>0</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Broker indicates he want to increase  the stock of merchandise in Bank indicating the amount and account concept.</desc>
				<type>activity</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a566</_id>
				<id>1</id>
				<title>Create a Restock Business Transaction</title>
				<desc>Process the request and execute a Bank Money Restock Business Transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Bank Money Restock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a56c</_id>
				<id>2</id>
				<title>CBP-Business Transaction-Bank Money Restock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Bank Money Restock</name>
				</next>
				<name>bank money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a572</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Bank Money Restock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Hold</name>
				</next>
				<name>bank money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a578</_id>
				<id>4</id>
				<title>BNK-Bank Hold Transaction</title>
				<desc>Records the transaction and generates a debit to the Available Balance.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>hold</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a57e</_id>
				<id>5</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and credit records Available</desc>
				<type>activity</type>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2728fb3968867d2a559</upd_at>
		<_id>56e1e2728fb3968867d2a55a</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Bank Account Destock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2728fb3968867d2a587</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Bank Money Destock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a58d</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Bank. Then indicates the amount and account concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a593</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Bank Money Destock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a599</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Bank Money Destock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Bank Money Destock</name>
				</next>
				<name>bank money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a59f</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Bank Money Destock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>bank money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a5a5</_id>
				<id>5</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and debit records Available</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Unhold</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a5ab</_id>
				<id>6</id>
				<title>BNK-Bank UnHold Transaction</title>
				<desc>Records the transaction and generates a credit to the Available Balance.</desc>
				<type>activity</type>
				<name>unhold</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2728fb3968867d2a580</upd_at>
		<_id>56e1e2728fb3968867d2a581</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Cash Restock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2728fb3968867d2a5b4</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Cash Money Restock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a5ba</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Cash. Then indicates the amount and concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a5c0</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Cash Money Restock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a5c6</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Cash Money Restock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>cash money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a5cc</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Cash Money Restock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Hold</name>
				</next>
				<name>cash money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a5d2</_id>
				<id>5</id>
				<title>CSH-Bank Hold Transaction</title>
				<desc>Records the transaction and generates a debit to the Available Balance.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Reference Wallet</name>
				</next>
				<name>hold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a5d8</_id>
				<id>6</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and credit records Available</desc>
				<type>activity</type>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2728fb3968867d2a5ad</upd_at>
		<_id>56e1e2728fb3968867d2a5ae</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Cash Destock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2728fb3968867d2a5e1</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Cash Money Destock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a5e7</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Cash. Then indicates the amount and concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a5ed</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Cash Money Destock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a5f3</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Cash Money Destock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Cash Money Destock</name>
				</next>
				<name>cash money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a5f9</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Cash Money Destock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>cash money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a5ff</_id>
				<id>5</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and debit records Available</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Unhold</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a604</_id>
				<id>6</id>
				<title>CSH-Cash UnHold Transaction</title>
				<desc>Records the transaction and generates a credit to the Available Balance.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56e1e2728fb3968867d2a5da</upd_at>
		<_id>56e1e2728fb3968867d2a5db</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Restock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2728fb3968867d2a60d</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Crypto Money Restock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a613</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Crypto. Then indicates the amount and concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a619</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Crypto Money Restock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a61f</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Crypto Money Restock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Crypto Money Restock</name>
				</next>
				<name>crypto money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a625</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Crypto Money Restock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Hold</name>
				</next>
				<name>crypto money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a62b</_id>
				<id>5</id>
				<title>CCP-Crypto Hold Transaction</title>
				<desc>Records the transaction and generates a debit to the Available Balance.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>hold</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2728fb3968867d2a630</_id>
				<id>6</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and credit records Available</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56e1e2728fb3968867d2a606</upd_at>
		<_id>56e1e2728fb3968867d2a607</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Destock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2728fb3968867d2a639</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Crypto Money Destock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a63f</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Crypto. Then indicates the amount and concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a645</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Crypto Money Destock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a64b</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Crypto Money Destock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Crypto Money Destock</name>
				</next>
				<name>crypto money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a651</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Cash Money Destock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a657</_id>
				<id>5</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and debit records Available</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Unhold</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a65d</_id>
				<id>6</id>
				<title>CCP-Crypto UnHold Transaction</title>
				<desc>Records the transaction and generates a credit to the Available Balance.</desc>
				<type>activity</type>
				<name>unhold</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2728fb3968867d2a632</upd_at>
		<_id>56e1e2728fb3968867d2a633</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Open a Sale Contract</name>
		<desc>Creates and opens a Customer- Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2738fb3968867d2a849</_id>
				<id>0</id>
				<title>Start a Sale Contract beetwen a Broker and a Customer</title>
				<desc>Start a Open Contract Business Transaction.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>user level business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a84f</_id>
				<id>1</id>
				<title>Gets the Negotiation ID</title>
				<desc>Gets the ID of th closed negotiation.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a855</_id>
				<id>2</id>
				<title>Creates a Open Contract Business Transaction</title>
				<desc>Creates a Open Contract Business Transaction with the closed negotiation data.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>open contract</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a85b</_id>
				<id>3</id>
				<title>Gets the Negotiation clauses</title>
				<desc>Gets the Clauses associated to the ID of the closed negotiation.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a861</_id>
				<id>4</id>
				<title>Creates a new Contract Record</title>
				<desc>Creates a new Contract Record with the Negotiation data.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>open contract</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2738fb3968867d2a867</_id>
				<id>5</id>
				<title>Creates a new Customer Broker Sale Contract</title>
				<desc>Creates a new Customer Broker Sale Contract with the negotiation data.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a86d</_id>
				<id>6</id>
				<title>Sends Contract Hash to a Crypto Customer</title>
				<desc>Sends the contract hash to a Crypto Customer, this hash will use as the contract Id</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a873</_id>
				<id>7</id>
				<title>Gets the Crypto Customer Confirmation</title>
				<desc>Raises an event with the Crypto Customer Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a879</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to pending payment.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2738fb3968867d2a842</upd_at>
		<_id>56e1e2738fb3968867d2a843</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer sends an Online Payment</name>
		<desc>Customer sends an Online Payment to a Crypto Broker; this payment is associated to a Customer Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2748fb3968867d2a882</_id>
				<id>0</id>
				<title>Customer sends online payment</title>
				<desc>Customer select a contract and send a payment.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a888</_id>
				<id>1</id>
				<title>Process Payment Request</title>
				<desc>Process request and starts the payment process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a88e</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a894</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Online Payment Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a89a</_id>
				<id>4</id>
				<title>Sends the Online Payment</title>
				<desc>Sends the Online Payment to a Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a8a0</_id>
				<id>5</id>
				<title>Verifies the Transaction Status</title>
				<desc>Verifies the Crypto Status until this is confirmed.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a8a6</_id>
				<id>6</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the payment was submitted.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>customer online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a8ac</_id>
				<id>7</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a8b7</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to submit payment.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2748fb3968867d2a87b</upd_at>
		<_id>56e1e2748fb3968867d2a87c</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer sends an Offline Payment</name>
		<desc>Customer sends an Offline Payment to a Crypto Broker, this payment is associated to a Customer Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2748fb3968867d2a8c0</_id>
				<id>0</id>
				<title>Customer sends offline payment</title>
				<desc>Customer select a contract and send payment.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a8c6</_id>
				<id>1</id>
				<title>Process Payment Request</title>
				<desc>Process request and starts the payment process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a8cc</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a8d2</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Offline Payment Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer offline payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a8d8</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the payment was submitted.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer offline payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a8de</_id>
				<id>5</id>
				<title>Sends Payment Notification to Crypto Broker</title>
				<desc>Sends the sucessful payment notification to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a8e4</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a8ea</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to payment submit.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2748fb3968867d2a8b9</upd_at>
		<_id>56e1e2748fb3968867d2a8ba</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Broker Acknowledge Online Payment</name>
		<desc>Broker receive an Online Payment from a Crypto Customer, this payment is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2748fb3968867d2a8f3</_id>
				<id>0</id>
				<title>Incoming an Online payment</title>
				<desc>Raise an event when incoming an online payment</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a8f9</_id>
				<id>1</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Online Payment Business Transaction with the payment associated to a contract data.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>broker ack online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a8ff</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a905</_id>
				<id>3</id>
				<title>Listen an incoming money event</title>
				<desc>Listen an incoming money event that indicates that a online transaction is complete.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>incoming intra user</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a90b</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate an incoming payment.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>broker ack online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a911</_id>
				<id>5</id>
				<title>Sends Acknowledge Payment Notification to Crypto Customer</title>
				<desc>Sends the successful Acknowledge payment notification to Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a917</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a91d</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to pending merchandise.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2748fb3968867d2a8ec</upd_at>
		<_id>56e1e2748fb3968867d2a8ed</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto broker submits an Online Merchandise</name>
		<desc>Crypto Broker submits an Online merchandise to a Customer, this merchandise is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2748fb3968867d2a959</_id>
				<id>0</id>
				<title>Cryto Broker submits online merchandise</title>
				<desc>Crypto Broker selects a contract and submits merchandise.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a95f</_id>
				<id>1</id>
				<title>Process Payment Request</title>
				<desc>Process request and starts the submit process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a965</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a96b</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Broker Submit Online Merchandise Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>broker submit online merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a971</_id>
				<id>4</id>
				<title>Submit the Online Merchandise</title>
				<desc>Submit the Online Merchandise to a Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a977</_id>
				<id>5</id>
				<title>Verifies the Transaction Status</title>
				<desc>Verifies the Crypto Status until this is confirmed.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a97d</_id>
				<id>6</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the merchandise is submitted.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>customer online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a983</_id>
				<id>7</id>
				<title>Gets the Crypto Customer Confirmation</title>
				<desc>Raises an event with the Crypto Customer Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2748fb3968867d2a98e</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to submit merchandise.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2748fb3968867d2a952</upd_at>
		<_id>56e1e2748fb3968867d2a953</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Unhold</name>
		<desc>Unholds (increments available balance) an amount of cash money from the cash wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2abbc</_id>
				<id>0</id>
				<title>External plugin requests am unhold of the funds from the cash wallet</title>
				<desc>For this, it sends a transaction UUID, an amount, a memo, and its own public key</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2abc2</_id>
				<id>1</id>
				<title>Receives unhold transaction request</title>
				<desc>Registers unhold transaction internally as an ACKNOWLEDGED transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>unhold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2abc8</_id>
				<id>2</id>
				<title>Internal agent processes unhold transaction request</title>
				<desc>Tries to unhold funds in wallet, if succeded, changes internal status to CONFIRMED, otherwise REJECTED</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>unhold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2abce</_id>
				<id>3</id>
				<title>Tries to unhold available funds</title>
				<desc>Processes the unhold request by making a debit on the available balance of the cash wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2abb8</upd_at>
		<_id>56e1e2758fb3968867d2abb9</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Send Payment Request to Intra user</name>
		<desc>A Wallet&apos;s Intra User sends a payment request to another intra user contact to request payment for a specific amount.</desc>
		<prev>List Wallet Contacts</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2758fb3968867d2ac0f</_id>
				<id>0</id>
				<title>Select Intra User contact and submit payment request</title>
				<desc>The customer selects a contact from the list and submits the payment request.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac15</_id>
				<id>1</id>
				<title>Route Send to Outgoing Intra Actor Plugin</title>
				<desc>The module routes this crypto send to the Outgoing Intra Actor Plugin to send the actor selected.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac1a</_id>
				<id>2</id>
				<title>Send metadata to network service</title>
				<desc>The Outgoing Intra Actor plugin routes the send metadata to the network service to send payment information to actor selected.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac20</_id>
				<id>3</id>
				<title>Call the intra user to deliver the payment request</title>
				<desc>The network service places a call to the intra user and then it delivers the payment request via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac25</_id>
				<id>4</id>
				<title>Transport request</title>
				<desc>The payment request is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>5</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac2b</_id>
				<id>5</id>
				<title>Receive the payment request</title>
				<desc>The network service receives the payment request and informs that to Request Crypto Payment Plugin.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>event</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac31</_id>
				<id>6</id>
				<title>Records the request</title>
				<desc>The payment request is saved with the type received and associated to intra user actor .</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>crypto payment</name>
				<layer>request</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac37</_id>
				<id>7</id>
				<title>Return payment request list</title>
				<desc>The module returns the payement request receive list.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2758fb3968867d2ac3c</_id>
				<id>8</id>
				<title>List Received Payment Request</title>
				<desc>The wallet&apos;s user go to Payment Request menu and list payment request receive.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2ac09</upd_at>
		<_id>56e1e2758fb3968867d2ac0a</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Open the Intra Wallet Community Connections</name>
		<desc>List all connected users.</desc>
		<prev>Open Intra Wallet Community</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2768fb3968867d2acda</_id>
				<id>0</id>
				<title>Start </title>
				<desc>The user opens the Community Connections and the fragment proceeds to initialize all required components.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2acdf</_id>
				<id>1</id>
				<title>Processing the requested list </title>
				<desc>The module routes the requested list to the IntraWalletUser plugin.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ace4</_id>
				<id>2</id>
				<title>Routing the requested list.</title>
				<desc>The plugin routes the request to the IntraWalletUserDao.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ace7</_id>
				<id>3</id>
				<title>Processing the list</title>
				<desc>The list is retrived from the DB and send back to the plugin.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2acec</_id>
				<id>4</id>
				<title>Getting the list of connected users.</title>
				<desc>The plugin send the request back to the module.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2acf1</_id>
				<id>5</id>
				<title>Sends the list back to the view</title>
				<desc>The module routes the requested list to the fragment.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2acf4</_id>
				<id>6</id>
				<title>Display list of users</title>
				<desc>The fragment displays the list of connected users.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2758fb3968867d2acd6</upd_at>
		<_id>56e1e2758fb3968867d2acd7</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Open Intra Wallet Community Requested Connections</name>
		<desc>List all users pending for acceptance.</desc>
		<prev>Open Intra Wallet Community</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2768fb3968867d2acfa</_id>
				<id>0</id>
				<title>Start </title>
				<desc>The user opens the Community Request Connections and the fragment proceeds to initialize all required components.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2acff</_id>
				<id>1</id>
				<title>Processing the requested list of users pending for acceptance. </title>
				<desc>The module routes the requested list to the IntraWalletUserActor plugin.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad04</_id>
				<id>2</id>
				<title>Routing the requested list.</title>
				<desc>The plugin routes the request to the IntraWalletUserDao.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad07</_id>
				<id>3</id>
				<title>Processing the list</title>
				<desc>The list is retrived from the DB and send back to the plugin.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad0c</_id>
				<id>4</id>
				<title>Getting the list of connected users.</title>
				<desc>The plugin send the request back to the module.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad11</_id>
				<id>5</id>
				<title>Sends the list back to the view</title>
				<desc>The module routes the requested list to the fragment.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2768fb3968867d2ad14</_id>
				<id>6</id>
				<title>Display the list of users. </title>
				<desc>The fragment displays the list of users pending for acceptance.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2768fb3968867d2acf6</upd_at>
		<_id>56e1e2768fb3968867d2acf7</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Transmission</name>
		<desc>Describes the process of transmitting an asset from and to an specific actor. The process involves delivering metadata, crypto transactions and statistics.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d093cadf29239cbf79</_id>
				<id>0</id>
				<title>Device A. Process Start</title>
				<desc>User selects Transmission operation to execute. Valids are: Asset Transfer \b Asset Redemption \b Asset Distribution.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>asset user</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56fa81d193cadf29239cbf7e</_id>
				<id>1</id>
				<title>Device A. Creation of Transaction</title>
				<desc>New Business Transaction is created in Asset Transmission</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d193cadf29239cbf83</_id>
				<id>2</id>
				<title>Device A. Contract Creation</title>
				<desc>New Contract is created defining Digital Asset Properties.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d193cadf29239cbf86</_id>
				<id>3</id>
				<title>Device A. Transaction Timeout definition</title>
				<desc>Time out agent is subscribed to start monitoring elapsed time and rollback if time limit is reached..</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d193cadf29239cbf8b</_id>
				<id>4</id>
				<title>Device A. Asset blocking</title>
				<desc>The asset is blocked so more operations are permitted for this asset.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d193cadf29239cbf90</_id>
				<id>5</id>
				<title>Device A. Sends Asset Metadata</title>
				<desc>An Outgoing Asset Metadata is prepared to be send to the corresponding actor.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d193cadf29239cbf96</_id>
				<id>6</id>
				<title>Device A. Delivers Metadata on P2P</title>
				<desc>We send the metadata over the network. NS retries are defined in the contract of this transaction.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56fa81d193cadf29239cbf99</_id>
				<id>7</id>
				<title>Device A. Statistics are stored.</title>
				<desc>Initial Asset Transmission statistics are stored with asset and actor information.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d193cadf29239cbf9f</_id>
				<id>8</id>
				<title>Device B. Receives metadata from P2P</title>
				<desc>New metadata is received by NS and event trigger to notify upper layers.</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56fa81d193cadf29239cbfa4</_id>
				<id>9</id>
				<title>Device B. Incoming Metadata detected</title>
				<desc>We received the send metadata and is locally stored. New local contract will be stored.</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d193cadf29239cbfa9</_id>
				<id>10</id>
				<title>Device B. New contract is created.</title>
				<desc>The received metadata is stored as a new contract.</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d193cadf29239cbfaf</_id>
				<id>11</id>
				<title>Device B. Contract is validated.</title>
				<desc>The contract properties are validated to confirm if we are ok to receive the new asset or not..</desc>
				<type>activity</type>
				<name>asset factory</name>
				<layer>sub app</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56fa81d193cadf29239cbfb5</_id>
				<id>20</id>
				<title>Process Interrupted</title>
				<desc>A validation did not pass, or error was thrown. We rollback the process and Asset is again editable.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d093cadf29239cbf72</upd_at>
		<_id>56fa81d093cadf29239cbf73</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Synchronize list of connected Artist identities</name>
		<desc>The user wants to get the connected artists list.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d693cadf29239cc81c</_id>
				<id>0</id>
				<title>Enter to Following tab.</title>
				<desc>Request the list of connected artists to the user.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fan wallet</name>
				<layer>reference wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc822</_id>
				<id>1</id>
				<title>Request the connected artist list.</title>
				<desc>Request the connection information associated with the fan identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>fan wallet</name>
				<layer>wallet module</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc828</_id>
				<id>2</id>
				<title>Return the Artis connected list.</title>
				<desc>Fan identity provides the list of the artist linked to this identity</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>fan</name>
				<layer>identity</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc82e</_id>
				<id>3</id>
				<title>Updates the view with the connected artist.</title>
				<desc>Gets the list of connected artists and updates the view.</desc>
				<type>activity</type>
				<name>fan wallet</name>
				<layer>wallet module</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d693cadf29239cc815</upd_at>
		<_id>56fa81d693cadf29239cc816</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Create Artist identity</name>
		<desc>An artist creates a Artist identity in Tokenly platform.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d693cadf29239cc856</_id>
				<id>0</id>
				<title>The user submit the data to create the Artist identity.</title>
				<desc>Includes the data to create an identity.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc85c</_id>
				<id>1</id>
				<title>Send the artist data.</title>
				<desc>Sends acces data to Tokenly to verify the access data</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app module</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc862</_id>
				<id>2</id>
				<title>Request user verification</title>
				<desc>Sends the necessary data to check a Tokenly user</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc868</_id>
				<id>3</id>
				<title>Request to the Tokenly API the user verification</title>
				<desc>Checks with the public API if the user data is correct.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>tokenly</name>
				<layer>external api</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc86e</_id>
				<id>4</id>
				<title>Create the identity.</title>
				<desc>With authenticated data, proceeds to create the new identity.</desc>
				<type>activity</type>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d693cadf29239cc84f</upd_at>
		<_id>56fa81d693cadf29239cc850</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Create Fan identity</name>
		<desc>A Fanatic creates a fan identity in Tokenly platform.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d693cadf29239cc877</_id>
				<id>0</id>
				<title>The user submit the data to create the Fan identity.</title>
				<desc>Includes the data to create an identity.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fan identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc87d</_id>
				<id>1</id>
				<title>Send the fanatic data.</title>
				<desc>Sends acces data to Tokenly to verify the access data</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>fan identity</name>
				<layer>sub app module</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc883</_id>
				<id>2</id>
				<title>Request user verification</title>
				<desc>Sends the necessary data to check a Tokenly user</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>fan</name>
				<layer>identity</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc889</_id>
				<id>3</id>
				<title>Request to the Tokenly API the user verification</title>
				<desc>Checks with the public API if the user data is correct.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>tokenly</name>
				<layer>external api</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc88f</_id>
				<id>4</id>
				<title>Create the identity.</title>
				<desc>With authenticated data, proceeds to create the new identity.</desc>
				<type>activity</type>
				<name>fan</name>
				<layer>identity</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d693cadf29239cc870</upd_at>
		<_id>56fa81d693cadf29239cc871</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Create Fan identity</name>
		<desc>An artist creates a Fan identity in Artist platform.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cc8e8</_id>
				<id>0</id>
				<title>The user submit the data to create the Fan identity.</title>
				<desc>Includes the data to create an identity.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fan identity</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc8ee</_id>
				<id>1</id>
				<title>Send the Fan data.</title>
				<desc>Send the necessary data to create the identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>fan identity</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc8f4</_id>
				<id>2</id>
				<title>Create the identity.</title>
				<desc>The Fan Identity is persisted.</desc>
				<type>activity</type>
				<name>fan</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d793cadf29239cc8e1</upd_at>
		<_id>56fa81d793cadf29239cc8e2</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Artist accepts all connections</name>
		<desc>The artist indicates that accepts all connections requested by fans.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cc8fd</_id>
				<id>0</id>
				<title>The user set the acceptance of all fans requested connections.</title>
				<desc>Change the status of accepting all connections.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fan identity</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc903</_id>
				<id>1</id>
				<title>Request to update the Identity.</title>
				<desc>Sends the change to the Artist Identity plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>fan identity</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc909</_id>
				<id>2</id>
				<title>Update identity.</title>
				<desc>Updates the information in the database.</desc>
				<type>activity</type>
				<name>fan</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d793cadf29239cc8f6</upd_at>
		<_id>56fa81d793cadf29239cc8f7</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>List Fan identities in external systems</name>
		<desc>The fan list the available external platforms identities.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cc912</_id>
				<id>0</id>
				<title>List external platforms identities.</title>
				<desc>The user request the list of available external identities.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fan identity</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc918</_id>
				<id>1</id>
				<title>Request the external identities.</title>
				<desc>Request the identity created in the external platform</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>fan identity</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc91e</_id>
				<id>2</id>
				<title>Submit external platform identities list.</title>
				<desc>Returns the list of identities created in external platforms registered in the Fan Identity.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>fan</name>
				<layer>identity</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc924</_id>
				<id>3</id>
				<title>Provides the identities list.</title>
				<desc>The identities list is returned.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>fan identity</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc92a</_id>
				<id>4</id>
				<title>Show the identities list.</title>
				<desc>Shows the external platform identities list.</desc>
				<type>activity</type>
				<name>fan identity</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d793cadf29239cc90b</upd_at>
		<_id>56fa81d793cadf29239cc90c</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>List Artists identities in external systems</name>
		<desc>The artist list the available external platforms identities.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cc933</_id>
				<id>0</id>
				<title>List external platforms identities.</title>
				<desc>The user request the list of available external identities.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc939</_id>
				<id>1</id>
				<title>Request the external identities.</title>
				<desc>Request the identity created in the external platform</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc93f</_id>
				<id>2</id>
				<title>Submit external platform identities list.</title>
				<desc>Returns the list of identities created in external platforms registered in the Fan Identity.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc945</_id>
				<id>3</id>
				<title>Provides the identities list.</title>
				<desc>The identities list is returned.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc94b</_id>
				<id>4</id>
				<title>Show the identities list.</title>
				<desc>Shows the external platform identities list.</desc>
				<type>activity</type>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d793cadf29239cc92c</upd_at>
		<_id>56fa81d793cadf29239cc92d</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Link Fan Identity to an account in an external system</name>
		<desc>The fanatic makes a connection with external platforms identities.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cc968</_id>
				<id>0</id>
				<title>Select an external platforms identity.</title>
				<desc>The user selects an element of external identities list displayed on the view.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fan identity</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc96e</_id>
				<id>1</id>
				<title>Request link with external platform identity.</title>
				<desc>Requests to persist the selected identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>fan identity</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc974</_id>
				<id>2</id>
				<title>The Fan identity is updated.</title>
				<desc>The Fan identity perists the external platform identity in database.</desc>
				<type>activity</type>
				<name>fan</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d793cadf29239cc961</upd_at>
		<_id>56fa81d793cadf29239cc962</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>View Artist profile</name>
		<desc>The Artist community user want to see the artist associated profile.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cc97d</_id>
				<id>0</id>
				<title>Select an artist picture.</title>
				<desc>The user presses the image of the artist to see the associated profile.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc983</_id>
				<id>1</id>
				<title>Request the artist profile.</title>
				<desc>Request the profile of the selected artist identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc989</_id>
				<id>2</id>
				<title>Provide the selected artist profile.</title>
				<desc>The artist profile is get from database.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>fan</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc98f</_id>
				<id>3</id>
				<title>Provides the profile data.</title>
				<desc>The identities profile data is returned.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>fan community</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc995</_id>
				<id>4</id>
				<title>Show the artist profile.</title>
				<desc>Shows the identities profile.</desc>
				<type>activity</type>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d793cadf29239cc976</upd_at>
		<_id>56fa81d793cadf29239cc977</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Request list of Artist identities</name>
		<desc>The user get in the Artist Community screen.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cc99e</_id>
				<id>0</id>
				<title>Request the artist actors availables.</title>
				<desc>Request the module the list of artist identities.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc9a4</_id>
				<id>1</id>
				<title>Request the artist list.</title>
				<desc>Request a list of available artist identities</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc9aa</_id>
				<id>2</id>
				<title>Provide the artist list.</title>
				<desc>Provides the list of artist Identities.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>actor connection</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc9b0</_id>
				<id>3</id>
				<title>Submit the artist list.</title>
				<desc>The artist list is returned to update the view.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc9b6</_id>
				<id>4</id>
				<title>Show the artist list.</title>
				<desc>The view is updated with the available artists identities.</desc>
				<type>activity</type>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d793cadf29239cc997</upd_at>
		<_id>56fa81d793cadf29239cc998</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Request list of Fan identities</name>
		<desc>The user get in the Fan Community screen.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cc9bf</_id>
				<id>0</id>
				<title>Request the fan actors availables.</title>
				<desc>Request the module the list of fan identities.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fan community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc9c5</_id>
				<id>1</id>
				<title>Request the artist list.</title>
				<desc>Request a list of available fan identities</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>fan community</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc9cb</_id>
				<id>2</id>
				<title>Provide the fan list.</title>
				<desc>Provides the list of fan Identities.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>fan</name>
				<layer>actor connection</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc9d1</_id>
				<id>3</id>
				<title>Submit the fan list.</title>
				<desc>The fan list is returned to update the view.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>fan community</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc9d7</_id>
				<id>4</id>
				<title>Show the fan list.</title>
				<desc>The view is updated with the available fan identities.</desc>
				<type>activity</type>
				<name>fan community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d793cadf29239cc9b8</upd_at>
		<_id>56fa81d793cadf29239cc9b9</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Request connection of a Fan to an Artist</name>
		<desc>The user request a connection between a fan identity and an artist identity.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cc9e0</_id>
				<id>0</id>
				<title>Request an artist identity connection.</title>
				<desc>The artist to request connection is selected.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc9e6</_id>
				<id>1</id>
				<title>Request the identities connection.</title>
				<desc>Request a connection with an artist identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc9ec</_id>
				<id>2</id>
				<title>Send request to a remote device.</title>
				<desc>Send the connection request to a remote device.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>actor connection</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc9f2</_id>
				<id>3</id>
				<title>Route the connection request to a remote device.</title>
				<desc>Route the connection request to a remote device through the P2P network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>actor network service</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc9f8</_id>
				<id>4</id>
				<title>Receive the connection request.</title>
				<desc>Receive a message with the connection request.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>artist</name>
				<layer>actor network service</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc9fe</_id>
				<id>5</id>
				<title>Send notification to OS.</title>
				<desc>Raises an event indicating the arrival of a new connection request.</desc>
				<type>activity</type>
				<name>artist</name>
				<layer>actor network service</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d793cadf29239cc9d9</upd_at>
		<_id>56fa81d793cadf29239cc9da</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>An artist accepts a fan connection</name>
		<desc>The artist sees a connection request and accepts it.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cca07</_id>
				<id>0</id>
				<title>Register the acceptance of a connection.</title>
				<desc>A request connection request is selected to approve it.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cca0d</_id>
				<id>1</id>
				<title>Submit request acceptance.</title>
				<desc>Route the acceptance to notify to the connection petitioner</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cca13</_id>
				<id>2</id>
				<title>Send acceptance to a remote device.</title>
				<desc>Send the connection acceptance to a remote device.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>actor connection</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cca19</_id>
				<id>3</id>
				<title>Route the connection acceptance to a remote device.</title>
				<desc>Route the connection acceptance to a remote device through the P2P network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>actor network service</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cca1f</_id>
				<id>4</id>
				<title>Receive the connection acceptance.</title>
				<desc>Receive a message with the connection acceptance.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>artist</name>
				<layer>actor network service</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cca25</_id>
				<id>5</id>
				<title>Send notification to OS.</title>
				<desc>Raises an event indicating the arrival of a new connection acceptance.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>actor network service</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cca2b</_id>
				<id>6</id>
				<title>The connection is registered in Fan identity.</title>
				<desc>The Fan identity is updated with the connection.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>fan</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cca31</_id>
				<id>7</id>
				<title>The external platform identity is updated.</title>
				<desc>The Tokenly Fan identity is updated with the connection.</desc>
				<type>activity</type>
				<name>fan</name>
				<layer>identity</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d793cadf29239cca00</upd_at>
		<_id>56fa81d793cadf29239cca01</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>The fan to artist connection request  is not accepted</name>
		<desc>The artist sees a connection request and rejects it.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cca3a</_id>
				<id>0</id>
				<title>Register the denial of a connection.</title>
				<desc>A request connection request is selected to reject it.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cca40</_id>
				<id>1</id>
				<title>Submit request rejection.</title>
				<desc>Route the rejection to notify to the connection petitioner</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app module</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cca46</_id>
				<id>2</id>
				<title>Send rejection to a remote device.</title>
				<desc>Send the connection rejection to a remote device.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>actor connection</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cca4c</_id>
				<id>3</id>
				<title>Route the connection rejection to a remote device.</title>
				<desc>Route the connection rejection to a remote device through the P2P network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>actor network service</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cca52</_id>
				<id>4</id>
				<title>Receive the connection rejection.</title>
				<desc>Receive a message with the connection rejection.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>artist</name>
				<layer>actor network service</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cca58</_id>
				<id>5</id>
				<title>Send notification to OS.</title>
				<desc>Raises an event indicating the arrival of a new connection rejection.</desc>
				<type>activity</type>
				<name>artist</name>
				<layer>actor network service</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>56fa81d793cadf29239cca33</upd_at>
		<_id>56fa81d793cadf29239cca34</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Sync songs manually with External System</name>
		<desc>A Tokenly wallet user request a synchronization with a external platform.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d693cadf29239cc797</_id>
				<id>0</id>
				<title>User request a sync from tab songs.</title>
				<desc>The user proceeds to request the synchronization list of songs</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc79d</_id>
				<id>1</id>
				<title>Request the Tokenly tokens owned by the user.</title>
				<desc>The Fan Wallet Module requests information from the tokens associated with the identity of the user to the external system.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7a2</_id>
				<id>2</id>
				<title>Request the Tokenly tokens owned by the user to external platform.</title>
				<desc>Request Tokenly API the tokens associated with the Tokenly identity</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7a8</_id>
				<id>3</id>
				<title>Request the tokens owned by the user to Tokenly music manager public API.</title>
				<desc>Asks Tokenly public API (external) the information available of the associated tokens with the Tokenly identity.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>tokenly</name>
				<layer>external api</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7ad</_id>
				<id>4</id>
				<title>Download the missing songs.</title>
				<desc>Proceed to download the songs not present on the device.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7b3</_id>
				<id>5</id>
				<title>Persist songs on device storage.</title>
				<desc>Downloaded songs are persisted in the local storage.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>file system</name>
				<layer>multi os</layer>
				<suprlay>OSA</suprlay>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7b8</_id>
				<id>6</id>
				<title>Set the song status in database.</title>
				<desc>Song status is change to available.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7be</_id>
				<id>7</id>
				<title>Update the songs tab.</title>
				<desc>The list of available songs is received and updates the view.</desc>
				<type>activity</type>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>5706ae0623fd005c2d9de266</upd_at>
		<_id>56fa81d693cadf29239cc791</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Restore deleted song</name>
		<desc>The user wants to restore a deleted song.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d693cadf29239cc7c7</_id>
				<id>0</id>
				<title>User request to restore a deleted song.</title>
				<desc>When pressing the list item that represents the song that is not available on the device</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7cd</_id>
				<id>1</id>
				<title>Request the deleted song.</title>
				<desc>Request to restore the deleted song to the Tokenly Song Wallet</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7d2</_id>
				<id>2</id>
				<title>Request the song download URL.</title>
				<desc>Request to the Tokenly API the download URL of the requested song</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7d8</_id>
				<id>3</id>
				<title>Request the song download URL to the Tokenly public API.</title>
				<desc>Request to the public Tokenly API (external) the download URL</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>tokenly</name>
				<layer>external api</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7dd</_id>
				<id>4</id>
				<title>Download the requested song.</title>
				<desc>Starts the process of downloading song.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7e3</_id>
				<id>5</id>
				<title>Persist songs on device storage.</title>
				<desc>Downloaded songs are persisted in the local storage.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>file system</name>
				<layer>multi os</layer>
				<suprlay>OSA</suprlay>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7e8</_id>
				<id>6</id>
				<title>Set the song status in database.</title>
				<desc>Song status is change to available.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7ee</_id>
				<id>7</id>
				<title>Update the songs tab.</title>
				<desc>The view is updated with the new status of the song.</desc>
				<type>activity</type>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>5706ae6523fd005c2d9de283</upd_at>
		<_id>56fa81d693cadf29239cc7c1</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Delete song</name>
		<desc>The user wants to delete a song.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d693cadf29239cc7f7</_id>
				<id>0</id>
				<title>User request to delete a song.</title>
				<desc>The user makes a deleting request in the view element that represents the song to delete.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc7fd</_id>
				<id>1</id>
				<title>Request to delete a song.</title>
				<desc>Performs the request to delete the song from the device storage</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc802</_id>
				<id>2</id>
				<title>Requesto to delete a song from device storage.</title>
				<desc>Check that the song is available and proceeds to request the song to be deleted</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc808</_id>
				<id>3</id>
				<title>Delete the requested song file.</title>
				<desc>Deletes the file corresponding the song the user wants to delete.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>file system</name>
				<layer>multi os</layer>
				<suprlay>OSA</suprlay>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc80d</_id>
				<id>4</id>
				<title>Set the song status in database.</title>
				<desc>Song status is change to deleted.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc813</_id>
				<id>5</id>
				<title>Update the songs tab.</title>
				<desc>The view is updated with the new status of the song.</desc>
				<type>activity</type>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>5706aeba23fd005c2d9de2bf</upd_at>
		<_id>56fa81d693cadf29239cc7f1</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Browse to the site of the Artist</name>
		<desc>The user select an artist list element to browse to its web site.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d693cadf29239cc837</_id>
				<id>0</id>
				<title>Select an artist element.</title>
				<desc>The list item representing the artist is pressed.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc83d</_id>
				<id>1</id>
				<title>Request the artist website URL.</title>
				<desc>The URL to the artist site is requested</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc843</_id>
				<id>2</id>
				<title>Request the URL to the artist site to Tokenly API.</title>
				<desc>Request to the Tokenly external API the URL belonging to the artist in Tokenly Swapbot</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>tokenly</name>
				<layer>external api</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc848</_id>
				<id>3</id>
				<title>Updates the view with the connected artist.</title>
				<desc>Gets the URL of the selected artist and updates view.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d693cadf29239cc84d</_id>
				<id>4</id>
				<title>Browse to the artist site.</title>
				<desc>Opens the default browser of the device with the URL of the artist.</desc>
				<type>activity</type>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>5706af1a23fd005c2d9de2ee</upd_at>
		<_id>56fa81d693cadf29239cc831</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>List available songs</name>
		<desc>A Fanatic wants to list the available songs in the device.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cc898</_id>
				<id>0</id>
				<title>The user opens the Music player.</title>
				<desc>Request the list of available songs.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc89d</_id>
				<id>1</id>
				<title>Request the available songs from external platforms.</title>
				<desc>Request to the External API the list of available songs in the device</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>fan community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc8a2</_id>
				<id>2</id>
				<title>Get the available songs list</title>
				<desc>Search in the database the available songs</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc8a7</_id>
				<id>3</id>
				<title>Updates the Music player view</title>
				<desc>Organizes the information received and updates the view.</desc>
				<type>activity</type>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>5706b24823fd005c2d9e05c6</upd_at>
		<_id>56fa81d793cadf29239cc892</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Play a song</name>
		<desc>The user wants to play a available song.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cc8b0</_id>
				<id>0</id>
				<title>The user presses a song element.</title>
				<desc>A song in the setlist is pressed.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc8b5</_id>
				<id>1</id>
				<title>Request the available song.</title>
				<desc>Request the necessary data to play the song</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc8ba</_id>
				<id>2</id>
				<title>Get the song local storage path</title>
				<desc>Search the file path corresponding the song in database</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc8c0</_id>
				<id>3</id>
				<title>Open the song file</title>
				<desc>The requested file is opened and its contents is obtained.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>file system</name>
				<layer>multi os</layer>
				<suprlay>OSA</suprlay>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc8c5</_id>
				<id>4</id>
				<title>Update the view</title>
				<desc>Submit the data to pla the song and updates the view</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc8cb</_id>
				<id>5</id>
				<title>Play the song</title>
				<desc>Play the song provided</desc>
				<type>activity</type>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>5706b3ba23fd005c2d9e05e9</upd_at>
		<_id>56fa81d793cadf29239cc8aa</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Create Artist identity</name>
		<desc>An artist creates a Artist identity in Artist platform.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cc8d4</_id>
				<id>0</id>
				<title>The user submit the data to create the Artist identity.</title>
				<desc>Includes the data to create an identity.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc8da</_id>
				<id>1</id>
				<title>Send the artist data.</title>
				<desc>Send the necessary data to create the identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc8df</_id>
				<id>2</id>
				<title>Create the identity.</title>
				<desc>The Artist Identity is persisted.</desc>
				<type>activity</type>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>5706b40b23fd005c2d9e0618</upd_at>
		<_id>56fa81d793cadf29239cc8ce</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Link Artist Identity to an account in an external system</name>
		<desc>The artist makes a connection with external platforms identities.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d793cadf29239cc954</_id>
				<id>0</id>
				<title>Select an external platforms identity.</title>
				<desc>The user selects an element of external identities list displayed on the view.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc95a</_id>
				<id>1</id>
				<title>Request link with external platform identity.</title>
				<desc>Requests to persist the selected identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d793cadf29239cc95f</_id>
				<id>2</id>
				<title>The Artist identity is updated.</title>
				<desc>The Artist identity perists the external platform identity in database.</desc>
				<type>activity</type>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>5706b4f023fd005c2d9e0635</upd_at>
		<_id>56fa81d793cadf29239cc94e</_id>
	</proc>
	<proc>
		<platfrm>CHT</platfrm>
		<name>Create Chat Identity</name>
		<desc>Step by step creation of chat idendity</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>570e7e5c352ce0a74d87577f</_id>
				<id>0</id>
				<title>User request the creation of a new identity</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>chat identity</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e7f19352ce0a74d875795</_id>
				<id>1</id>
				<title>Set Username and image profile</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>chat identity</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e7f1a352ce0a74d87579b</_id>
				<id>2</id>
				<title>Chat Identity processes request</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>chat sub app module</name>
				<layer>sub app module</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e7f1a352ce0a74d8757a1</_id>
				<id>3</id>
				<title>Chat Identity creates the new identity</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>chat identity</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
		</steps>
		<upd_at>570e8d4b352ce0a74d87b7e7</upd_at>
		<_id>570d1678352ce0a74d85ab78</_id>
	</proc>
	<proc>
		<platfrm>CHT</platfrm>
		<name>Broadcasting</name>
		<desc>Creates a relay list to be sent to the selected contacts</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>570e817f352ce0a74d879afa</_id>
				<id>0</id>
				<title>Click on Menu and select &quot;broadcast&quot; option</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e817f352ce0a74d879b00</_id>
				<id>1</id>
				<title>List of multiple selection to select contacts</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8180352ce0a74d879b06</_id>
				<id>2</id>
				<title>Select at least two contacts</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8180352ce0a74d879b0c</_id>
				<id>3</id>
				<title>Open chat with selected contacts</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8180352ce0a74d879b12</_id>
				<id>4</id>
				<title>Send message alongside multiple contacts to the module</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8181352ce0a74d879b18</_id>
				<id>5</id>
				<title>What the module received, it will be sent again to the Middleware</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>chat sub app module</name>
				<layer>sub app module</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8181352ce0a74d879b1e</_id>
				<id>6</id>
				<title>he Middleware will receive and transfer the message alonside the selected contac</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>chat middleware</name>
				<layer>middleware</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8182352ce0a74d879b24</_id>
				<id>7</id>
				<title>Send message to multiple contacts </title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>chat network service</name>
				<layer>network service</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8182352ce0a74d879b2a</_id>
				<id>8</id>
				<title>Show message in one chat alongside the contact who sent the broadcast</title>
				<desc>pending</desc>
				<type>start</type>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
		</steps>
		<upd_at>570e8d8f352ce0a74d87b825</upd_at>
		<_id>570e817d352ce0a74d879613</_id>
	</proc>
	<proc>
		<platfrm>CHT</platfrm>
		<name>Group and send message</name>
		<desc>Create a Group and send message</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>570e8867352ce0a74d87aff6</_id>
				<id>0</id>
				<title>Click on create new group </title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8867352ce0a74d87affc</_id>
				<id>1</id>
				<title>Display a wizard view, first it writes the group name then add contacts to the g</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8868352ce0a74d87b002</_id>
				<id>2</id>
				<title>Take data</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>chat sub app module</name>
				<layer>sub app module</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8868352ce0a74d87b008</_id>
				<id>3</id>
				<title>Save this group and its contacts</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>chat middleware</name>
				<layer>middleware</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8869352ce0a74d87b00e</_id>
				<id>4</id>
				<title>The group is shown in the chat list, tap on it and send message</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8869352ce0a74d87b014</_id>
				<id>5</id>
				<title>Actor NS local - detects the chat as group chat, send group info and message</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>chat network service</name>
				<layer>network service</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e886a352ce0a74d87b01a</_id>
				<id>6</id>
				<title>Actor NS remote - Receives info</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>chat network service</name>
				<layer>network service</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e886a352ce0a74d87b020</_id>
				<id>7</id>
				<title>Middleware remote - Save this group, save contact group, and save message (match</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>chat middleware</name>
				<layer>middleware</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e886b352ce0a74d87b026</_id>
				<id>8</id>
				<title>Module remote- takes group and message data</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>chat sub app module</name>
				<layer>sub app module</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e886c352ce0a74d87b02c</_id>
				<id>9</id>
				<title>Sub App remote - shows group chat in chat list</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e886c352ce0a74d87b034</_id>
				<id>10</id>
				<title>Sub App remote - tap in chat group</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e886d352ce0a74d87b03a</_id>
				<id>11</id>
				<title>Sub App remote - shows the messages of the group and let to write and send messa</title>
				<desc>pending</desc>
				<type>start</type>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
		</steps>
		<upd_at>570e8dfe352ce0a74d87b885</upd_at>
		<_id>570e8866352ce0a74d87afee</_id>
	</proc>
	<proc>
		<platfrm>CHT</platfrm>
		<name>Block Contact</name>
		<desc>Contact Management Block</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>570e894a352ce0a74d87b049</_id>
				<id>0</id>
				<title>Sub App Local - Button &quot;Block Contact&quot; The user selects a connection and push bu</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e894a352ce0a74d87b04f</_id>
				<id>1</id>
				<title>Module Local - a method change status  to block</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>chat sub app module</name>
				<layer>sub app module</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e894b352ce0a74d87b055</_id>
				<id>2</id>
				<title>Middleware Local - Change contact info in database</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>chat middleware</name>
				<layer>middleware</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e894c352ce0a74d87b05b</_id>
				<id>3</id>
				<title>Sub App local - shows contacts list updated</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e894c352ce0a74d87b061</_id>
				<id>4</id>
				<title>Sub App Local - The chat can&apos;t begin</title>
				<desc>pending</desc>
				<type>start</type>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
		</steps>
		<upd_at>570e8e36352ce0a74d87b8e2</upd_at>
		<_id>570e8949352ce0a74d87b041</_id>
	</proc>
	<proc>
		<platfrm>CHT</platfrm>
		<name>Delete Chat</name>
		<desc>Chat disposal management</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>570e8a10352ce0a74d87b070</_id>
				<id>0</id>
				<title>Sub App Local - Button &quot;Delete Chat&quot; The user mark one or several chats and push</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8a10352ce0a74d87b076</_id>
				<id>1</id>
				<title>Module Local - a method send the chat id to erase chat</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>chat sub app module</name>
				<layer>sub app module</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8a11352ce0a74d87b07c</_id>
				<id>2</id>
				<title>Middleware Local - Delete chat info in database</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>chat middleware</name>
				<layer>middleware</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8a11352ce0a74d87b082</_id>
				<id>3</id>
				<title>Sub App Local - Show confirmation message</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8a11352ce0a74d87b088</_id>
				<id>4</id>
				<title>Sub App local - shows chat list updated</title>
				<desc>pending</desc>
				<type>start</type>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
		</steps>
		<upd_at>570e8e8e352ce0a74d87b915</upd_at>
		<_id>570e8a0f352ce0a74d87b068</_id>
	</proc>
	<proc>
		<platfrm>CHT</platfrm>
		<name>Delete all Chats</name>
		<desc>Handling removal of all chat</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>570e8ad2352ce0a74d87b097</_id>
				<id>0</id>
				<title>Sub App Local - Button &quot;Clean Chat&quot; The user push button &quot;Ok&quot; on confirmation qu</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8ad2352ce0a74d87b09d</_id>
				<id>1</id>
				<title>Module Local - a method send the chats id to erase all chat history</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>chat sub app module</name>
				<layer>sub app module</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8ad2352ce0a74d87b0a3</_id>
				<id>2</id>
				<title>Middleware Local - Delete chats history in database</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>chat middleware</name>
				<layer>middleware</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8ad3352ce0a74d87b0a9</_id>
				<id>3</id>
				<title>Sub App Local - Show confirmation message</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8ad3352ce0a74d87b0af</_id>
				<id>4</id>
				<title>Sub App Local  - Update chat</title>
				<desc>pending</desc>
				<type>start</type>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
		</steps>
		<upd_at>570e8eed352ce0a74d87b948</upd_at>
		<_id>570e8ad1352ce0a74d87b08f</_id>
	</proc>
	<proc>
		<platfrm>COR</platfrm>
		<name>Send Chat by Email</name>
		<desc>For sending email chats</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>570e8b72352ce0a74d87b0be</_id>
				<id>0</id>
				<title>Sub App Local - Button &quot;Send Chat by Email&quot; The user pushes button &quot;Ok&quot; on confi</title>
				<desc>pending</desc>
				<type>start</type>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8b73352ce0a74d87b0c4</_id>
				<id>1</id>
				<title>Module Local - a method returns data</title>
				<desc>pending</desc>
				<type>start</type>
				<name>chat sub app module</name>
				<layer>sub app module</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8b73352ce0a74d87b0ca</_id>
				<id>2</id>
				<title>Middleware Local - returns messages history</title>
				<desc>pending</desc>
				<type>start</type>
				<name>chat middleware</name>
				<layer>middleware</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8b74352ce0a74d87b0d0</_id>
				<id>3</id>
				<title>Sub App Local - sends this content to an email through a method sendEmail(conten</title>
				<desc>pending</desc>
				<type>start</type>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8b74352ce0a74d87b0d6</_id>
				<id>4</id>
				<title>Sub App Local - Return to the last screen</title>
				<desc>pending</desc>
				<type>start</type>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
		</steps>
		<upd_at>570e8b71352ce0a74d87b0b5</upd_at>
		<_id>570e8b71352ce0a74d87b0b6</_id>
	</proc>
	<proc>
		<platfrm>CHT</platfrm>
		<name>Messages pagination</name>
		<desc>Allows messages paginated</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>570e8c05352ce0a74d87b0e5</_id>
				<id>0</id>
				<title>Sub App Local - Scroll until last older message shown</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8c05352ce0a74d87b0eb</_id>
				<id>1</id>
				<title>Module Local - a method send the chats id and get the last n older message saved</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>chat sub app module</name>
				<layer>sub app module</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8c05352ce0a74d87b0f1</_id>
				<id>2</id>
				<title>Middleware Local - Search chat history in database</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>chat middleware</name>
				<layer>middleware</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>570e8c06352ce0a74d87b0f7</_id>
				<id>3</id>
				<title>Sub App Local - Update Chat Message</title>
				<desc>pending</desc>
				<type>start</type>
				<name>chat sub app</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
		</steps>
		<upd_at>570e8f18352ce0a74d87b978</upd_at>
		<_id>570e8c04352ce0a74d87b0dd</_id>
	</proc>
</procs>