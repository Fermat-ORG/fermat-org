<?xml version="1.0" encoding="UTF-8"?>
<procs>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Customer Identity creation</name>
		<desc>Customer identity creation procedure, to be used by Crypto Customers</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e271cf213b87678108b9</_id>
				<id>0</id>
				<title>User requests the creation of a new identity</title>
				<desc>The user enters the Crypto Customer Itentity Sub App and creates a new Crypto Customer identity</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678108bf</_id>
				<id>1</id>
				<title>Crypto Customer Identity processes request</title>
				<desc>The Crypto Customer Identity Sub App Module processes the new identity request</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678108c5</_id>
				<id>2</id>
				<title>Crypto Customer Identity creates the new identity</title>
				<desc>Receives the request and creates a new identity for the Crypto Customer</desc>
				<type>end</type>
				<name>crypto customer</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e271cf213b87678108b2</upd_at>
		<_id>56e1e271cf213b87678108b3</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Customer Start a Negotiation</name>
		<desc>The Crypto Customer start a negotiation with a Crypto Broker.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e272cf213b8767810b06</_id>
				<id>0</id>
				<title>Customer set the info to start a New Negotiation</title>
				<desc>The Crypto Customer indicates he wants to start a new negotiation with a selected Crypto Broker passing the necesary info (merchandise, amount to buy, hoy to recive the merchandise, etc)</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b0c</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to create negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b12</_id>
				<id>2</id>
				<title>Manages the creation of Negotiation</title>
				<desc>Create a transaction to manage the negotiation Customer Broker</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker new</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b18</_id>
				<id>3</id>
				<title>Create The Purchase Negotiation</title>
				<desc>Create the purchase negotiation of Customer</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b1e</_id>
				<id>4</id>
				<title>Process Sending Negotiation To Broker</title>
				<desc>Process Sending Negotiation To Broker</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker new</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b24</_id>
				<id>5</id>
				<title>Sending Negotiation To Broker</title>
				<desc>Sending negotiation to Broker for creation Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>fermat message</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b2a</_id>
				<id>6</id>
				<title>Receiving Negotiation From Customer</title>
				<desc>Receiving negotiation from Customer for creation Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b30</_id>
				<id>7</id>
				<title>Process Receiving Negotiation From Customer</title>
				<desc>Process Receiving Negotiation From Customer</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker new</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b36</_id>
				<id>8</id>
				<title>Create The Sale Negotiation</title>
				<desc>Create the Sale negotiation of Broker</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b3c</_id>
				<id>9</id>
				<title>Sending Confirmation of Negotiation</title>
				<desc>Sending Confirmation of Creation Negotiation to Customer</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>fermat message</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b42</_id>
				<id>10</id>
				<title>Receiving Confirmation of Negotiation</title>
				<desc>Receiving Confirmation of Creation Negotiation From Broker</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b48</_id>
				<id>11</id>
				<title>Process the Receive Confirmation of Negotiation</title>
				<desc>Process the Receive Confirmation of Negotiation</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>direct call</type>
				</next>
				<name>customer broker new</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b4e</_id>
				<id>12</id>
				<title>Confirm the Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e272cf213b8767810aff</upd_at>
		<_id>56e1e272cf213b8767810b00</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Open a Purchase Contract</name>
		<desc>Creates and opens a Customer - Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e273cf213b8767810cb0</_id>
				<id>0</id>
				<title>Start a Purchase Contract beetwen a Customer and a Broker</title>
				<desc>Based on a closed negotiation, start an Open Contract Business Transaction.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>user level business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810cb6</_id>
				<id>1</id>
				<title>Gets the Negotiation ID</title>
				<desc>Gets the ID of closed negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810cbc</_id>
				<id>2</id>
				<title>Creates an Open Contract Business Transaction</title>
				<desc>Creates an Open Contract Business Transaction with the data of the closed negotiation.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>open contract</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810cc2</_id>
				<id>3</id>
				<title>Gets the Negotiation clauses</title>
				<desc>Gets the Clauses associated to the ID of the closed negotiation.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810cc8</_id>
				<id>4</id>
				<title>Creates a new Contract Record</title>
				<desc>Creates a new Contract Record with the Negotiation data.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>open contract</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810cce</_id>
				<id>5</id>
				<title>Creates a new Customer Broker Purchase Contract</title>
				<desc>Creates a new Customer Broker Purchase Contract with the negotiation data. This generate a Hash that&apos;s goint to be send to the Crypto Broker</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810cd4</_id>
				<id>6</id>
				<title>Sends Contract Hash to Crypto Broker</title>
				<desc>Sends the contract hash to the Crypto Broker, this hash will be used as the contract Id</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810cda</_id>
				<id>7</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810ce0</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to pending payment.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e273cf213b8767810ca9</upd_at>
		<_id>56e1e273cf213b8767810caa</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Broker Acknowledge Offline Payment</name>
		<desc>Broker receive an Offline Payment from a Crypto Customer, this payment is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e273cf213b8767810dc6</_id>
				<id>0</id>
				<title>Crypto Broker acknowledges payment</title>
				<desc>The crypto broker acknowledges the incoming payment</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810dcc</_id>
				<id>1</id>
				<title>Process Acknowledge Request</title>
				<desc>Process request and starts the acknowledge process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810dd2</_id>
				<id>2</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Offline Payment Business Transaction with the payment associated to a contract data.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>broker ack offline payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810dd8</_id>
				<id>3</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810dde</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate an incoming payment.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>broker ack offline payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810de4</_id>
				<id>5</id>
				<title>Sends Acknowledge Payment Notification to Crypto Customer</title>
				<desc>Sends the successful Acknowledge payment notification to Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810dea</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810df0</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to pending merchandise.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e273cf213b8767810dbf</upd_at>
		<_id>56e1e273cf213b8767810dc0</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto broker submits an Online Merchandise</name>
		<desc>Crypto Broker submits an Online merchandise to a Customer, this merchandise is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e273cf213b8767810df9</_id>
				<id>0</id>
				<title>Cryto Broker submits online merchandise</title>
				<desc>Crypto Broker selects a contract and submits merchandise.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810dff</_id>
				<id>1</id>
				<title>Process Payment Request</title>
				<desc>Process request and starts the submit process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810e05</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810e0b</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Broker Submit Online Merchandise Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>broker submit online merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810e11</_id>
				<id>4</id>
				<title>Submit the Online Merchandise</title>
				<desc>Submit the Online Merchandise to a Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810e17</_id>
				<id>5</id>
				<title>Verifies the Transaction Status</title>
				<desc>Verifies the Crypto Status until this is confirmed.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810e1d</_id>
				<id>6</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the merchandise is submitted.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>customer online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810e23</_id>
				<id>7</id>
				<title>Gets the Crypto Customer Confirmation</title>
				<desc>Raises an event with the Crypto Customer Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810e2e</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to submit merchandise.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e273cf213b8767810df2</upd_at>
		<_id>56e1e273cf213b8767810df3</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Broker submits an Offline Cash Merchandise</name>
		<desc>Crypto Broker submits an Offline Cash Merchandise to a Crypto Customer, this merchandise is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e273cf213b8767810e37</_id>
				<id>0</id>
				<title>Crypto Broker submits an Offline Cash Merchandise</title>
				<desc>Customer select a contract and submit merchandise.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810e3d</_id>
				<id>1</id>
				<title>Process Submit Merchandise Request</title>
				<desc>Process request and starts the Submit Merchandise process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810e43</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810e49</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Broker Submit Offline Merchandise Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>broker submit offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810e4f</_id>
				<id>4</id>
				<title>Performs a De-stock Transaction</title>
				<desc>Performs a Cash De-stock Transaction.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>cash money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810e54</_id>
				<id>5</id>
				<title>Performs a Cash Withdrawal Transaction</title>
				<desc>Performs a Cash Withdrawal Transaction to perform a destock.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767810e5a</_id>
				<id>6</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the cash merchandise was submitted.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>broker submit offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810e60</_id>
				<id>7</id>
				<title>Sends Payment Notification to Crypto Customer</title>
				<desc>Sends the successful submit offline merchandise notification to Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810e66</_id>
				<id>8</id>
				<title>Gets the Crypto Customer Confirmation</title>
				<desc>Raises an event with the Crypto Customer Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810e6c</_id>
				<id>9</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to merchandise submit.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e273cf213b8767810e30</upd_at>
		<_id>56e1e273cf213b8767810e31</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Broker submits an Offline Bank Transfer Merchandise</name>
		<desc>Crypto Broker submits an Offline Bank Transfer to a Crypto Customer, this merchandise is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767810e75</_id>
				<id>0</id>
				<title>Crypto Broker submits an Offline Bank Transfer Merchandise</title>
				<desc>Customer select a contract and submit merchandise.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810e7b</_id>
				<id>1</id>
				<title>Process Submit Merchandise Request</title>
				<desc>Process request and starts the Submit Merchandise process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810e81</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810e87</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Broker Submit Offline Merchandise Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>broker submit offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810e8d</_id>
				<id>4</id>
				<title>Performs a De-stock Transaction</title>
				<desc>Performs a Bank De-stock Transaction.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>bank money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810e92</_id>
				<id>5</id>
				<title>Performs a Bank Withdrawal Transaction</title>
				<desc>Performs a Bank Withdrawal Transaction.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767810e98</_id>
				<id>6</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the bank merchandise was submitted</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>broker submit offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810e9e</_id>
				<id>7</id>
				<title>Sends Payment Notification to Crypto Customer</title>
				<desc>Sends the successful submit offline merchandise notification to Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810ea4</_id>
				<id>8</id>
				<title>Gets the Crypto Customer Confirmation</title>
				<desc>Raises an event with the Crypto Customer Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810eaa</_id>
				<id>9</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to merchandise submit.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767810e6e</upd_at>
		<_id>56e1e274cf213b8767810e6f</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer Acknowledge Online Merchandise</name>
		<desc>Broker receive an Online Merchandise from a Crypto Broker, this merchandise is associated to a Customer Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767810eb3</_id>
				<id>0</id>
				<title>Incoming an Online merchandise</title>
				<desc>Raise an event when is incoming an online merchandise</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer ack online merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810eb9</_id>
				<id>1</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Acknowledge Online Merchandise Business Transaction with the merchandise associated to a contract data.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>customer ack online merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810ebf</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810ec5</_id>
				<id>3</id>
				<title>Listen an incoming money event</title>
				<desc>Listens an incoming money notification.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>incoming intra user</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810ecb</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the merchandise is incoming.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer ack online merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810ed1</_id>
				<id>5</id>
				<title>Sends Acknowledge Merchandise Notification to Crypto Broker</title>
				<desc>Sends the successful Acknowledge merchandise notification to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810ed7</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810edd</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to ready to close.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767810eac</upd_at>
		<_id>56e1e274cf213b8767810ead</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Close a Purchase Contract</name>
		<desc>Creates and closes a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767810f18</_id>
				<id>0</id>
				<title>Start a Customer Broker Sale Contract closing</title>
				<desc>Start a Close Contract Business Transaction.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>user level business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f1e</_id>
				<id>1</id>
				<title>Gets the Negotiation ID</title>
				<desc>Gets the closed negotiation Id.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f24</_id>
				<id>2</id>
				<title>Sends Contract Hash to Crypto Broker</title>
				<desc>Sends the contract hash to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f2a</_id>
				<id>3</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f30</_id>
				<id>4</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to COMPLETED.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f42</_id>
				<id>6</id>
				<title>Sends Contract Hash to Crypto Broker</title>
				<desc>Sends the contract hash to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f48</_id>
				<id>7</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f4e</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to COMPLETED.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>5703ea5a7051987117d84cfa</upd_at>
		<_id>56e1e274cf213b8767810f13</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Add New Account</name>
		<desc>A customer registers a new bank account in the wallet.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767810f56</_id>
				<id>0</id>
				<title>inputs account registration</title>
				<desc>inputs account, currency and account type.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f5c</_id>
				<id>1</id>
				<title>sends registration request</title>
				<desc>sends data to the wallet plugin to registrate the account.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f62</_id>
				<id>2</id>
				<title>registers account</title>
				<desc>registers account: account, currency and account type</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767810f50</upd_at>
		<_id>56e1e274cf213b8767810f51</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Deposit</name>
		<desc>A User Deposits a certain amount on a specific account.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767810f6a</_id>
				<id>0</id>
				<title>request deposit transaction</title>
				<desc>inputs amount and selects account.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f70</_id>
				<id>1</id>
				<title>sends deposit request</title>
				<desc>sends data to the deposit plugin to make the transaction.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f76</_id>
				<id>2</id>
				<title>registers deposit transaction and sends credits to the wallet.</title>
				<desc>registers the transaction and send credits on the available and book balance of the account</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>deposit</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f7c</_id>
				<id>3</id>
				<title>register credit on the wallet</title>
				<desc>makes credit on the balances of the account.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767810f64</upd_at>
		<_id>56e1e274cf213b8767810f65</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Withdraw</name>
		<desc>A User Withdraws a certain amount on a specific account.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767810f84</_id>
				<id>0</id>
				<title>request withdraw transaction</title>
				<desc>inputs amount and selects account.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f8a</_id>
				<id>1</id>
				<title>sends withdraw request</title>
				<desc>sends data to the withdraw plugin to make the transaction.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f90</_id>
				<id>2</id>
				<title>registers withdraw transaction and sends debits to the wallet.</title>
				<desc>registers the transaction and validates that the selected account has enough money and send debits to the available and book balance of the account</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>withdraw</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f96</_id>
				<id>3</id>
				<title>register credit on the wallet</title>
				<desc>makes credit on the balances of the account.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767810f7e</upd_at>
		<_id>56e1e274cf213b8767810f7f</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Balance Inquiry</name>
		<desc>returns the current available and book balance of an account.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767810f9e</_id>
				<id>0</id>
				<title>balance inquiry</title>
				<desc>requests book and available balance of an account</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767810fa4</_id>
				<id>1</id>
				<title>sends balance request</title>
				<desc>sends balance request to the wallet plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810faa</_id>
				<id>2</id>
				<title>returns balance of the account</title>
				<desc>return balance of the account.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767810f98</upd_at>
		<_id>56e1e274cf213b8767810f99</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Transaction History</name>
		<desc>returns the transaction history of an account.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767810fb2</_id>
				<id>0</id>
				<title>transaction history request</title>
				<desc>requests list of transactions account</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767810fb8</_id>
				<id>1</id>
				<title>sends transaction history request</title>
				<desc>sends balance request to the wallet plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810fbe</_id>
				<id>2</id>
				<title>returns transaction history</title>
				<desc>returns transaction history sorted by date (from most recent to older).</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767810fac</upd_at>
		<_id>56e1e274cf213b8767810fad</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Hold</name>
		<desc>Holds a certain amount of money in the bank account</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767810fc4</_id>
				<id>0</id>
				<title>request Hold</title>
				<desc>request a hold of the funds in an account</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767810fca</_id>
				<id>1</id>
				<title>process hold transaction request</title>
				<desc>registers and sends holds funds on the available balance of the account</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>hold</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810fd0</_id>
				<id>2</id>
				<title>makes hold</title>
				<desc>processes the hold request by making a debit in the account.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767810fc0</upd_at>
		<_id>56e1e274cf213b8767810fc1</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Unhold</name>
		<desc>Unholds funds from an account that were previusly held by the hold transaction</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767810fd6</_id>
				<id>0</id>
				<title>request unhold</title>
				<desc>request an unhold of the funds in an account</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767810fdc</_id>
				<id>1</id>
				<title>process hold transaction request</title>
				<desc>registers, validates that has enough funds held, and sends unhold funds on the available balance of the account</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>unhold</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810fe2</_id>
				<id>2</id>
				<title>makes unhhold</title>
				<desc>processes the unhold request by summing all the amount of the hold transactions previusly made in the account, then makes the credit.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767810fd2</upd_at>
		<_id>56e1e274cf213b8767810fd3</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Balance Inquiry</name>
		<desc>Returns the current Available and Book balances of the Cash Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767810fea</_id>
				<id>0</id>
				<title>Balance inquiry</title>
				<desc>Requests both Book and Available balances of the wallet</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767810ff0</_id>
				<id>1</id>
				<title>Sends balance request</title>
				<desc>Sends balance request to the Wallet plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>cash money</name>
				<layer>wallet module</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810ff6</_id>
				<id>2</id>
				<title>Fetches and returns balances</title>
				<desc>Consults database for current balances of the cash wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767810fe4</upd_at>
		<_id>56e1e274cf213b8767810fe5</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Transaction History</name>
		<desc>Returns the transaction history (Only deposits and withdrawals) of the cash wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767810ffe</_id>
				<id>0</id>
				<title>Transaction history inquiry</title>
				<desc>Requests list of transactions</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767811004</_id>
				<id>1</id>
				<title>Sends transaction history request to cash wallet</title>
				<desc>Sends balance request to the cash wallet plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>cash money</name>
				<layer>wallet module</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b876781100a</_id>
				<id>2</id>
				<title>Retches and returns transaction history</title>
				<desc>Returns transaction history sorted by date DESC</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767810ff8</upd_at>
		<_id>56e1e274cf213b8767810ff9</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Deposit</name>
		<desc>A Fermat user deposits cash money on his Cash Money Reference Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767811012</_id>
				<id>0</id>
				<title>User requests deposit transaction</title>
				<desc>User enters amount and memo</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767811018</_id>
				<id>1</id>
				<title>Sends deposit request</title>
				<desc>Sends deposit data to the deposit plugin to make the transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>cash money</name>
				<layer>wallet module</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b876781101e</_id>
				<id>2</id>
				<title>Registers deposit transaction and sends credits to the wallet.</title>
				<desc>Tries to register a credit on the Available and Book balances of the wallet and, if succeded, registers the transaction internally</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>deposit</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767811024</_id>
				<id>3</id>
				<title>Register credit on the Available and Book balances of the wallet</title>
				<desc>Applies a credit on the Available and Book balances of the wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b876781100c</upd_at>
		<_id>56e1e274cf213b876781100d</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Withdrawal</name>
		<desc>A Fermat user whithdraws cash money from his Cash Money Reference Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b876781102c</_id>
				<id>0</id>
				<title>User requests withdrawal transaction</title>
				<desc>User enters amount and memo</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767811032</_id>
				<id>1</id>
				<title>Sends withdrawal request</title>
				<desc>Sends withdrawal data to the withdrawal plugin to make the transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>cash money</name>
				<layer>wallet module</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767811038</_id>
				<id>2</id>
				<title>Registers withdrawal transaction and sends debit to the wallet.</title>
				<desc>Tries to register a debit on the Available and Book balances of the wallet and, if succeded, registers the transaction internally</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>withdrawal</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b876781103e</_id>
				<id>3</id>
				<title>Register debit on the Available and Book balances of the wallet</title>
				<desc>Applies a debit on the Available and Book balances of the wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767811026</upd_at>
		<_id>56e1e274cf213b8767811027</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Send Crypto to Intra user</name>
		<desc>A Wallet&apos;s Intra User sends a crypto to another intra user contact for a specific amount.</desc>
		<prev>List Wallet Contacts</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767811076</_id>
				<id>0</id>
				<title>Select Intra User contact and send crypto</title>
				<desc>The customer selects a contact from the list and press send button, then complete Send forms and confirms the operation.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b876781107c</_id>
				<id>1</id>
				<title>Route send crypto to outgoing intra user plugin</title>
				<desc>The module sends it to the outgoing intra user plugin to create the crypto transaction.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767811082</_id>
				<id>2</id>
				<title>Route send crypto metadata to network service</title>
				<desc>The outgoing intra user plugin routes this crypto transaction to the crypto transmission network service to send metadata.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56f00cd12346c84f6d595408</_id>
				<id>3</id>
				<title>Route send crypto to Crypto Bitcoin Vault</title>
				<desc>The outgoing intra user plugin routes this crypto transaction to the Crypto Bitcoin Vault to send btc to another actor and debit amount to Available Balance.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56f00cd12346c84f6d59540e</_id>
				<id>4</id>
				<title>Send the crypto metadata</title>
				<desc>The network service sends the crypto metadata and informs that to Incoming Intra User Plugin.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>crypto transmission</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e275cf213b8767811093</_id>
				<id>5</id>
				<title>Transport request</title>
				<desc>The send metadata is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>6</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b8767811099</_id>
				<id>6</id>
				<title>Receive the crypto metadata</title>
				<desc>The network service receives the crypto metadata and informs that to Incoming Intra User Plugin.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>event</type>
				</next>
				<name>crypto transmission</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e275cf213b876781109d</_id>
				<id>7</id>
				<title>Call the incoming intra user plugin to deliver the sends bitcoins</title>
				<desc>The crypto network bitcoin places a call to the incoming intra user plugin and then it delivers the sends crypto.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678110a3</_id>
				<id>8</id>
				<title>List Received Transaction</title>
				<desc>The wallet&apos;s user go to Home menu and list receive transactions.</desc>
				<type>end</type>
				<name>incoming intra user</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
		</steps>
		<upd_at>56f00cd12346c84f6d5953f5</upd_at>
		<_id>56e1e274cf213b8767811071</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Refuse Payment Request from Intra user</name>
		<desc>A Wallet&apos;s Intra User refuse a payment request sent by another actor.</desc>
		<prev>List Payment Request</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e275cf213b87678110e4</_id>
				<id>0</id>
				<title>Select payment request record to refuse </title>
				<desc>The actor selects a payment request from the list and press deny button.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e275cf213b87678110ea</_id>
				<id>1</id>
				<title>Route request to payment request plugin</title>
				<desc>The module routes this payment request refuse to the Crypto Payment Request Plugin to reach the selected intra user.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e275cf213b87678110ef</_id>
				<id>2</id>
				<title>Route refuse to network service</title>
				<desc>The module routes this refuse to the network service to reach the selected intra user.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56ec8f5e181337594b06f3f8</_id>
				<id>3</id>
				<title>Call the intra user to deliver the refuse</title>
				<desc>The network service places a call to the intra user and then it delivers the refuse via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56f00cd12346c84f6d595466</_id>
				<id>4</id>
				<title>Transport request</title>
				<desc>The payment request is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>5</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56f00cd12346c84f6d59546c</_id>
				<id>5</id>
				<title>Receive the payment request</title>
				<desc>The network service receives the refuse and informs that to Request Crypto Payment Plugin.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>event</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56f00cd12346c84f6d595472</_id>
				<id>6</id>
				<title>Update the request status</title>
				<desc>The payment request is update with the status deny.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>crypto payment</name>
				<layer>request</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56f00cd12346c84f6d595478</_id>
				<id>7</id>
				<title>Return payment request send list</title>
				<desc>The module returns the payement request send list.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56f00cd12346c84f6d59547d</_id>
				<id>8</id>
				<title>List Send Payment Request</title>
				<desc>The wallet&apos;s user go to Payment Request menu and list payment request send, and show this status.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56f00cd12346c84f6d595450</upd_at>
		<_id>56e1e275cf213b87678110df</_id>
	</proc>
	<proc>
		<platfrm>P2P</platfrm>
		<name>Open the Intra Wallet Community Connections</name>
		<desc>List all connected users.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56e1e275cf213b876781117a</_id>
				<id>0</id>
				<title>Start </title>
				<desc>The user opens the Community Connections and the fragment proceeds to initialize all required components.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b876781117f</_id>
				<id>1</id>
				<title>Processing the requested list </title>
				<desc>The module routes the requested list to the IntraWalletUser plugin.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b8767811184</_id>
				<id>2</id>
				<title>Routing the requested list.</title>
				<desc>The plugin routes the request to the IntraWalletUserDao.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b8767811187</_id>
				<id>3</id>
				<title>Processing the list</title>
				<desc>The list is retrived from the DB and send back to the plugin.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b876781118c</_id>
				<id>4</id>
				<title>Getting the list of connected users.</title>
				<desc>The plugin send the request back to the module.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b8767811191</_id>
				<id>5</id>
				<title>Sends the list back to the view</title>
				<desc>The module routes the requested list to the fragment.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b8767811194</_id>
				<id>6</id>
				<title>Display list of users</title>
				<desc>The fragment displays the list of connected users.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56fc48767d89775463f05cb7</upd_at>
		<_id>56e1e275cf213b8767811177</_id>
	</proc>
	<proc>
		<platfrm>COR</platfrm>
		<name>Open Intra Wallet Community Requested Connections</name>
		<desc>List all users pending for acceptance.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56e1e275cf213b876781119a</_id>
				<id>0</id>
				<title>Start </title>
				<desc>The user opens the Community Request Connections and the fragment proceeds to initialize all required components.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b876781119f</_id>
				<id>1</id>
				<title>Processing the requested list of users pending for acceptance. </title>
				<desc>The module routes the requested list to the IntraWalletUserActor plugin.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678111a4</_id>
				<id>2</id>
				<title>Routing the requested list.</title>
				<desc>The plugin routes the request to the IntraWalletUserDao.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678111a7</_id>
				<id>3</id>
				<title>Processing the list</title>
				<desc>The list is retrived from the DB and send back to the plugin.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678111ac</_id>
				<id>4</id>
				<title>Getting the list of connected users.</title>
				<desc>The plugin send the request back to the module.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678111b1</_id>
				<id>5</id>
				<title>Sends the list back to the view</title>
				<desc>The module routes the requested list to the fragment.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678111b4</_id>
				<id>6</id>
				<title>Display the list of users. </title>
				<desc>The fragment displays the list of users pending for acceptance.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>57016fceb11754550799345a</upd_at>
		<_id>56e1e275cf213b8767811197</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Test Process</name>
		<desc>Describes the process of redeeming an issued asset to a redeem point</desc>
		<prev>Asset Distribution</prev>
		<next></next>
		<steps>
			<step>
				<_id>56f00ccc2346c84f6d594cf5</_id>
				<id>0</id>
				<title>Process Start</title>
				<desc>Platform starts</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594cfa</_id>
				<id>1</id>
				<title>Asset User Wallet</title>
				<desc>Starts by opening the Asset User Wallet with positive balance of an asset</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594d00</_id>
				<id>2</id>
				<title>Asset User Identity</title>
				<desc>Asset User Identity is created and User Actor is registered in P2P</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<name>asset user</name>
				<layer>identity</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594d05</_id>
				<id>3</id>
				<title>Redeem Point Selection</title>
				<desc>The Asset User selects the previously connected redeem point to redeeem to</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594d0b</_id>
				<id>4</id>
				<title>Asset Redemption</title>
				<desc>We generate a Bitcoin Transaction using the genesis Transaction of this asset</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>5</id>
				</next>
				<name>user redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594d11</_id>
				<id>5</id>
				<title>Asset Redemption</title>
				<desc>The Digital Asset Metadata information containing asset and asset transaction is sent to the Redeem Point.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>6</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594d17</_id>
				<id>6</id>
				<title>Asset Redemption</title>
				<desc>The digital asset metadata is received by the Redeem Point</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>7</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594d1d</_id>
				<id>7</id>
				<title>Asset Redemption</title>
				<desc>Redeem Points validated metadata by requesting to BCH the Genesis Transaction op_return. Is compared with hash.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>8</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>redeem point redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594d23</_id>
				<id>8</id>
				<title>Asset Redemption</title>
				<desc>The contract info is validated and the assets is from an Issuer we redeem from. OK or fail response is sent back to issuer</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>9</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594d29</_id>
				<id>9</id>
				<title>Asset Redemption</title>
				<desc>If redeem point is ok, we broadcast the previously generated transaction to the Genesis Address. If not, we cancel the transaction and free the founds.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>10</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<next>
					<type>direct call</type>
					<id>21</id>
				</next>
				<name>user redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594d2e</_id>
				<id>10</id>
				<title>Asset Redemption</title>
				<desc>Once the transaction is confirmed, we generate the debit in the User wallet and update stats.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>11</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594d34</_id>
				<id>11</id>
				<title>Asset Redemption</title>
				<desc>Once the transaction is confirmed, we generate the credit in the Redeem point wallet and update stats.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>12</id>
				</next>
				<name>redeem point wallet</name>
				<layer>wallet</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccd2346c84f6d594d3a</_id>
				<id>12</id>
				<title>Asset Redemption</title>
				<desc>Since Issuer shares public Key, Issuer also received the transaction and update stats.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>13</id>
				</next>
				<name>issuer redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccd2346c84f6d594d3f</_id>
				<id>13</id>
				<title>Asset Redemption</title>
				<desc>Asset is recicled and available again in the Issuer Wallet to restart the process</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>19</id>
				</next>
			</step>
			<step>
				<_id>56f00ccd2346c84f6d594d42</_id>
				<id>19</id>
				<title>End</title>
				<desc>End of process.</desc>
				<type>activity</type>
			</step>
			<step>
				<_id>56f00ccd2346c84f6d594d48</_id>
				<id>20</id>
				<title>Process Interrupted</title>
				<desc>Transaction is rollbacked, and Asset is available again in the Issuer Wallet.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
				<name>user redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccd2346c84f6d594d4e</_id>
				<id>21</id>
				<title>Asset not accepted</title>
				<desc>Due to poor network or invalidate contract, the asset is not accepted and rollbacked.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
				<name>user redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>56f00ccc2346c84f6d594cf1</upd_at>
		<_id>56f00ccc2346c84f6d594cf2</_id>
	</proc>
	<proc>
		<platfrm>COR</platfrm>
		<name>Test Process</name>
		<desc>This is a process intended to test the workflow drawing</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e275cf213b87678111f4</_id>
				<id>0</id>
				<title>Start step</title>
				<desc>This is the first step</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678111f9</_id>
				<id>1</id>
				<title>Next step</title>
				<desc>This is the first step, this one has a bifurcation, which can be parallel process or an &apos;if&apos;</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678111fe</_id>
				<id>2</id>
				<title>True state</title>
				<desc>This step is executed if the sentence is true</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b8767811203</_id>
				<id>3</id>
				<title>False state</title>
				<desc>This step is executed if the sentence is false, it loops back</desc>
				<type>activity</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b8767811208</_id>
				<id>4</id>
				<title>Out of loop</title>
				<desc>This is out of the loop</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56fa81d6f66a022b231e7d6a</upd_at>
		<_id>56e1e275cf213b87678111ef</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Distribution</name>
		<desc>Describes the process of distributing an issued asset to an user</desc>
		<prev>Asset Issuing</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e270cf213b8767810779</_id>
				<id>0</id>
				<title>Process Start</title>
				<desc>Platform starts</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e270cf213b876781077e</_id>
				<id>1</id>
				<title>Asset Issuer Wallet</title>
				<desc>Starts by opening the Asset Issuer Wallet with positive balance of an asset</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e270cf213b8767810784</_id>
				<id>2</id>
				<title>Asset Issuer Identity</title>
				<desc>Asset Issuer Identity is created and Issuer Actor is registered in P2P</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>asset issuer</name>
				<layer>identity</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e270cf213b8767810789</_id>
				<id>3</id>
				<title>Asset User Selection</title>
				<desc>The Asset Issuer selects the previously connected asset user to distribute</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e270cf213b876781078f</_id>
				<id>4</id>
				<title>Asset Distribution</title>
				<desc>We generate a Bitcoin Transaction using the genesis Transaction of this asset</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>asset distribution</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e270cf213b8767810795</_id>
				<id>5</id>
				<title>Asset Distribution</title>
				<desc>The Digital Asset Metadata information containing asset and asset transaction is sent to user.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e270cf213b876781079b</_id>
				<id>6</id>
				<title>Asset Distribution</title>
				<desc>The digital asset metadata is received by the user</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e270cf213b87678107a1</_id>
				<id>7</id>
				<title>Asset Distribution</title>
				<desc>User validated metadata by requesting to BCH the Genesis Transaction op_return. Is compated with hash.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset reception</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e270cf213b87678107a7</_id>
				<id>8</id>
				<title>Asset Distribution</title>
				<desc>The contract info is validated. OK or fail response is sent back to issuer</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e270cf213b87678107ad</_id>
				<id>9</id>
				<title>Asset Distribution</title>
				<desc>If user is ok, we broadcast the previously generated transaction to the Genesis Address. If not, we cancel the transaction and free the founds.</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
				<next>
					<id>21</id>
					<type>direct call</type>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e270cf213b87678107b2</_id>
				<id>10</id>
				<title>Asset Distribution</title>
				<desc>Once the transaction is confirmed, we generate the debit in the issuer wallet and update stats.</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<next>
					<id>20</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e270cf213b87678107b7</_id>
				<id>11</id>
				<title>Asset Distribution</title>
				<desc>Once the transaction is confirmed, we generate the debit in the User wallet and update stats.</desc>
				<type>activity</type>
				<next>
					<id>19</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e270cf213b87678107ba</_id>
				<id>19</id>
				<title>End</title>
				<desc>End of proccess.</desc>
				<type>activity</type>
			</step>
			<step>
				<_id>56e1e270cf213b87678107c0</_id>
				<id>20</id>
				<title>Process Interrupted</title>
				<desc>Transaction is rollbacked, and Asset is available again in the Issuer Wallet.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>asset distribution</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56e1e270cf213b87678107c6</_id>
				<id>21</id>
				<title>Asset not accepted</title>
				<desc>Due to poor network or invalidate contract, the asset is not accepted and rollbacked.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>asset distribution</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e270cf213b8767810775</upd_at>
		<_id>56e1e270cf213b8767810776</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Broker Reference Wallet Installation</name>
		<desc>Wallet Store installation procedure for the Crypto Broker Reference Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e271cf213b876781082e</_id>
				<id>0</id>
				<title>User selects the Broker Wallet on the Wallet Store</title>
				<desc>The user enters the Wallet Store and selects the Crypto Broker Reference Wallet to install it</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>wallet store</name>
				<layer>sub app</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810834</_id>
				<id>1</id>
				<title>Wallet Store invokes the Wallet Manager Middleware Plugin</title>
				<desc>Notifies the Wallet Manager Middleware Plugin so it can install the Wallet</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>wallet store</name>
				<layer>sub app module</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b876781083a</_id>
				<id>2</id>
				<title>Wallet Manager Middleware Plugin processes installation request</title>
				<desc>Sends a request to the Wallet Resources Network Service, to gather the resources of the Reference Wallet to be installed</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>wallet manager</name>
				<layer>middleware</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810840</_id>
				<id>3</id>
				<title>Wallet Resources Network Service downloads wallet&apos;s resources</title>
				<desc>Downloads the Crypto Broker Reference Wallet&apos;s resources, from the GitHub repository</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>wallet resources</name>
				<layer>network service</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810846</_id>
				<id>4</id>
				<title>Processing of the Wallet&apos;s Navigation Structure</title>
				<desc>Processes the Navigation Structure of the Reference Wallet and fires an event which effectively registers the Reference Wallet</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>wallet runtime</name>
				<layer>engine</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b876781084c</_id>
				<id>5</id>
				<title>Setting the Crypto Broker Reference Wallet as Installed</title>
				<desc>Sets the Crypto Broker Reference Wallet as installed, and fires an event</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>event</type>
				</next>
				<name>wallet manager</name>
				<layer>middleware</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810851</_id>
				<id>6</id>
				<title>Sub App Manager requests resources for the Wallet&apos;s Sub Apps</title>
				<desc>Sends a request to the Sub App Resources Network Service so it can download the necessary resources (Crypto Broker Identity and Crypto Customer Community Sub Apps)</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e271cf213b8767810856</_id>
				<id>7</id>
				<title>Sub App Resources Network Service downloads Sub App&apos;s resources</title>
				<desc>Downloads resources for Crypto Broker Identity and Crypto Customer Community Sub Apps</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e271cf213b876781085b</_id>
				<id>8</id>
				<title>Sub App Runtime parses the Navigation Structure and activates the Sub Apps</title>
				<desc>Processes the Navigation Structure of the Crypto Broker Identity and Crypto Customer Community Sub Apps and fires a event to activate them</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e271cf213b8767810860</_id>
				<id>9</id>
				<title>Setting the Sub Apps as Installed</title>
				<desc>The Sub App Manager Middleware sets the Sub Apps as Installed</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e271cf213b8767810827</upd_at>
		<_id>56e1e271cf213b8767810828</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Customer Reference Wallet Installation</name>
		<desc>Wallet Store installation procedure for the Crypto Customer Reference Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e271cf213b8767810869</_id>
				<id>0</id>
				<title>User selects the Customer Wallet on the Wallet Store</title>
				<desc>The user enters the Wallet Store and selects the Crypto Customer Reference Wallet to install it</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>wallet store</name>
				<layer>sub app</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b876781086f</_id>
				<id>1</id>
				<title>Wallet Store invokes the Wallet Manager Middleware Plugin</title>
				<desc>The Wallet Store notifies the Wallet Manager Middleware Plugin so it can install the Wallet</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>wallet store</name>
				<layer>sub app module</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810875</_id>
				<id>2</id>
				<title>Wallet Manager Middleware Plugin processes installation request</title>
				<desc>Sends a request to the Wallet Resources Network Service, to gather the resources of the Reference Wallet to be installed</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>wallet manager</name>
				<layer>middleware</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b876781087b</_id>
				<id>3</id>
				<title>Wallet Resources Network Service downloads wallet&apos;s resources</title>
				<desc>Downloads the Crypto Customer Reference Wallet&apos;s resources, from the GitHub repository</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>wallet resources</name>
				<layer>network service</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810881</_id>
				<id>4</id>
				<title>Processing of the Wallet&apos;s Navigation Structure</title>
				<desc>Processes the Navigation Structure of the Reference Wallet and fires an event which effectively registers this</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>wallet runtime</name>
				<layer>engine</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810887</_id>
				<id>5</id>
				<title>Setting the Crypto Customer Reference Wallet as Installed</title>
				<desc>Sets the Crypto Customer Reference Wallet as installed, and fires an event</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>event</type>
				</next>
				<name>wallet manager</name>
				<layer>middleware</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b876781088c</_id>
				<id>6</id>
				<title>Sub App Manager requests resources for the Wallet&apos;s Sub Apps</title>
				<desc>Sends a request to the Sub App Resources Network Service so it can download the necessary resources (Crypto Customer Identity and Crypto Customer Community Sub Apps)</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e271cf213b8767810891</_id>
				<id>7</id>
				<title>Sub App Resources Network Service downloads Sub App&apos;s resources</title>
				<desc>Downloads resources for Crypto Customer Identity and Crypto Customer Community Sub Apps</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e271cf213b8767810896</_id>
				<id>8</id>
				<title>Sub App Runtime parses the Navigation Structure and activates the Sub Apps</title>
				<desc>Processes the Navigation Structure of the Crypto Customer Identity and Crypto Customer Community Sub Apps and fires a event to activate them</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e271cf213b876781089b</_id>
				<id>9</id>
				<title>Setting the Sub Apps as Installed</title>
				<desc>The Sub App Manager Middleware sets the Sub Apps as Installed</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e271cf213b8767810862</upd_at>
		<_id>56e1e271cf213b8767810863</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Listing of Crypto Broker Identities</name>
		<desc>Shows a list of Crypto Broker Identities</desc>
		<prev>Crypto Broker Identity creation</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e271cf213b87678108ce</_id>
				<id>0</id>
				<title>Request list of identities</title>
				<desc>The Broker requests the list of his identities</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678108d4</_id>
				<id>1</id>
				<title>Process the request of the list of Identities</title>
				<desc>The Crypto Broker Identity Sub App Module processes the request</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678108da</_id>
				<id>2</id>
				<title>Fetches and returns the list of identities</title>
				<desc>The Crypto Broker Identity returns the list of identities associated to the broker</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678108e0</_id>
				<id>3</id>
				<title>Returns the list of Identities</title>
				<desc>Returns the list of Identities to the Identity Sub App</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678108e6</_id>
				<id>4</id>
				<title>Shows the list of Identities</title>
				<desc>Shows the Broker the list of his Identities</desc>
				<type>end</type>
				<name>crypto broker identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e271cf213b87678108c7</upd_at>
		<_id>56e1e271cf213b87678108c8</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Listing of Crypto Customer Identities</name>
		<desc>Shows a list of Crypto Customer Identities</desc>
		<prev>Crypto Customer Identity creation</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e271cf213b87678108ef</_id>
				<id>0</id>
				<title>Request list of identities</title>
				<desc>The Customer requests the list of his identities</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678108f5</_id>
				<id>1</id>
				<title>Process the request of the list of Identities</title>
				<desc>The Crypto Customer Identity Sub App Module processes the request</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678108fb</_id>
				<id>2</id>
				<title>Fetches and returns the list of identities</title>
				<desc>The Crypto Customer Identity returns the list of identities associated to the Customer</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810901</_id>
				<id>3</id>
				<title>Returns the list of Identities</title>
				<desc>Returns the list of Identities to the Identity Sub App</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810907</_id>
				<id>4</id>
				<title>Shows the list of Identities</title>
				<desc>Shows the Customer the list of his Identities</desc>
				<type>end</type>
				<name>crypto customer identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e271cf213b87678108e8</upd_at>
		<_id>56e1e271cf213b87678108e9</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Broker Identity - Reference Wallet association</name>
		<desc>A Broker associates one of his Identities to a Crypto Broker Reference Wallet</desc>
		<prev>List of Crypto Broker Identities</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e271cf213b8767810910</_id>
				<id>0</id>
				<title>Broker selects a Crypto Broker Reference Wallet and requests the list of Identities</title>
				<desc>The Broker enter in a Crypto Broker Reference Wallet and requests the list of his identities to associate with this wallet</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810916</_id>
				<id>1</id>
				<title>Process the request of the list of Identities</title>
				<desc>Wallet module receives the request from the Reference Wallet to obtain the list of Identities. The module forwards the request to the Crypto Broker Identity Plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b876781091c</_id>
				<id>2</id>
				<title>Return the Identities list</title>
				<desc>Crypto broker Identity returns the list of Identities</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810922</_id>
				<id>3</id>
				<title>Return Identities list</title>
				<desc>The Crypto Broker Wallet Module returns the list of Identities</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810928</_id>
				<id>4</id>
				<title>Reference Wallet shows the list of Identities andthe Broker selects one</title>
				<desc>Displays the list to the Broker, he then selects one, requesting the wallet module to commit the association</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b876781092e</_id>
				<id>5</id>
				<title>Processing of the Wallet - Identity association request</title>
				<desc>Wallet Module receives the request and indicates the Crypto Broker Actor Plugin to create the association</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810934</_id>
				<id>6</id>
				<title>Wallet - Identity association</title>
				<desc>The Wallet module registers the Wallet - Identity association in its database</desc>
				<type>end</type>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e271cf213b8767810909</upd_at>
		<_id>56e1e271cf213b876781090a</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer Identity - Reference Wallet association</name>
		<desc>A Customer associates one of his Identities to a Crypto Customer Reference Wallet</desc>
		<prev>List of Crypto Customer Identities</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e271cf213b876781093d</_id>
				<id>0</id>
				<title>Customer selects a Crypto Customer Reference Wallet and requests the list of Identities</title>
				<desc>The Customer enter in a Crypto Customer Reference Wallet and requests the list of his identities to associate with this wallet</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810943</_id>
				<id>1</id>
				<title>Process the request of the list of Identities</title>
				<desc>Wallet module receives the request from the Reference Wallet to obtain the list of Identities. The module forwards the request to the Crypto Customer Identity Plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810949</_id>
				<id>2</id>
				<title>Return the Identities list</title>
				<desc>Crypto Customer Identity returns the list of Identities</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b876781094f</_id>
				<id>3</id>
				<title>Return Identities list</title>
				<desc>The Crypto Customer Wallet Module returns the list of Identities</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810955</_id>
				<id>4</id>
				<title>Reference Wallet shows the list of Identities and the Customer selects one</title>
				<desc>Displays the list to the Customer, he then selects one, requesting the wallet module to commit the association</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b876781095b</_id>
				<id>5</id>
				<title>Processing of the Wallet - Identity association request</title>
				<desc>Wallet Module receives the request and indicates the Crypto Customer Actor Plugin to create the association</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810961</_id>
				<id>6</id>
				<title>Wallet - Identity association</title>
				<desc>The Wallet module registers the Wallet - Identity association in its database</desc>
				<type>end</type>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e271cf213b8767810936</upd_at>
		<_id>56e1e271cf213b8767810937</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Publishing the Crypto Broker Identity</name>
		<desc>The Broker publishes his Identity, making it visible to the Fermat Network</desc>
		<prev>Listing of Crypto Broker Identities</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e271cf213b876781096a</_id>
				<id>0</id>
				<title>Broker selects an Identity and selects &apos;Publish&apos;</title>
				<desc>The Broker selects one of his associated identities and publishes it. This requests the wallet module to change the state of this identity to Public</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810970</_id>
				<id>1</id>
				<title>Forward the request to the actor in order to publish the identity</title>
				<desc>The Crypto Broker Identity Sub App Module forwards this request to the Crypto Broker Actor</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810976</_id>
				<id>2</id>
				<title>Changes the status of the Identity to Public</title>
				<desc>The Crypto Broker Actor modifies the status of the Identity to Public</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b876781097c</_id>
				<id>3</id>
				<title>Commits status change in database</title>
				<desc>The Crypto Broker Identity Plugin changes its database to reflect the new Public status of the selected Identity</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810982</_id>
				<id>4</id>
				<title>Sends the Identity to the Actor Network Service</title>
				<desc>The Crypto Broker Actor Plugin sends the Identity&apos;s Information to the Actor Network Service</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810988</_id>
				<id>5</id>
				<title>Consults the details of the identity to publish</title>
				<desc>The Crypto Broker Actor Network Seervice consults the details of the identity to publish and finally sends it to the Fermat Network</desc>
				<type>end</type>
				<name>crypto broker</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e271cf213b8767810963</upd_at>
		<_id>56e1e271cf213b8767810964</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer requests a connection to a Broker</name>
		<desc>A Crypto Customer sends a connection request to a Crypto Broker, in order to be able to see his products and start a negotiation</desc>
		<prev>Listing of Crypto Broker Identities</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e271cf213b8767810991</_id>
				<id>0</id>
				<title>Broker selection and request submission</title>
				<desc>The Customer selects a Broker from the list of Brokers, and submits the request to make a connection</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b8767810997</_id>
				<id>1</id>
				<title>Route request to Network Service</title>
				<desc>The module routes this request to the Network Service so that it reaches the selected Broker</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker community</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b876781099d</_id>
				<id>2</id>
				<title>Call the Broker to deliver the request</title>
				<desc>The network service places a call to the broker, delivering the request via the Fermat Network.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678109a2</_id>
				<id>3</id>
				<title>Routing of the Customer&apos;s request through the network</title>
				<desc>The request is then transported through the communication layer, using one of the available channels</desc>
				<type>communication</type>
				<next>
					<id>4</id>
					<type>fermat message</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678109a8</_id>
				<id>4</id>
				<title>Request reception on the Broker&apos;s side</title>
				<desc>The Network Service receives the request and informs the Crypto Broker Actor</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>crypto broker</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678109ae</_id>
				<id>5</id>
				<title>Request recording and notification</title>
				<desc>The request is saved and a notification to the Broker is generated</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678109b4</_id>
				<id>6</id>
				<title>Records the notification</title>
				<desc>The the notification is saved, and the OS core library is notified.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>event</type>
				</next>
				<name>notification</name>
				<layer>middleware</layer>
				<platfrm>PIP</platfrm>
			</step>
			<step>
				<_id>56fa81d2f66a022b231e76e3</_id>
				<id>7</id>
				<title>Sends notification to the OS</title>
				<desc>The notification manager displays the notification to the OS, notifying the Broker of the connection request</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56fa81d2f66a022b231e76bd</upd_at>
		<_id>56e1e271cf213b876781098b</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Broker accepts a connection from a Customer</name>
		<desc>A Crypto Broker accepts a connection request send by a Crypto Customer</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e271cf213b87678109c2</_id>
				<id>0</id>
				<title>Request list of Crypto Customers waiting for connection</title>
				<desc>The Broker requests a list of Crypto Customers waiting to connect to him</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678109c8</_id>
				<id>1</id>
				<title>Forward request of list of Crypto Customers waiting for connection</title>
				<desc>The module routes this request to the Actor Plugin to get the list</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678109ce</_id>
				<id>2</id>
				<title>Returns list of Crypto Customers waiting for connection</title>
				<desc>Plugin consults its database to get the Crypto Customers waiting for connection</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678109d4</_id>
				<id>3</id>
				<title>Return the list of Crypto Customers waiting for connection</title>
				<desc>The module returns the list of Crypto Customers waiting for connection</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678109da</_id>
				<id>4</id>
				<title>Customer selection from returned Customer list</title>
				<desc>Shows the Broker the list of Crypto Customers waiting for connection so that he can select one to accept</desc>
				<type>start</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678109e0</_id>
				<id>5</id>
				<title>Register the acceptance of the connection</title>
				<desc>The Crypto Customer Community Module routes this request to the Actor so it can register the new connection</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678109e6</_id>
				<id>6</id>
				<title>Register the new connection in database</title>
				<desc>Changes in database the state of the connection to Accepted, while also notifying the Network Service to forward the change to the Crypto Customer</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678109ec</_id>
				<id>7</id>
				<title>Sends the message of the accepted connection to the Crypto Customer</title>
				<desc>Forwards the change of state to the Crypto Customer&apos;s device, that the connection request has been accepted</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>fermat message</type>
				</next>
				<name>crypto customer</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678109f2</_id>
				<id>8</id>
				<title>Receives the accepted changed state</title>
				<desc>Receives the state change of the acceptance of the connection by the Broker, while also sending an event to the OS</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>event</type>
				</next>
				<name>crypto customer</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b87678109f7</_id>
				<id>9</id>
				<title>Sends notification to the OS</title>
				<desc>Sends the notification to the OS, to notify the Customer of the state change</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e271cf213b87678109bb</upd_at>
		<_id>56e1e271cf213b87678109bc</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Bank Account Restock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e272cf213b8767810a00</_id>
				<id>0</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Broker indicates he want to increase  the stock of merchandise in Bank indicating the amount and account concept.</desc>
				<type>activity</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a06</_id>
				<id>1</id>
				<title>Create a Restock Business Transaction</title>
				<desc>Process the request and execute a Bank Money Restock Business Transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Bank Money Restock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a0c</_id>
				<id>2</id>
				<title>CBP-Business Transaction-Bank Money Restock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Bank Money Restock</name>
				</next>
				<name>bank money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a12</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Bank Money Restock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Hold</name>
				</next>
				<name>bank money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a18</_id>
				<id>4</id>
				<title>BNK-Bank Hold Transaction</title>
				<desc>Records the transaction and generates a debit to the Available Balance.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>hold</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a1e</_id>
				<id>5</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and credit records Available</desc>
				<type>activity</type>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e272cf213b87678109f9</upd_at>
		<_id>56e1e272cf213b87678109fa</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Bank Account Destock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e272cf213b8767810a27</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Bank Money Destock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a2d</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Bank. Then indicates the amount and account concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a33</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Bank Money Destock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a39</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Bank Money Destock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Bank Money Destock</name>
				</next>
				<name>bank money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a3f</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Bank Money Destock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>bank money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a45</_id>
				<id>5</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and debit records Available</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Unhold</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a4b</_id>
				<id>6</id>
				<title>BNK-Bank UnHold Transaction</title>
				<desc>Records the transaction and generates a credit to the Available Balance.</desc>
				<type>activity</type>
				<name>unhold</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e272cf213b8767810a20</upd_at>
		<_id>56e1e272cf213b8767810a21</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Cash Restock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e272cf213b8767810a54</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Cash Money Restock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a5a</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Cash. Then indicates the amount and concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a60</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Cash Money Restock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a66</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Cash Money Restock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>cash money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a6c</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Cash Money Restock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Hold</name>
				</next>
				<name>cash money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a72</_id>
				<id>5</id>
				<title>CSH-Bank Hold Transaction</title>
				<desc>Records the transaction and generates a debit to the Available Balance.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Reference Wallet</name>
				</next>
				<name>hold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a78</_id>
				<id>6</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and credit records Available</desc>
				<type>activity</type>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e272cf213b8767810a4d</upd_at>
		<_id>56e1e272cf213b8767810a4e</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Cash Destock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e272cf213b8767810a81</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Cash Money Destock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a87</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Cash. Then indicates the amount and concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a8d</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Cash Money Destock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a93</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Cash Money Destock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Cash Money Destock</name>
				</next>
				<name>cash money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a99</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Cash Money Destock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>cash money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810a9f</_id>
				<id>5</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and debit records Available</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Unhold</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810aa4</_id>
				<id>6</id>
				<title>CSH-Cash UnHold Transaction</title>
				<desc>Records the transaction and generates a credit to the Available Balance.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56e1e272cf213b8767810a7a</upd_at>
		<_id>56e1e272cf213b8767810a7b</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Restock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e272cf213b8767810aad</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Crypto Money Restock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810ab3</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Crypto. Then indicates the amount and concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810ab9</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Crypto Money Restock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810abf</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Crypto Money Restock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Crypto Money Restock</name>
				</next>
				<name>crypto money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810ac5</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Crypto Money Restock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Hold</name>
				</next>
				<name>crypto money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810acb</_id>
				<id>5</id>
				<title>CCP-Crypto Hold Transaction</title>
				<desc>Records the transaction and generates a debit to the Available Balance.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>hold</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810ad0</_id>
				<id>6</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and credit records Available</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56e1e272cf213b8767810aa6</upd_at>
		<_id>56e1e272cf213b8767810aa7</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Destock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e272cf213b8767810ad9</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Crypto Money Destock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810adf</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Crypto. Then indicates the amount and concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810ae5</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Crypto Money Destock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810aeb</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Crypto Money Destock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Crypto Money Destock</name>
				</next>
				<name>crypto money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810af1</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Cash Money Destock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810af7</_id>
				<id>5</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and debit records Available</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Unhold</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810afd</_id>
				<id>6</id>
				<title>CCP-Crypto UnHold Transaction</title>
				<desc>Records the transaction and generates a credit to the Available Balance.</desc>
				<type>activity</type>
				<name>unhold</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e272cf213b8767810ad2</upd_at>
		<_id>56e1e272cf213b8767810ad3</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Update Negotiation Customer Broker</name>
		<desc>The Crypto Customer update negotiation with Crypto Broker.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e272cf213b8767810b57</_id>
				<id>0</id>
				<title>Start Customer Broker Update Negotiation Transaction</title>
				<desc>The Crypto Customer indicates to update negotiations with the selected Crypto Broker</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b5d</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to update negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b63</_id>
				<id>2</id>
				<title>Manages the update of Negotiation</title>
				<desc>Create a transaction to manage the update negotiation Customer Broker</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b68</_id>
				<id>3</id>
				<title>Update The Purchase Negotiation</title>
				<desc>Update the purchase negotiation of Customer</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b6e</_id>
				<id>4</id>
				<title>Process Sending Update Negotiation To Broker</title>
				<desc>Process Sending Update Negotiation To Broker</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b74</_id>
				<id>5</id>
				<title>Sending Update Negotiation To Broker</title>
				<desc>Sending update negotiation to Broker for update Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>fermat message</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b7a</_id>
				<id>6</id>
				<title>Receiving Update Negotiation From Customer</title>
				<desc>Receiving update negotiation from Customer for update Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b80</_id>
				<id>7</id>
				<title>Process Receiving Update Negotiation From Customer</title>
				<desc>Process Receiving Update Negotiation From Customer and Request data Sale negotiation</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b86</_id>
				<id>8</id>
				<title>Provides data of Sale negotiation</title>
				<desc>Provides data of Sale negotiation</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b8c</_id>
				<id>9</id>
				<title>Compare Date of Purchase Negotiation vs Sale Negotiation</title>
				<desc>Compare Date of Purchase Negotiation vs Sale Negotiation to maintain synchronization of Negotiation Customer-Broker.</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b92</_id>
				<id>10</id>
				<title>Update The Sale Negotiation</title>
				<desc>If the data del Sale Negotiation are more updated than the negotiation Purchase keeps if not update</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b98</_id>
				<id>11</id>
				<title>Sending Confirmation of Update Negotiation</title>
				<desc>Sending Confirmation of Update Negotiation to Customer</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>fermat message</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810b9e</_id>
				<id>12</id>
				<title>Receiving Confirmation of Update Negotiation</title>
				<desc>Receiving Confirmation of Update Negotiation From Broker</desc>
				<type>activity</type>
				<next>
					<id>13</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810ba4</_id>
				<id>13</id>
				<title>Process the Receive Confirmation of Update Negotiation</title>
				<desc>Process the Receive Confirmation of Update Negotiation</desc>
				<type>activity</type>
				<next>
					<id>14</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810baa</_id>
				<id>14</id>
				<title>Confirm the Update Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e272cf213b8767810b50</upd_at>
		<_id>56e1e272cf213b8767810b51</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Update Negotiation Broker Customer</name>
		<desc>The Crypto Broker update negotiation with Crypto Customer.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e272cf213b8767810bb3</_id>
				<id>0</id>
				<title>Start Customer Broker Update Negotiation Transaction</title>
				<desc>The Crypto Broker indicates to update negotiations with the selected Crypto Customer</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810bb9</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to update negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810bbf</_id>
				<id>2</id>
				<title>Manages the update of Negotiation</title>
				<desc>Create a transaction to manage the update negotiation Broker Customer</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810bc5</_id>
				<id>3</id>
				<title>Update The Sale Negotiation</title>
				<desc>Update the Sale negotiation of Customer</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810bcb</_id>
				<id>4</id>
				<title>Process Sending Update Negotiation To Customer</title>
				<desc>Process Sending Update Negotiation To Customer</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810bd1</_id>
				<id>5</id>
				<title>Sending Update Negotiation To Customer</title>
				<desc>Sending update negotiation to Customer for update Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810bd7</_id>
				<id>6</id>
				<title>Receiving Update Negotiation From Broker</title>
				<desc>Receiving update negotiation from Broker for update Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810bdd</_id>
				<id>7</id>
				<title>Prosess Receiving Update Negotiation From Broker</title>
				<desc>Prosess Receiving Update Negotiation From Broker and Request data Purchase negotiation</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810be2</_id>
				<id>8</id>
				<title>Provides data of Pruchase negotiation</title>
				<desc>Provides data of Purchase negotiation</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e272cf213b8767810be8</_id>
				<id>9</id>
				<title>Compare Date of Sale Negotiation vs Purchase Negotiation</title>
				<desc>Compare Date of Sale Negotiation vs Purchase Negotiation to maintain synchronization of Negotiation Customer-Broker.</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810bee</_id>
				<id>10</id>
				<title>Update The Purchase Negotiation</title>
				<desc>If the data del Purchase Negotiation are more updated than the negotiation Purchase keeps if not update</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810bf4</_id>
				<id>11</id>
				<title>Sending Confirmation of Update Negotiation</title>
				<desc>Sending Confirmation of Update Negotiation to Broker</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810bfa</_id>
				<id>12</id>
				<title>Receiving Confirmation of Update Negotiation</title>
				<desc>Receiving Confirmation of Update Negotiation From Customer</desc>
				<type>activity</type>
				<next>
					<id>13</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810c00</_id>
				<id>13</id>
				<title>Process the Receive Confirmation of Update Negotiation</title>
				<desc>Process the Receive Confirmation of Update Negotiation</desc>
				<type>activity</type>
				<next>
					<id>14</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810c06</_id>
				<id>14</id>
				<title>Confirm the Update Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e272cf213b8767810bac</upd_at>
		<_id>56e1e272cf213b8767810bad</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Close Negotiation Customer Broker</name>
		<desc>The Crypto Customer update negotiation with Crypto Broker.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e272cf213b8767810c0f</_id>
				<id>0</id>
				<title>Start Customer Broker Close Negotiation Transaction</title>
				<desc>The Crypto Customer Acept all clause and it Close negotiations with the selected Crypto Broker</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810c15</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to Close negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e272cf213b8767810c1b</_id>
				<id>2</id>
				<title>Manages the Close of Negotiation</title>
				<desc>Create a transaction to manage the Close negotiation Customer Broker, If the merchandise is currency Crypto, requesting Crypto address actuality the Customer</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c20</_id>
				<id>3</id>
				<title>Close The Purchase Negotiation</title>
				<desc>If the merchandise is currency Crypto, add to information of Purchase Negotiation the Crypto address actuality the Customer and later Close the Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c26</_id>
				<id>4</id>
				<title>Process Sending Close Negotiation To Broker</title>
				<desc>Process Sending Close Negotiation To Broker</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c2c</_id>
				<id>5</id>
				<title>Sending Close Negotiation To Broker</title>
				<desc>Sending Close negotiation to Broker for Close Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c32</_id>
				<id>6</id>
				<title>Receiving Close Negotiation From Customer</title>
				<desc>Receiving Close negotiation from Customer for Close Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c38</_id>
				<id>7</id>
				<title>Process Receiving Close Negotiation From Customer</title>
				<desc>Process Receiving Close Negotiation From Customer. If the payment is currency Crypto, requesting Crypto address actuality the Broker</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c3e</_id>
				<id>8</id>
				<title>Close The Sale Negotiation</title>
				<desc>If the payment is currency Crypto, add to information of Sale Negotiation the Crypto address actuality the Broker and later Close the Sale Negotiation </desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c44</_id>
				<id>9</id>
				<title>Sending Confirmation of Close Negotiation</title>
				<desc>Sending Confirmation of Close Negotiation to Customer</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c4a</_id>
				<id>10</id>
				<title>Receiving Confirmation of Close Negotiation</title>
				<desc>Receiving Confirmation of Close Negotiation From Broker</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c50</_id>
				<id>11</id>
				<title>Process the Receive Confirmation of Close Negotiation</title>
				<desc>Process the Receive Confirmation of Close Negotiation</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c56</_id>
				<id>12</id>
				<title>Confirm the Close Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e272cf213b8767810c08</upd_at>
		<_id>56e1e272cf213b8767810c09</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Close Negotiation Broker Customer</name>
		<desc>The Crypto Broker update negotiation with Crypto Customer.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e273cf213b8767810c5f</_id>
				<id>0</id>
				<title>Start Customer Broker Close Negotiation Transaction</title>
				<desc>The Crypto Broker Acept all clause and it Close negotiations with the selected Crypto Customer</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c65</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to Close negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c6b</_id>
				<id>2</id>
				<title>Manages the Close of Negotiation</title>
				<desc>Create a transaction to manage the Close Negotiation Broker Customer. If the payment is currency Crypto, requesting Crypto address actuality the Broker</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c71</_id>
				<id>3</id>
				<title>Close The Sale Negotiation</title>
				<desc>If the merchandise is currency Crypto, add to information of Sale Negotiation the Crypto address actuality the Broker and later Close the Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c77</_id>
				<id>4</id>
				<title>Process Sending Close Negotiation To Customer</title>
				<desc>Process Sending Close Negotiation To Customer</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c7d</_id>
				<id>5</id>
				<title>Sending Close Negotiation To Customer</title>
				<desc>Sending Close negotiation to Customer for Close Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c83</_id>
				<id>6</id>
				<title>Receiving Close Negotiation From Broker</title>
				<desc>Receiving Close negotiation from Broker for Close Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c89</_id>
				<id>7</id>
				<title>Process Receiving Close Negotiation From Broker</title>
				<desc>Process Receiving Close Negotiation From Broker. If the merchandise is currency Crypto, requesting Crypto address actuality the Customer</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c8f</_id>
				<id>8</id>
				<title>Close The Purchase Negotiation</title>
				<desc>If the merchandise is currency Crypto, add to information of Purchase Negotiation the Crypto address actuality the Customer and later Close the Purchase Negotiation </desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c95</_id>
				<id>9</id>
				<title>Sending Confirmation of Close Negotiation</title>
				<desc>Sending Confirmation of Close Negotiation to Customer</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810c9b</_id>
				<id>10</id>
				<title>Receiving Confirmation of Close Negotiation</title>
				<desc>Receiving Confirmation of Close Negotiation From Broker</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810ca1</_id>
				<id>11</id>
				<title>Process the Receive Confirmation of Close Negotiation</title>
				<desc>Process the Receive Confirmation of Close Negotiation</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810ca7</_id>
				<id>12</id>
				<title>Confirm the Close Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e273cf213b8767810c58</upd_at>
		<_id>56e1e273cf213b8767810c59</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Open a Sale Contract</name>
		<desc>Creates and opens a Customer- Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e273cf213b8767810ce9</_id>
				<id>0</id>
				<title>Start a Sale Contract beetwen a Broker and a Customer</title>
				<desc>Start a Open Contract Business Transaction.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>user level business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810cef</_id>
				<id>1</id>
				<title>Gets the Negotiation ID</title>
				<desc>Gets the ID of th closed negotiation.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810cf5</_id>
				<id>2</id>
				<title>Creates a Open Contract Business Transaction</title>
				<desc>Creates a Open Contract Business Transaction with the closed negotiation data.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>open contract</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810cfb</_id>
				<id>3</id>
				<title>Gets the Negotiation clauses</title>
				<desc>Gets the Clauses associated to the ID of the closed negotiation.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d01</_id>
				<id>4</id>
				<title>Creates a new Contract Record</title>
				<desc>Creates a new Contract Record with the Negotiation data.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>open contract</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d07</_id>
				<id>5</id>
				<title>Creates a new Customer Broker Sale Contract</title>
				<desc>Creates a new Customer Broker Sale Contract with the negotiation data.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d0d</_id>
				<id>6</id>
				<title>Sends Contract Hash to a Crypto Customer</title>
				<desc>Sends the contract hash to a Crypto Customer, this hash will use as the contract Id</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d13</_id>
				<id>7</id>
				<title>Gets the Crypto Customer Confirmation</title>
				<desc>Raises an event with the Crypto Customer Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d19</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to pending payment.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e273cf213b8767810ce2</upd_at>
		<_id>56e1e273cf213b8767810ce3</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer sends an Online Payment</name>
		<desc>Customer sends an Online Payment to a Crypto Broker; this payment is associated to a Customer Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e273cf213b8767810d22</_id>
				<id>0</id>
				<title>Customer sends online payment</title>
				<desc>Customer select a contract and send a payment.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d28</_id>
				<id>1</id>
				<title>Process Payment Request</title>
				<desc>Process request and starts the payment process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d2e</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d34</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Online Payment Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d3a</_id>
				<id>4</id>
				<title>Sends the Online Payment</title>
				<desc>Sends the Online Payment to a Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d40</_id>
				<id>5</id>
				<title>Verifies the Transaction Status</title>
				<desc>Verifies the Crypto Status until this is confirmed.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d46</_id>
				<id>6</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the payment was submitted.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>customer online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d4c</_id>
				<id>7</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d57</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to submit payment.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e273cf213b8767810d1b</upd_at>
		<_id>56e1e273cf213b8767810d1c</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer sends an Offline Payment</name>
		<desc>Customer sends an Offline Payment to a Crypto Broker, this payment is associated to a Customer Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e273cf213b8767810d60</_id>
				<id>0</id>
				<title>Customer sends offline payment</title>
				<desc>Customer select a contract and send payment.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d66</_id>
				<id>1</id>
				<title>Process Payment Request</title>
				<desc>Process request and starts the payment process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d6c</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d72</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Offline Payment Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer offline payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d78</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the payment was submitted.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer offline payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d7e</_id>
				<id>5</id>
				<title>Sends Payment Notification to Crypto Broker</title>
				<desc>Sends the sucessful payment notification to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d84</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d8a</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to payment submit.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e273cf213b8767810d59</upd_at>
		<_id>56e1e273cf213b8767810d5a</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Broker Acknowledge Online Payment</name>
		<desc>Broker receive an Online Payment from a Crypto Customer, this payment is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e273cf213b8767810d93</_id>
				<id>0</id>
				<title>Incoming an Online payment</title>
				<desc>Raise an event when incoming an online payment</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d99</_id>
				<id>1</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Online Payment Business Transaction with the payment associated to a contract data.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>broker ack online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810d9f</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810da5</_id>
				<id>3</id>
				<title>Listen an incoming money event</title>
				<desc>Listen an incoming money event that indicates that a online transaction is complete.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>incoming intra user</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810dab</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate an incoming payment.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>broker ack online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810db1</_id>
				<id>5</id>
				<title>Sends Acknowledge Payment Notification to Crypto Customer</title>
				<desc>Sends the successful Acknowledge payment notification to Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810db7</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e273cf213b8767810dbd</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to pending merchandise.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e273cf213b8767810d8c</upd_at>
		<_id>56e1e273cf213b8767810d8d</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer Acknowledge Offline Merchandise</name>
		<desc>Customer receive an Offline Merchandise from a Crypto Broker, this payment is associated to a Customer Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767810ee6</_id>
				<id>0</id>
				<title>Crypto Customer acknowledges merchandise</title>
				<desc>The crypto Customer acknowledges the incoming merchandise</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810eec</_id>
				<id>1</id>
				<title>Process Acknowledge Request</title>
				<desc>Process request and starts the acknowledge process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810ef2</_id>
				<id>2</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Ack Offline Merchandise Business Transaction with the payment associated to a contract data.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer ack offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810ef8</_id>
				<id>3</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810efe</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the merchandise is incoming.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer ack offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f04</_id>
				<id>5</id>
				<title>Sends Acknowledge Merchandise Notification to Crypto Broker</title>
				<desc>Sends the successful Acknowledge merchandise notification to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f0a</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767810f10</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to ready to close.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767810edf</upd_at>
		<_id>56e1e274cf213b8767810ee0</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Hold</name>
		<desc>Holds (decrements available balance) an amount of cash money from the cash wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b8767811044</_id>
				<id>0</id>
				<title>External plugin requests a hold of the funds from the cash wallet</title>
				<desc>For this, it sends a transaction UUID, an amount, a memo, and its own public key</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b876781104a</_id>
				<id>1</id>
				<title>Receives hold transaction request</title>
				<desc>Registers hold transaction internally as an ACKNOWLEDGED transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>hold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767811050</_id>
				<id>2</id>
				<title>Internal agent processes hold transaction request</title>
				<desc>Tries to hold funds in wallet, if succeded, changes internal status to CONFIRMED, otherwise REJECTED</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>hold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767811056</_id>
				<id>3</id>
				<title>Tries to hold available funds</title>
				<desc>Processes the hold request by making a debit on the available balance of the cash wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767811040</upd_at>
		<_id>56e1e274cf213b8767811041</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Unhold</name>
		<desc>Unholds (increments available balance) an amount of cash money from the cash wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e274cf213b876781105c</_id>
				<id>0</id>
				<title>External plugin requests am unhold of the funds from the cash wallet</title>
				<desc>For this, it sends a transaction UUID, an amount, a memo, and its own public key</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e274cf213b8767811062</_id>
				<id>1</id>
				<title>Receives unhold transaction request</title>
				<desc>Registers unhold transaction internally as an ACKNOWLEDGED transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>unhold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b8767811068</_id>
				<id>2</id>
				<title>Internal agent processes unhold transaction request</title>
				<desc>Tries to unhold funds in wallet, if succeded, changes internal status to CONFIRMED, otherwise REJECTED</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>unhold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e274cf213b876781106e</_id>
				<id>3</id>
				<title>Tries to unhold available funds</title>
				<desc>Processes the unhold request by making a debit on the available balance of the cash wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e274cf213b8767811058</upd_at>
		<_id>56e1e274cf213b8767811059</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Send Payment Request to Intra user</name>
		<desc>A Wallet&apos;s Intra User sends a payment request to another intra user contact to request payment for a specific amount.</desc>
		<prev>List Wallet Contacts</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e275cf213b87678110af</_id>
				<id>0</id>
				<title>Select Intra User contact and submit payment request</title>
				<desc>The customer selects a contact from the list and submits the payment request.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678110b5</_id>
				<id>1</id>
				<title>Route Send to Outgoing Intra Actor Plugin</title>
				<desc>The module routes this crypto send to the Outgoing Intra Actor Plugin to send the actor selected.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e275cf213b87678110ba</_id>
				<id>2</id>
				<title>Send metadata to network service</title>
				<desc>The Outgoing Intra Actor plugin routes the send metadata to the network service to send payment information to actor selected.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678110c0</_id>
				<id>3</id>
				<title>Call the intra user to deliver the payment request</title>
				<desc>The network service places a call to the intra user and then it delivers the payment request via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e275cf213b87678110c5</_id>
				<id>4</id>
				<title>Transport request</title>
				<desc>The payment request is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>5</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678110cb</_id>
				<id>5</id>
				<title>Receive the payment request</title>
				<desc>The network service receives the payment request and informs that to Request Crypto Payment Plugin.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>event</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e275cf213b87678110d1</_id>
				<id>6</id>
				<title>Records the request</title>
				<desc>The payment request is saved with the type received and associated to intra user actor .</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>crypto payment</name>
				<layer>request</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e275cf213b87678110d7</_id>
				<id>7</id>
				<title>Return payment request list</title>
				<desc>The module returns the payement request receive list.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e275cf213b87678110dc</_id>
				<id>8</id>
				<title>List Received Payment Request</title>
				<desc>The wallet&apos;s user go to Payment Request menu and list payment request receive.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e275cf213b87678110a9</upd_at>
		<_id>56e1e275cf213b87678110aa</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Creates an Intra Wallet User</name>
		<desc>Creates an Intra Wallet User Identity.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e275cf213b8767811146</_id>
				<id>0</id>
				<title>Open the wallet to create a new Identity</title>
				<desc>The user open the Wallet User Identity and proceed to fill the requested data inside the form and press the save button.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b8767811149</_id>
				<id>1</id>
				<title>Process Intra User Identity creation request</title>
				<desc>The module routes the data containing the name and profile picture to the  IntraWalletUserModule plugin. </desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b876781114c</_id>
				<id>2</id>
				<title>Process Intra User Identity creation request</title>
				<desc>The module routes the name and profile picture to the  IntraWalletIdentityPluginRoot  plugin.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b8767811151</_id>
				<id>3</id>
				<title>Process Intra User Identity creation request</title>
				<desc>Within this plugin, two different keys are created, a public one and a private one, after that the plugin routes the data to the IntraWalletUserIdentityDao.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b8767811154</_id>
				<id>4</id>
				<title>Creates the Intra User Identity</title>
				<desc>The dao  inserts the data in the DB.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e275cf213b8767811142</upd_at>
		<_id>56e1e275cf213b8767811143</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Add Intra User Actor as a Wallet Contact</name>
		<desc>A Wallet&apos;s User sends a payment to an intra user is not your wallet contact.</desc>
		<prev>Connect with other intra user</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e275cf213b87678111bc</_id>
				<id>0</id>
				<title>Select Send btc options.</title>
				<desc>The wallet user selects Send btc options and write contact name in in the sending form, then select a intra user connection</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678111c2</_id>
				<id>1</id>
				<title>Convert connection as wallet contact</title>
				<desc>The module create a new contact through the Wallet Contact Middleware and send crypto address request for network services.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e275cf213b87678111c8</_id>
				<id>2</id>
				<title>Call the intra user to deliver the address request</title>
				<desc>The network service places a call to the intra user and then it delivers the address request via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto addresses</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e275cf213b87678111cd</_id>
				<id>3</id>
				<title>Transport request</title>
				<desc>The address request is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>4</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678111d3</_id>
				<id>4</id>
				<title>Receive the address request</title>
				<desc>The network service receives the address request and informs that to Crypto Addresses Middleware.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>crypto addresses</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e275cf213b87678111d7</_id>
				<id>5</id>
				<title>Get the address of intra user</title>
				<desc>Crypto Addresses Middleware gets a new address through the Crypto Address Manager and the return to Crypto Address Network Services.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678111dd</_id>
				<id>6</id>
				<title>Call the Wallet Contacts middleware to deliver the intra user address</title>
				<desc>The network service places a call to the Wallet Contacts middleware and then it delivers the crypto address via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>crypto addresses</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e275cf213b87678111e2</_id>
				<id>7</id>
				<title>Transport request</title>
				<desc>The crypto address is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>8</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678111e7</_id>
				<id>8</id>
				<title>Update wallet contact crypto address</title>
				<desc>The crypto address network services returns the address of the contact, which is updated in the database .</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e275cf213b87678111ec</_id>
				<id>9</id>
				<title>List wallets contacts</title>
				<desc>The wallet&apos;s user will contact list and select the new contact to view his address.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e275cf213b87678111b6</upd_at>
		<_id>56e1e275cf213b87678111b7</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Crypto</name>
		<desc>Broker identity creation procedure, to be used by Crypto Brokers</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56ede626181337594b0a4dc2</_id>
				<id>0</id>
				<title>select broker and submit request</title>
				<desc>the customer selects a broker from the list and submits the request to connect to him.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>crypto broker community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56ede627181337594b0a4dca</_id>
				<id>1</id>
				<title>route request to network service</title>
				<desc>the module routes this request to the network service to reach the selected broker.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<name>crypto broker community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56ede628181337594b0a4dd2</_id>
				<id>2</id>
				<title>call the broker to deliver the request</title>
				<desc>the network service places a call to the broker and then it delivers the request via the fermat network.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56ede629181337594b0a4dda</_id>
				<id>3</id>
				<title>call the broker to deliver the request</title>
				<desc>the network service places a call to the broker and then it delivers the request via the fermat network.</desc>
				<type>activity</type>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56edfc3d181337594b0a8270</upd_at>
		<_id>56ede625181337594b0a4dba</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Crypto Broker Identity creation</name>
		<desc>Broker identity creation procedure, to be used by Crypto Brokers</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56e1e271cf213b87678108a4</_id>
				<id>0</id>
				<title>select broker and submit request</title>
				<desc>the customer selects a broker from the list and submits the request to connect to him.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678108aa</_id>
				<id>1</id>
				<title>route request to network service</title>
				<desc>the module routes this request to the network service to reach the selected broker.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e271cf213b87678108b0</_id>
				<id>2</id>
				<title>call the broker to deliver the request</title>
				<desc>the network service places a call to the broker and then it delivers the request via the fermat network.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56ef0126a889dbdf58f02bac</_id>
				<id>3</id>
				<title>call the broker to deliver the request</title>
				<desc>the network service places a call to the broker and then it delivers the request via the fermat network.</desc>
				<type>activity</type>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56ef011fa889dbdf58f02b93</upd_at>
		<_id>56e1e271cf213b876781089e</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Issuing</name>
		<desc>Describes the process of issuing Assets by the actor Asset Issuer</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56f00ccb2346c84f6d594c06</_id>
				<id>0</id>
				<title>Process Start</title>
				<desc>Platform starts</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
			</step>
			<step>
				<_id>56f00ccb2346c84f6d594c0c</_id>
				<id>1</id>
				<title>Asset Factory</title>
				<desc>Starts by opening the Asset Factory Sub App</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<name>asset factory</name>
				<layer>sub app</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccb2346c84f6d594c12</_id>
				<id>2</id>
				<title>Asset Issuer Identity</title>
				<desc>Asset Issuer Identity is created and Issuer Actor is registered in P2P</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<name>asset issuer</name>
				<layer>identity</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594c18</_id>
				<id>3</id>
				<title>Asset parameters definition</title>
				<desc>The Asset information is entered, including the value on bitcoins for each asset</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
				<name>asset factory</name>
				<layer>sub app</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594c1e</_id>
				<id>4</id>
				<title>Transaction Asset Issuing</title>
				<desc>We revalidate we have enough founds in the wallet.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>5</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>asset factory</name>
				<layer>sub app</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594c24</_id>
				<id>5</id>
				<title>Transaction Asset Issuing</title>
				<desc>We validate the contract and properties defined are all valid for each asset.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>6</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594c2a</_id>
				<id>6</id>
				<title>Transaction Asset Issuing</title>
				<desc>We request the Genesis Address to the Asset Vault and register it in the Address Book.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>7</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594c30</_id>
				<id>7</id>
				<title>Transaction Asset Issuing</title>
				<desc>We lock the asset and generate the Digital Asset Metadata with its asses hash.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>8</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594c36</_id>
				<id>8</id>
				<title>Transaction Asset Issuing</title>
				<desc>We generate a Bitcoin transaction using the Outgoing Intra Actor plugin, which includes the op_return, the Genesis Amount and the Genesis Address.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>9</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594c3c</_id>
				<id>9</id>
				<title>Transaction Asset Issuing</title>
				<desc>We store the Genesis Transaction in the metadata, and wait for broadcasting of the transaction.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>10</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594c42</_id>
				<id>10</id>
				<title>Transaction Asset Issuing</title>
				<desc>When transaction is registered to be On Block Chain, we finish the asset Issuing process.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>11</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594c48</_id>
				<id>11</id>
				<title>End</title>
				<desc>The asset is received at the Asset Issuer Wallet.</desc>
				<type>activity</type>
				<name>asset factory</name>
				<layer>sub app</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594c4e</_id>
				<id>20</id>
				<title>Process Interrupted</title>
				<desc>A validation did not pass, or error was thrown. We rollback the process and Asset is again editable.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>56f00ccb2346c84f6d594c02</upd_at>
		<_id>56f00ccb2346c84f6d594c03</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Redemption</name>
		<desc>Describes the process of redeeming an issued asset to a redeem point</desc>
		<prev>Asset Distribution</prev>
		<next></next>
		<steps>
			<step>
				<_id>56f00ccc2346c84f6d594c96</_id>
				<id>0</id>
				<title>Process Start</title>
				<desc>Platform starts</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594c9b</_id>
				<id>1</id>
				<title>Asset User Wallet</title>
				<desc>Starts by opening the Asset User Wallet with positive balance of an asset</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594ca1</_id>
				<id>2</id>
				<title>Asset User Identity</title>
				<desc>Asset User Identity is created and User Actor is registered in P2P</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<name>asset user</name>
				<layer>identity</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594ca6</_id>
				<id>3</id>
				<title>Redeem Point Selection</title>
				<desc>The Asset User selects the previously connected redeem point to redeeem to</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594cac</_id>
				<id>4</id>
				<title>Asset Redemption</title>
				<desc>We generate a Bitcoin Transaction using the genesis Transaction of this asset</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>5</id>
				</next>
				<name>user redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594cb2</_id>
				<id>5</id>
				<title>Asset Redemption</title>
				<desc>The Digital Asset Metadata information containing asset and asset transaction is sent to the Redeem Point.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>6</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594cb8</_id>
				<id>6</id>
				<title>Asset Redemption</title>
				<desc>The digital asset metadata is received by the Redeem Point</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>7</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594cbe</_id>
				<id>7</id>
				<title>Asset Redemption</title>
				<desc>Redeem Points validated metadata by requesting to BCH the Genesis Transaction op_return. Is compared with hash.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>8</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>redeem point redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594cc4</_id>
				<id>8</id>
				<title>Asset Redemption</title>
				<desc>The contract info is validated and the assets is from an Issuer we redeem from. OK or fail response is sent back to issuer</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>9</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594cca</_id>
				<id>9</id>
				<title>Asset Redemption</title>
				<desc>If redeem point is ok, we broadcast the previously generated transaction to the Genesis Address. If not, we cancel the transaction and free the founds.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>10</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
				<next>
					<type>direct call</type>
					<id>21</id>
				</next>
				<name>user redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594ccf</_id>
				<id>10</id>
				<title>Asset Redemption</title>
				<desc>Once the transaction is confirmed, we generate the debit in the User wallet and update stats.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>11</id>
				</next>
				<next>
					<type>direct call</type>
					<id>20</id>
				</next>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594cd5</_id>
				<id>11</id>
				<title>Asset Redemption</title>
				<desc>Once the transaction is confirmed, we generate the credit in the Redeem point wallet and update stats.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>12</id>
				</next>
				<name>redeem point wallet</name>
				<layer>wallet</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594cdb</_id>
				<id>12</id>
				<title>Asset Redemption</title>
				<desc>Since Issuer shares public Key, Issuer also received the transaction and update stats.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>13</id>
				</next>
				<name>issuer redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594ce0</_id>
				<id>13</id>
				<title>Asset Redemption</title>
				<desc>Asset is recicled and available again in the Issuer Wallet to restart the process</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>19</id>
				</next>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594ce3</_id>
				<id>19</id>
				<title>End</title>
				<desc>End of process.</desc>
				<type>activity</type>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594ce9</_id>
				<id>20</id>
				<title>Process Interrupted</title>
				<desc>Transaction is rollbacked, and Asset is available again in the Issuer Wallet.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
				<name>user redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f00ccc2346c84f6d594cef</_id>
				<id>21</id>
				<title>Asset not accepted</title>
				<desc>Due to poor network or invalidate contract, the asset is not accepted and rollbacked.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
				<name>user redemption</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>56f00ccc2346c84f6d594c92</upd_at>
		<_id>56f00ccc2346c84f6d594c93</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Broker Identity creation</name>
		<desc>Broker identity creation procedure, to be used by Crypto Brokers</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56f00ccd2346c84f6d594db5</_id>
				<id>0</id>
				<title>User requests the creation of a new identity</title>
				<desc>The user enters the Crypto broker Itentity Sub App and creates a new Crypto Broker identity</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56f00ccd2346c84f6d594dbb</_id>
				<id>1</id>
				<title>Crypto Broker Identity processes request</title>
				<desc>The Crypto Broker Identity Sub App Module processes the new identity request</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56f00ccd2346c84f6d594dc1</_id>
				<id>2</id>
				<title>Crypto Broker Identity creates the new identity</title>
				<desc>Receives the request and creates a new identity for the Crypto Broker</desc>
				<type>end</type>
				<name>crypto broker</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56f00ccd2346c84f6d594dae</upd_at>
		<_id>56f00ccd2346c84f6d594daf</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Accept  Payment Request From Intra user</name>
		<desc>A Wallet&apos;s Intra User accept a payment request sent by another actor.</desc>
		<prev>List Payment Request</prev>
		<next></next>
		<steps>
			<step>
				<_id>56f00cd12346c84f6d595485</_id>
				<id>0</id>
				<title>Select payment request receive and accept it</title>
				<desc>The customer selects a payment request from the receive list and press accept button.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56f00cd12346c84f6d59548b</_id>
				<id>1</id>
				<title>Route request acceptance to plugin</title>
				<desc>The module routes this acceptance to the Crypto Payment Request Plugin to apply the payment to the intra user actor.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56f00cd12346c84f6d595490</_id>
				<id>2</id>
				<title>Route acceptance to network service</title>
				<desc>The Crypto Payment Request Plugin routes this acceptance to the network service to inform the actor intra user about payment acceptance.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56f00cd12346c84f6d595495</_id>
				<id>3</id>
				<title>Route acceptance to Outgoing Intra User</title>
				<desc>The Crypto Payment Request Plugin notifies the outgoing intra user plugin to generate the send crypto transaction. And continuous workflow of sending btc an intra user actor </desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56f00cd12346c84f6d59549b</_id>
				<id>4</id>
				<title>Call the intra user to deliver the acceptance message</title>
				<desc>The network service places a call to the intra user and then it delivers the message via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56f00cd12346c84f6d5954a0</_id>
				<id>5</id>
				<title>Transport request</title>
				<desc>The acceptance message is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>6</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56f00cd12346c84f6d5954a6</_id>
				<id>6</id>
				<title>Receive the acceptance notification</title>
				<desc>The network service receives the acceptance notification and informs that to Request Crypto Payment Plugin.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>event</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56f00cd12346c84f6d5954ac</_id>
				<id>7</id>
				<title>Update the Payment request</title>
				<desc>The payment request is updated  with the Request Action in state INFORM_APPROVAL .</desc>
				<type>end</type>
				<name>crypto payment</name>
				<layer>request</layer>
				<platfrm>CCP</platfrm>
			</step>
		</steps>
		<upd_at>56f00cd12346c84f6d59547f</upd_at>
		<_id>56f00cd12346c84f6d595480</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Transmission</name>
		<desc>Describes the process of transmitting an asset from and to an specific actor. The process involves delivering metadata, crypto transactions and statistics.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56f061ff0a9f0e046fc3ed12</_id>
				<id>0</id>
				<title>Device A. Process Start</title>
				<desc>User selects Transmission operation to execute. Valids are: Asset Transfer \b Asset Redemption \b Asset Distribution.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>asset user</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f061ff0a9f0e046fc3ed17</_id>
				<id>1</id>
				<title>Device A. Creation of Transaction</title>
				<desc>New Business Transaction is created in Asset Transmission</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56f061ff0a9f0e046fc3ed1c</_id>
				<id>2</id>
				<title>Device A. Contract Creation</title>
				<desc>New Contract is created defining Digital Asset Properties.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56f061ff0a9f0e046fc3ed1f</_id>
				<id>3</id>
				<title>Device A. Transaction Timeout definition</title>
				<desc>Time out agent is subscribed to start monitoring elapsed time and rollback if time limit is reached..</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56f061ff0a9f0e046fc3ed24</_id>
				<id>4</id>
				<title>Device A. Asset blocking</title>
				<desc>The asset is blocked so more operations are permitted for this asset.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56f061ff0a9f0e046fc3ed29</_id>
				<id>5</id>
				<title>Device A. Sends Asset Metadata</title>
				<desc>An Outgoing Asset Metadata is prepared to be send to the corresponding actor.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56f061ff0a9f0e046fc3ed2f</_id>
				<id>6</id>
				<title>Device A. Delivers Metadata on P2P</title>
				<desc>We send the metadata over the network. NS retries are defined in the contract of this transaction.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f061ff0a9f0e046fc3ed32</_id>
				<id>7</id>
				<title>Device A. Statistics are stored.</title>
				<desc>Initial Asset Transmission statistics are stored with asset and actor information.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56f061ff0a9f0e046fc3ed38</_id>
				<id>8</id>
				<title>Device B. Receives metadata from P2P</title>
				<desc>New metadata is received by NS and event trigger to notify upper layers.</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f061ff0a9f0e046fc3ed3d</_id>
				<id>9</id>
				<title>Device B. Incoming Metadata detected</title>
				<desc>We received the send metadata and is locally stored. New local contract will be stored.</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56f061ff0a9f0e046fc3ed42</_id>
				<id>10</id>
				<title>Device B. New contract is created.</title>
				<desc>The received metadata is stored as a new contract.</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56f061ff0a9f0e046fc3ed48</_id>
				<id>11</id>
				<title>Device B. Contract is validated.</title>
				<desc>The contract properties are validated to confirm if we are ok to receive the new asset or not..</desc>
				<type>activity</type>
				<name>asset factory</name>
				<layer>sub app</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>56f061ff0a9f0e046fc3ed4e</_id>
				<id>20</id>
				<title>Process Interrupted</title>
				<desc>A validation did not pass, or error was thrown. We rollback the process and Asset is again editable.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>asset issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>56f061ff0a9f0e046fc3ed0b</upd_at>
		<_id>56f061ff0a9f0e046fc3ed0c</_id>
	</proc>
	<proc>
		<platfrm>OSA</platfrm>
		<name>Test 1</name>
		<desc>Test 20 test</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
		</steps>
		<upd_at>56f347abd4a836556cb6099f</upd_at>
		<_id>56f347abd4a836556cb609a0</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Sync songs manually with External System</name>
		<desc>A Tokenly wallet user request a synchronization with a external platform.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d6f66a022b231e7d84</_id>
				<id>0</id>
				<title>User request a sync from tab songs.</title>
				<desc>The user proceeds to request the synchronization list of songs</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7d88</_id>
				<id>1</id>
				<title>Request the Tokenly tokens owned by the user.</title>
				<desc>The Fan Wallet Module requests information from the tokens associated with the identity of the user to the external system</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7d8b</_id>
				<id>2</id>
				<title>Request the Tokenly tokens owned by the user to external platform.</title>
				<desc>Request Tokenly API the tokens associated with the Tokenly identity</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7d8e</_id>
				<id>3</id>
				<title>Request the tokens owned by the user to Tokenly music manager public API.</title>
				<desc>Asks Tokenly public API (external) the information available of the associated tokens with the Tokenly identity.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7d91</_id>
				<id>4</id>
				<title>Download the missing songs.</title>
				<desc>Proceed to download the songs not present on the device.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7d97</_id>
				<id>5</id>
				<title>Persist songs on device storage.</title>
				<desc>Downloaded songs are persisted in the local storage.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7d9a</_id>
				<id>6</id>
				<title>Set the song status in database.</title>
				<desc>Song status is change to available.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7d9e</_id>
				<id>7</id>
				<title>Update the songs tab.</title>
				<desc>The list of available songs is received and updates the view.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d6f66a022b231e7d7f</upd_at>
		<_id>56fa81d6f66a022b231e7d80</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Restore deleted song</name>
		<desc>The user wants to restore a deleted song.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d6f66a022b231e7da5</_id>
				<id>0</id>
				<title>User request to restore a deleted song.</title>
				<desc>When pressing the list item that represents the song that is not available on the device</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7da9</_id>
				<id>1</id>
				<title>Request the deleted song.</title>
				<desc>Request to restore the deleted song to the Tokenly Song Wallet</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7dac</_id>
				<id>2</id>
				<title>Request the song download URL.</title>
				<desc>Request to the Tokenly API the download URL of the requested song</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7daf</_id>
				<id>3</id>
				<title>Request the song download URL to the Tokenly public API.</title>
				<desc>Request to the public Tokenly API (external) the download URL</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7db2</_id>
				<id>4</id>
				<title>Download the requested song.</title>
				<desc>Starts the process of downloading song.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7db8</_id>
				<id>5</id>
				<title>Persist songs on device storage.</title>
				<desc>Downloaded songs are persisted in the local storage.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7dbb</_id>
				<id>6</id>
				<title>Set the song status in database.</title>
				<desc>Song status is change to available.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7dbf</_id>
				<id>7</id>
				<title>Update the songs tab.</title>
				<desc>The view is updated with the new status of the song.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d6f66a022b231e7da0</upd_at>
		<_id>56fa81d6f66a022b231e7da1</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Delete song</name>
		<desc>The user wants to delete a song.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d6f66a022b231e7dc6</_id>
				<id>0</id>
				<title>User request to delete a song.</title>
				<desc>The user makes a deleting request in the view element that represents the song to delete.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7dca</_id>
				<id>1</id>
				<title>Request to delete a song.</title>
				<desc>Performs the request to delete the song from the device storage</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7dcd</_id>
				<id>2</id>
				<title>Requesto to delete a song from device storage.</title>
				<desc>Check that the song is available and proceeds to request the song to be deleted</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7dd3</_id>
				<id>3</id>
				<title>Delete the requested song file.</title>
				<desc>Deletes the file corresponding the song the user wants to delete.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7dd6</_id>
				<id>4</id>
				<title>Set the song status in database.</title>
				<desc>Song status is change to deleted.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7dda</_id>
				<id>5</id>
				<title>Update the songs tab.</title>
				<desc>The view is updated with the new status of the song.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d6f66a022b231e7dc1</upd_at>
		<_id>56fa81d6f66a022b231e7dc2</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Synchronize list of connected Artist identities</name>
		<desc>The user wants to get the connected artists list.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d6f66a022b231e7de1</_id>
				<id>0</id>
				<title>Enter to Following tab.</title>
				<desc>Request the list of connected artists to the user.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7de5</_id>
				<id>1</id>
				<title>Request the connected artist list.</title>
				<desc>Request the connection information associated with the fan identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7de9</_id>
				<id>2</id>
				<title>Return the Artis connected list.</title>
				<desc>Fan identity provides the list of the artist linked to this identity</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7ded</_id>
				<id>3</id>
				<title>Updates the view with the connected artist.</title>
				<desc>Gets the list of connected artists and updates the view.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d6f66a022b231e7ddc</upd_at>
		<_id>56fa81d6f66a022b231e7ddd</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Browse to the site of the Artist</name>
		<desc>The user select an artist list element to browse to its web site.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d6f66a022b231e7df4</_id>
				<id>0</id>
				<title>Select an artist element.</title>
				<desc>The list item representing the artist is pressed.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7df8</_id>
				<id>1</id>
				<title>Request the artist website URL.</title>
				<desc>The URL to the artist site is requested</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7dfb</_id>
				<id>2</id>
				<title>Request the URL to the artist site to Tokenly API.</title>
				<desc>Request to the Tokenly external API the URL belonging to the artist in Tokenly Swapbot</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7dfe</_id>
				<id>3</id>
				<title>Updates the view with the connected artist.</title>
				<desc>Gets the URL of the selected artist and updates view.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7e01</_id>
				<id>4</id>
				<title>Browse to the artist site.</title>
				<desc>Opens the default browser of the device with the URL of the artist.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d6f66a022b231e7def</upd_at>
		<_id>56fa81d6f66a022b231e7df0</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Create Artist identity</name>
		<desc>An artist creates a Artist identity in Tokenly platform.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d6f66a022b231e7e08</_id>
				<id>0</id>
				<title>The user submit the data to create the Artist identity.</title>
				<desc>Includes the data to create an identity.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7e0c</_id>
				<id>1</id>
				<title>Send the artist data.</title>
				<desc>Sends acces data to Tokenly to verify the access data</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7e10</_id>
				<id>2</id>
				<title>Request user verification</title>
				<desc>Sends the necessary data to check a Tokenly user</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d6f66a022b231e7e13</_id>
				<id>3</id>
				<title>Request to the Tokenly API the user verification</title>
				<desc>Checks with the public API if the user data is correct.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e17</_id>
				<id>4</id>
				<title>Create the identity.</title>
				<desc>With authenticated data, proceeds to create the new identity.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d6f66a022b231e7e03</upd_at>
		<_id>56fa81d6f66a022b231e7e04</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Create Fan identity</name>
		<desc>A Fanatic creates a fan identity in Tokenly platform.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7e1e</_id>
				<id>0</id>
				<title>The user submit the data to create the Fan identity.</title>
				<desc>Includes the data to create an identity.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e22</_id>
				<id>1</id>
				<title>Send the fanatic data.</title>
				<desc>Sends acces data to Tokenly to verify the access data</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e26</_id>
				<id>2</id>
				<title>Request user verification</title>
				<desc>Sends the necessary data to check a Tokenly user</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e29</_id>
				<id>3</id>
				<title>Request to the Tokenly API the user verification</title>
				<desc>Checks with the public API if the user data is correct.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e2d</_id>
				<id>4</id>
				<title>Create the identity.</title>
				<desc>With authenticated data, proceeds to create the new identity.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7e19</upd_at>
		<_id>56fa81d7f66a022b231e7e1a</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>List available songs</name>
		<desc>A Fanatic wants to list the available songs in the device.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7e34</_id>
				<id>0</id>
				<title>The user opens the Music player.</title>
				<desc>Request the list of available songs.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e38</_id>
				<id>1</id>
				<title>Request the available songs from external platforms.</title>
				<desc>Request to the External API the list of available songs in the device</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e3b</_id>
				<id>2</id>
				<title>Get the available songs list</title>
				<desc>Search in the database the available songs</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e3f</_id>
				<id>3</id>
				<title>Updates the Music player view</title>
				<desc>Organizes the information received and updates the view.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7e2f</upd_at>
		<_id>56fa81d7f66a022b231e7e30</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Play a song</name>
		<desc>The user wants to play a available song.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7e46</_id>
				<id>0</id>
				<title>The user presses a song element.</title>
				<desc>A song in the setlist is pressed.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e4a</_id>
				<id>1</id>
				<title>Request the available song.</title>
				<desc>Request the necessary data to play the song</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e4d</_id>
				<id>2</id>
				<title>Get the song local storage path</title>
				<desc>Search the file path corresponding the song in database</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e53</_id>
				<id>3</id>
				<title>Open the song file</title>
				<desc>The requested file is opened and its contents is obtained.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e57</_id>
				<id>4</id>
				<title>Update the view</title>
				<desc>Submit the data to pla the song and updates the view</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e5b</_id>
				<id>5</id>
				<title>Play the song</title>
				<desc>Play the song provided</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7e41</upd_at>
		<_id>56fa81d7f66a022b231e7e42</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Create Artist identity</name>
		<desc>An artist creates a Artist identity in Artist platform.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7e62</_id>
				<id>0</id>
				<title>The user submit the data to create the Artist identity.</title>
				<desc>Includes the data to create an identity.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e66</_id>
				<id>1</id>
				<title>Send the artist data.</title>
				<desc>Send the necessary data to create the identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e6a</_id>
				<id>2</id>
				<title>Create the identity.</title>
				<desc>The Artist Identity is persisted.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7e5d</upd_at>
		<_id>56fa81d7f66a022b231e7e5e</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Create Fan identity</name>
		<desc>An artist creates a Fan identity in Artist platform.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7e71</_id>
				<id>0</id>
				<title>The user submit the data to create the Fan identity.</title>
				<desc>Includes the data to create an identity.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e75</_id>
				<id>1</id>
				<title>Send the Fan data.</title>
				<desc>Send the necessary data to create the identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e79</_id>
				<id>2</id>
				<title>Create the identity.</title>
				<desc>The Fan Identity is persisted.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7e6c</upd_at>
		<_id>56fa81d7f66a022b231e7e6d</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Artist accepts all connections</name>
		<desc>The artist indicates that accepts all connections requested by fans.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7e80</_id>
				<id>0</id>
				<title>The user set the acceptance of all fans requested connections.</title>
				<desc>Change the status of accepting all connections.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e84</_id>
				<id>1</id>
				<title>Request to update the Identity.</title>
				<desc>Sends the change to the Artist Identity plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e88</_id>
				<id>2</id>
				<title>Update identity.</title>
				<desc>Updates the information in the database.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7e7b</upd_at>
		<_id>56fa81d7f66a022b231e7e7c</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>List Fan identities in external systems</name>
		<desc>The fan list the available external platforms identities.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7e8f</_id>
				<id>0</id>
				<title>List external platforms identities.</title>
				<desc>The user request the list of available external identities.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e93</_id>
				<id>1</id>
				<title>Request the external identities.</title>
				<desc>Request the identity created in the external platform</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e97</_id>
				<id>2</id>
				<title>Submit external platform identities list.</title>
				<desc>Returns the list of identities created in external platforms registered in the Fan Identity.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e9b</_id>
				<id>3</id>
				<title>Provides the identities list.</title>
				<desc>The identities list is returned.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7e9f</_id>
				<id>4</id>
				<title>Show the identities list.</title>
				<desc>Shows the external platform identities list.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7e8a</upd_at>
		<_id>56fa81d7f66a022b231e7e8b</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>List Artists identities in external systems</name>
		<desc>The artist list the available external platforms identities.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7ea6</_id>
				<id>0</id>
				<title>List external platforms identities.</title>
				<desc>The user request the list of available external identities.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7eaa</_id>
				<id>1</id>
				<title>Request the external identities.</title>
				<desc>Request the identity created in the external platform</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7eae</_id>
				<id>2</id>
				<title>Submit external platform identities list.</title>
				<desc>Returns the list of identities created in external platforms registered in the Fan Identity.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7eb2</_id>
				<id>3</id>
				<title>Provides the identities list.</title>
				<desc>The identities list is returned.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7eb6</_id>
				<id>4</id>
				<title>Show the identities list.</title>
				<desc>Shows the external platform identities list.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7ea1</upd_at>
		<_id>56fa81d7f66a022b231e7ea2</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Link Artist Identity to an account in an external system</name>
		<desc>The artist makes a connection with external platforms identities.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7ebd</_id>
				<id>0</id>
				<title>Select an external platforms identity.</title>
				<desc>The user selects an element of external identities list displayed on the view.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7ec1</_id>
				<id>1</id>
				<title>Request link with external platform identity.</title>
				<desc>Requests to persist the selected identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7ec5</_id>
				<id>2</id>
				<title>The Artist identity is updated.</title>
				<desc>The Artist identity perists the external platform identity in database.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7eb8</upd_at>
		<_id>56fa81d7f66a022b231e7eb9</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Link Fan Identity to an account in an external system</name>
		<desc>The fanatic makes a connection with external platforms identities.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7ecc</_id>
				<id>0</id>
				<title>Select an external platforms identity.</title>
				<desc>The user selects an element of external identities list displayed on the view.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7ed0</_id>
				<id>1</id>
				<title>Request link with external platform identity.</title>
				<desc>Requests to persist the selected identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7ed4</_id>
				<id>2</id>
				<title>The Fan identity is updated.</title>
				<desc>The Fan identity perists the external platform identity in database.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7ec7</upd_at>
		<_id>56fa81d7f66a022b231e7ec8</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>View Artist profile</name>
		<desc>The Artist community user want to see the artist associated profile.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7edb</_id>
				<id>0</id>
				<title>Select an artist picture.</title>
				<desc>The user presses the image of the artist to see the associated profile.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7edf</_id>
				<id>1</id>
				<title>Request the artist profile.</title>
				<desc>Request the profile of the selected artist identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7ee3</_id>
				<id>2</id>
				<title>Provide the selected artist profile.</title>
				<desc>The artist profile is get from database.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7ee7</_id>
				<id>3</id>
				<title>Provides the profile data.</title>
				<desc>The identities profile data is returned.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7eeb</_id>
				<id>4</id>
				<title>Show the artist profile.</title>
				<desc>Shows the identities profile.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7ed6</upd_at>
		<_id>56fa81d7f66a022b231e7ed7</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Request list of Artist identities</name>
		<desc>The user get in the Artist Community screen.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7ef2</_id>
				<id>0</id>
				<title>Request the artist actors availables.</title>
				<desc>Request the module the list of artist identities.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7ef6</_id>
				<id>1</id>
				<title>Request the artist list.</title>
				<desc>Request a list of available artist identities</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7efa</_id>
				<id>2</id>
				<title>Provide the artist list.</title>
				<desc>Provides the list of artist Identities.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7efe</_id>
				<id>3</id>
				<title>Submit the artist list.</title>
				<desc>The artist list is returned to update the view.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f02</_id>
				<id>4</id>
				<title>Show the artist list.</title>
				<desc>The view is updated with the available artists identities.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7eed</upd_at>
		<_id>56fa81d7f66a022b231e7eee</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Request list of Fan identities</name>
		<desc>The user get in the Fan Community screen.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7f09</_id>
				<id>0</id>
				<title>Request the fan actors availables.</title>
				<desc>Request the module the list of fan identities.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f0d</_id>
				<id>1</id>
				<title>Request the artist list.</title>
				<desc>Request a list of available fan identities</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f11</_id>
				<id>2</id>
				<title>Provide the fan list.</title>
				<desc>Provides the list of fan Identities.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f15</_id>
				<id>3</id>
				<title>Submit the fan list.</title>
				<desc>The fan list is returned to update the view.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f19</_id>
				<id>4</id>
				<title>Show the fan list.</title>
				<desc>The view is updated with the available fan identities.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7f04</upd_at>
		<_id>56fa81d7f66a022b231e7f05</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Request connection of a Fan to an Artist</name>
		<desc>The user request a connection between a fan identity and an artist identity.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7f20</_id>
				<id>0</id>
				<title>Request an artist identity connection.</title>
				<desc>The artist to request connection is selected.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f24</_id>
				<id>1</id>
				<title>Request the identities connection.</title>
				<desc>Request a connection with an artist identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f28</_id>
				<id>2</id>
				<title>Send request to a remote device.</title>
				<desc>Send the connection request to a remote device.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f2c</_id>
				<id>3</id>
				<title>Route the connection request to a remote device.</title>
				<desc>Route the connection request to a remote device through the P2P network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f30</_id>
				<id>4</id>
				<title>Receive the connection request.</title>
				<desc>Receive a message with the connection request.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f34</_id>
				<id>5</id>
				<title>Send notification to OS.</title>
				<desc>Raises an event indicating the arrival of a new connection request.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7f1b</upd_at>
		<_id>56fa81d7f66a022b231e7f1c</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>An artist accepts a fan connection</name>
		<desc>The artist sees a connection request and accepts it.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7f3b</_id>
				<id>0</id>
				<title>Register the acceptance of a connection.</title>
				<desc>A request connection request is selected to approve it.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f3f</_id>
				<id>1</id>
				<title>Submit request acceptance.</title>
				<desc>Route the acceptance to notify to the connection petitioner</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f43</_id>
				<id>2</id>
				<title>Send acceptance to a remote device.</title>
				<desc>Send the connection acceptance to a remote device.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f47</_id>
				<id>3</id>
				<title>Route the connection acceptance to a remote device.</title>
				<desc>Route the connection acceptance to a remote device through the P2P network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f4b</_id>
				<id>4</id>
				<title>Receive the connection acceptance.</title>
				<desc>Receive a message with the connection acceptance.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f4f</_id>
				<id>5</id>
				<title>Send notification to OS.</title>
				<desc>Raises an event indicating the arrival of a new connection acceptance.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f53</_id>
				<id>6</id>
				<title>The connection is registered in Fan identity.</title>
				<desc>The Fan identity is updated with the connection.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f57</_id>
				<id>7</id>
				<title>The external platform identity is updated.</title>
				<desc>The Tokenly Fan identity is updated with the connection.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7f36</upd_at>
		<_id>56fa81d7f66a022b231e7f37</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>The fan to artist connection request  is not accepted</name>
		<desc>The artist sees a connection request and rejects it.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56fa81d7f66a022b231e7f5e</_id>
				<id>0</id>
				<title>Register the denial of a connection.</title>
				<desc>A request connection request is selected to reject it.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f62</_id>
				<id>1</id>
				<title>Submit request rejection.</title>
				<desc>Route the rejection to notify to the connection petitioner</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f66</_id>
				<id>2</id>
				<title>Send rejection to a remote device.</title>
				<desc>Send the connection rejection to a remote device.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f6a</_id>
				<id>3</id>
				<title>Route the connection rejection to a remote device.</title>
				<desc>Route the connection rejection to a remote device through the P2P network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f6e</_id>
				<id>4</id>
				<title>Receive the connection rejection.</title>
				<desc>Receive a message with the connection rejection.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
			</step>
			<step>
				<_id>56fa81d7f66a022b231e7f72</_id>
				<id>5</id>
				<title>Send notification to OS.</title>
				<desc>Raises an event indicating the arrival of a new connection rejection.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56fa81d7f66a022b231e7f59</upd_at>
		<_id>56fa81d7f66a022b231e7f5a</_id>
	</proc>
	<proc>
		<platfrm>CHT</platfrm>
		<name>this test process</name>
		<desc>test</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56f06a88d4a836556cb3ce4c</_id>
				<id>0</id>
				<title>test 1</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>extra user</name>
				<layer>actor</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56f06a89d4a836556cb3ce54</_id>
				<id>1</id>
				<title>test 2</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fbea6aef1ebc8f4a404555</_id>
				<id>2</id>
				<title>test 3</title>
				<desc>pending</desc>
				<type>start</type>
			</step>
			<step>
				<_id>56fbea6aef1ebc8f4a40455d</_id>
				<id>3</id>
				<title>test 4</title>
				<desc>pending</desc>
				<type>start</type>
			</step>
		</steps>
		<upd_at>56fbea67ef1ebc8f4a404542</upd_at>
		<_id>56f06a87d4a836556cb3ce44</_id>
	</proc>
	<proc>
		<platfrm>MKT</platfrm>
		<name>test process</name>
		<desc>pending</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fc012b73bc335457c525d6</_id>
				<id>0</id>
				<title>test 1</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
			</step>
			<step>
				<_id>56fbfcca73bc335457c4fc9c</_id>
				<id>1</id>
				<title>test 2</title>
				<desc>pending</desc>
				<type>start</type>
			</step>
			<step>
				<_id>56fbfcca73bc335457c4fca4</_id>
				<id>2</id>
				<title>test 3</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
			</step>
			<step>
				<_id>56fbfccb73bc335457c4fcac</_id>
				<id>3</id>
				<title>test 4</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56fbfccc73bc335457c4fcb4</_id>
				<id>4</id>
				<title>test 5</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>5</id>
				</next>
			</step>
			<step>
				<_id>56fbfccd73bc335457c4fcbc</_id>
				<id>5</id>
				<title>test 6</title>
				<desc>pending</desc>
				<type>start</type>
			</step>
			<step>
				<_id>56fc3cc77d89775463efcd23</_id>
				<id>6</id>
				<title>test 7</title>
				<desc>pending</desc>
				<type>start</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>coinbase</name>
				<layer>world</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56fc404b7d89775463effd2e</_id>
				<id>7</id>
				<title>test 8</title>
				<desc>pending</desc>
				<type>start</type>
			</step>
		</steps>
		<upd_at>5701613ab117545507990c52</upd_at>
		<_id>56fbfcc973bc335457c4fc94</_id>
	</proc>
	<proc>
		<platfrm>CER</platfrm>
		<name>connection request from customer to broker</name>
		<desc>a customer sends a connection request to crypto broker in order to be able to see his products and start a negotiation.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fc7edd7d89775463f0e4ed</_id>
				<id>0</id>
				<title>select broker and submit request</title>
				<desc>the customer selects a broker from the list and submits the request to connect to him.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>crypto broker community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56fc7ede7d89775463f0e4f3</_id>
				<id>1</id>
				<title>route request to network service</title>
				<desc>the module routes this request to the network service to reach the selected broker.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<name>crypto broker community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56fc7edf7d89775463f0e4f9</_id>
				<id>2</id>
				<title>call the broker to deliver the request</title>
				<desc>the network service places a call to the broker and then it delivers the request via the fermat network.</desc>
				<type>start</type>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56fd319b7d89775463f26264</upd_at>
		<_id>56fc7eda7d89775463f0e4e5</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Open the Intra Wallet Community Connections</name>
		<desc>List all connected users.</desc>
		<prev>Open Intra Wallet Community</prev>
		<next></next>
		<steps>
			<step>
				<_id>56ffc71285b38eac075188bd</_id>
				<id>0</id>
				<title>Start </title>
				<desc>The user opens the Community Connections and the fragment proceeds to initialize all required components.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56ffc71285b38eac075188c2</_id>
				<id>1</id>
				<title>Processing the requested list </title>
				<desc>The module routes the requested list to the IntraWalletUser plugin.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56ffc71285b38eac075188c7</_id>
				<id>2</id>
				<title>Routing the requested list.</title>
				<desc>The plugin routes the request to the IntraWalletUserDao.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56ffc71285b38eac075188ca</_id>
				<id>3</id>
				<title>Processing the list</title>
				<desc>The list is retrived from the DB and send back to the plugin.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56ffc71285b38eac075188cf</_id>
				<id>4</id>
				<title>Getting the list of connected users.</title>
				<desc>The plugin send the request back to the module.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56ffc71285b38eac075188d4</_id>
				<id>5</id>
				<title>Sends the list back to the view</title>
				<desc>The module routes the requested list to the fragment.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56ffc71285b38eac075188d7</_id>
				<id>6</id>
				<title>Display list of users</title>
				<desc>The fragment displays the list of connected users.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56ffc71285b38eac075188b9</upd_at>
		<_id>56ffc71285b38eac075188ba</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Open Intra Wallet Community</name>
		<desc>List all discovered connections.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>5703ea5b7051987117d84ea5</_id>
				<id>0</id>
				<title>Start</title>
				<desc>The user opens the Intra Wallet Community and the fragment proceeds to initialize all required components.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
			</step>
			<step>
				<_id>5703ea5b7051987117d84eaa</_id>
				<id>1</id>
				<title>Processing the requested list</title>
				<desc>The module routes the requested list.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
			</step>
			<step>
				<_id>5703ea5b7051987117d84eaf</_id>
				<id>2</id>
				<title>Routing the requested list.</title>
				<desc>The NS routes the request to the WS.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
			</step>
			<step>
				<_id>5703ea5b7051987117d84eb2</_id>
				<id>3</id>
				<title>Processing the list</title>
				<desc>The ws gets the connected list of components and send it back to the ns</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
			</step>
			<step>
				<_id>5703ea5b7051987117d84eb7</_id>
				<id>4</id>
				<title>Getting the list of connected users.</title>
				<desc>The NS routes the request back to the module.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>5</id>
				</next>
			</step>
			<step>
				<_id>5703ea5b7051987117d84ebc</_id>
				<id>5</id>
				<title>Sends the list back to the view</title>
				<desc>The module routes the requested list to the fragment.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>6</id>
				</next>
			</step>
			<step>
				<_id>5703ea5b7051987117d84ebf</_id>
				<id>6</id>
				<title>Display the list of users</title>
				<desc>The fragment displays the list of discovered users.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>5703ea5b7051987117d84ea1</upd_at>
		<_id>5703ea5b7051987117d84ea2</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Open Intra Wallet Community Requested Connections</name>
		<desc>List all users pending for acceptance.</desc>
		<prev>Open Intra Wallet Community</prev>
		<next></next>
		<steps>
			<step>
				<_id>5703ea5b7051987117d84edc</_id>
				<id>0</id>
				<title>Start</title>
				<desc>The user opens the Community Request Connections and the fragment proceeds to initialize all required components.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
			</step>
			<step>
				<_id>5703ea5b7051987117d84ee1</_id>
				<id>1</id>
				<title>Processing the requested list of users pending for acceptance.</title>
				<desc>The module routes the requested list to the IntraWalletUserActor plugin.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
			</step>
			<step>
				<_id>5703ea5b7051987117d84ee6</_id>
				<id>2</id>
				<title>Routing the requested list.</title>
				<desc>The plugin routes the request to the IntraWalletUserDao.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
			</step>
			<step>
				<_id>5703ea5b7051987117d84ee9</_id>
				<id>3</id>
				<title>Processing the list</title>
				<desc>The list is retrived from the DB and send back to the plugin.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
			</step>
			<step>
				<_id>5703ea5b7051987117d84eee</_id>
				<id>4</id>
				<title>Getting the list of connected users.</title>
				<desc>The plugin send the request back to the module.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>5</id>
				</next>
			</step>
			<step>
				<_id>5703ea5b7051987117d84ef3</_id>
				<id>5</id>
				<title>Sends the list back to the view</title>
				<desc>The module routes the requested list to the fragment.</desc>
				<type>activity</type>
				<next>
					<type>direct call</type>
					<id>6</id>
				</next>
			</step>
			<step>
				<_id>5703ea5b7051987117d84ef6</_id>
				<id>6</id>
				<title>Display the list of users.</title>
				<desc>The fragment displays the list of users pending for acceptance.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>5703ea5b7051987117d84ed8</upd_at>
		<_id>5703ea5b7051987117d84ed9</_id>
	</proc>
	<proc>
		<platfrm>BNP</platfrm>
		<name>process test</name>
		<desc>pending</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
		</steps>
		<upd_at>570d4a3eb4fdacc94d987a49</upd_at>
		<_id>570486b4b1175455079a4fa8</_id>
	</proc>
	<proc>
		<platfrm>PIP</platfrm>
		<name>sdfsdfsdfsdfsdf</name>
		<desc>sdfsdfsdfsdfsdf</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>570d2b5eb4fdacc94d97a92d</_id>
				<id>0</id>
				<title>sdfdsfsdf</title>
				<desc>dsfsdfsdf</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>test data 1</name>
				<layer>sub app</layer>
				<platfrm>COR</platfrm>
			</step>
			<step>
				<_id>570d2b5fb4fdacc94d97a933</_id>
				<id>1</id>
				<title>sdfdsfsd</title>
				<desc>sdfdsfsdf</desc>
				<type>start</type>
				<name>test data 1</name>
				<layer>sub app</layer>
				<platfrm>COR</platfrm>
			</step>
		</steps>
		<upd_at>570d2b5db4fdacc94d97a924</upd_at>
		<_id>570d2b5db4fdacc94d97a925</_id>
	</proc>
	<proc>
		<platfrm>COR</platfrm>
		<name>fsdfsdfsdfsdf</name>
		<desc>sdfsdfsdf</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>570dd6acb4fdacc94d992914</_id>
				<id>0</id>
				<title>sdfsdfsdfsdf</title>
				<desc>sdfsdfsdfsdf</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>test data 1</name>
				<layer>sub app</layer>
				<platfrm>COR</platfrm>
			</step>
			<step>
				<_id>570dd6acb4fdacc94d99291a</_id>
				<id>1</id>
				<title>dsfsdfsdf</title>
				<desc>sdfsdfsdf</desc>
				<type>start</type>
				<name>test data 1</name>
				<layer>sub app</layer>
				<platfrm>COR</platfrm>
			</step>
		</steps>
		<upd_at>570dd6abb4fdacc94d99290b</upd_at>
		<_id>570dd6abb4fdacc94d99290c</_id>
	</proc>
</procs>