<?xml version="1.0" encoding="UTF-8"?>
<procs>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Broker Identity creation</name>
		<desc>Broker identity creation procedure, to be used by Crypto Brokers</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2714268958967c53be3</_id>
				<id>0</id>
				<title>User requests the creation of a new identity</title>
				<desc>The user enters the Crypto broker Itentity Sub App and creates a new Crypto Broker identity</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53be9</_id>
				<id>1</id>
				<title>Crypto Broker Identity processes request</title>
				<desc>The Crypto Broker Identity Sub App Module processes the new identity request</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53bef</_id>
				<id>2</id>
				<title>Crypto Broker Identity creates the new identity</title>
				<desc>Receives the request and creates a new identity for the Crypto Broker</desc>
				<type>end</type>
				<name>crypto broker</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2714268958967c53bdc</upd_at>
		<_id>56e1e2714268958967c53bdd</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Customer Identity creation</name>
		<desc>Customer identity creation procedure, to be used by Crypto Customers</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2714268958967c53bf8</_id>
				<id>0</id>
				<title>User requests the creation of a new identity</title>
				<desc>The user enters the Crypto Customer Itentity Sub App and creates a new Crypto Customer identity</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53bfe</_id>
				<id>1</id>
				<title>Crypto Customer Identity processes request</title>
				<desc>The Crypto Customer Identity Sub App Module processes the new identity request</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c04</_id>
				<id>2</id>
				<title>Crypto Customer Identity creates the new identity</title>
				<desc>Receives the request and creates a new identity for the Crypto Customer</desc>
				<type>end</type>
				<name>crypto customer</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2714268958967c53bf1</upd_at>
		<_id>56e1e2714268958967c53bf2</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Customer Start a Negotiation</name>
		<desc>The Crypto Customer start a negotiation with a Crypto Broker.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2724268958967c53e45</_id>
				<id>0</id>
				<title>Customer set the info to start a New Negotiation</title>
				<desc>The Crypto Customer indicates he wants to start a new negotiation with a selected Crypto Broker passing the necesary info (merchandise, amount to buy, hoy to recive the merchandise, etc)</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e4b</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to create negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e51</_id>
				<id>2</id>
				<title>Manages the creation of Negotiation</title>
				<desc>Create a transaction to manage the negotiation Customer Broker</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker new</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e57</_id>
				<id>3</id>
				<title>Create The Purchase Negotiation</title>
				<desc>Create the purchase negotiation of Customer</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e5d</_id>
				<id>4</id>
				<title>Process Sending Negotiation To Broker</title>
				<desc>Process Sending Negotiation To Broker</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker new</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e63</_id>
				<id>5</id>
				<title>Sending Negotiation To Broker</title>
				<desc>Sending negotiation to Broker for creation Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>fermat message</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e69</_id>
				<id>6</id>
				<title>Receiving Negotiation From Customer</title>
				<desc>Receiving negotiation from Customer for creation Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e6f</_id>
				<id>7</id>
				<title>Process Receiving Negotiation From Customer</title>
				<desc>Process Receiving Negotiation From Customer</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker new</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e75</_id>
				<id>8</id>
				<title>Create The Sale Negotiation</title>
				<desc>Create the Sale negotiation of Broker</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e7b</_id>
				<id>9</id>
				<title>Sending Confirmation of Negotiation</title>
				<desc>Sending Confirmation of Creation Negotiation to Customer</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>fermat message</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e81</_id>
				<id>10</id>
				<title>Receiving Confirmation of Negotiation</title>
				<desc>Receiving Confirmation of Creation Negotiation From Broker</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e87</_id>
				<id>11</id>
				<title>Process the Receive Confirmation of Negotiation</title>
				<desc>Process the Receive Confirmation of Negotiation</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>direct call</type>
				</next>
				<name>customer broker new</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e8d</_id>
				<id>12</id>
				<title>Confirm the Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2724268958967c53e3e</upd_at>
		<_id>56e1e2724268958967c53e3f</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Open a Purchase Contract</name>
		<desc>Creates and opens a Customer - Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2734268958967c53fef</_id>
				<id>0</id>
				<title>Start a Purchase Contract beetwen a Customer and a Broker</title>
				<desc>Based on a closed negotiation, start an Open Contract Business Transaction.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>user level business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53ff5</_id>
				<id>1</id>
				<title>Gets the Negotiation ID</title>
				<desc>Gets the ID of closed negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53ffb</_id>
				<id>2</id>
				<title>Creates an Open Contract Business Transaction</title>
				<desc>Creates an Open Contract Business Transaction with the data of the closed negotiation.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>open contract</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54001</_id>
				<id>3</id>
				<title>Gets the Negotiation clauses</title>
				<desc>Gets the Clauses associated to the ID of the closed negotiation.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54007</_id>
				<id>4</id>
				<title>Creates a new Contract Record</title>
				<desc>Creates a new Contract Record with the Negotiation data.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>open contract</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c5400d</_id>
				<id>5</id>
				<title>Creates a new Customer Broker Purchase Contract</title>
				<desc>Creates a new Customer Broker Purchase Contract with the negotiation data. This generate a Hash that&apos;s goint to be send to the Crypto Broker</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54013</_id>
				<id>6</id>
				<title>Sends Contract Hash to Crypto Broker</title>
				<desc>Sends the contract hash to the Crypto Broker, this hash will be used as the contract Id</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54019</_id>
				<id>7</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c5401f</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to pending payment.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2734268958967c53fe8</upd_at>
		<_id>56e1e2734268958967c53fe9</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Broker submits an Offline Cash Merchandise</name>
		<desc>Crypto Broker submits an Offline Cash Merchandise to a Crypto Customer, this merchandise is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c54176</_id>
				<id>0</id>
				<title>Crypto Broker submits an Offline Cash Merchandise</title>
				<desc>Customer select a contract and submit merchandise.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5417c</_id>
				<id>1</id>
				<title>Process Submit Merchandise Request</title>
				<desc>Process request and starts the Submit Merchandise process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54182</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54188</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Broker Submit Offline Merchandise Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>broker submit offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5418e</_id>
				<id>4</id>
				<title>Performs a De-stock Transaction</title>
				<desc>Performs a Cash De-stock Transaction.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>cash money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54193</_id>
				<id>5</id>
				<title>Performs a Cash Withdrawal Transaction</title>
				<desc>Performs a Cash Withdrawal Transaction to perform a destock.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2744268958967c54199</_id>
				<id>6</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the cash merchandise was submitted.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>broker submit offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5419f</_id>
				<id>7</id>
				<title>Sends Payment Notification to Crypto Customer</title>
				<desc>Sends the successful submit offline merchandise notification to Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c541a5</_id>
				<id>8</id>
				<title>Gets the Crypto Customer Confirmation</title>
				<desc>Raises an event with the Crypto Customer Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c541ab</_id>
				<id>9</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to merchandise submit.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c5416f</upd_at>
		<_id>56e1e2744268958967c54170</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Broker submits an Offline Bank Transfer Merchandise</name>
		<desc>Crypto Broker submits an Offline Bank Transfer to a Crypto Customer, this merchandise is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c541b4</_id>
				<id>0</id>
				<title>Crypto Broker submits an Offline Bank Transfer Merchandise</title>
				<desc>Customer select a contract and submit merchandise.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c541ba</_id>
				<id>1</id>
				<title>Process Submit Merchandise Request</title>
				<desc>Process request and starts the Submit Merchandise process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c541c0</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c541c6</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Broker Submit Offline Merchandise Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>broker submit offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c541cc</_id>
				<id>4</id>
				<title>Performs a De-stock Transaction</title>
				<desc>Performs a Bank De-stock Transaction.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>bank money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c541d1</_id>
				<id>5</id>
				<title>Performs a Bank Withdrawal Transaction</title>
				<desc>Performs a Bank Withdrawal Transaction.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2744268958967c541d7</_id>
				<id>6</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the bank merchandise was submitted</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>broker submit offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c541dd</_id>
				<id>7</id>
				<title>Sends Payment Notification to Crypto Customer</title>
				<desc>Sends the successful submit offline merchandise notification to Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c541e3</_id>
				<id>8</id>
				<title>Gets the Crypto Customer Confirmation</title>
				<desc>Raises an event with the Crypto Customer Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c541e9</_id>
				<id>9</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to merchandise submit.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c541ad</upd_at>
		<_id>56e1e2744268958967c541ae</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer Acknowledge Online Merchandise</name>
		<desc>Broker receive an Online Merchandise from a Crypto Broker, this merchandise is associated to a Customer Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c541f2</_id>
				<id>0</id>
				<title>Incoming an Online merchandise</title>
				<desc>Raise an event when is incoming an online merchandise</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer ack online merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c541f8</_id>
				<id>1</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Acknowledge Online Merchandise Business Transaction with the merchandise associated to a contract data.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>customer ack online merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c541fe</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54204</_id>
				<id>3</id>
				<title>Listen an incoming money event</title>
				<desc>Listens an incoming money notification.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>incoming intra user</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5420a</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the merchandise is incoming.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer ack online merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54210</_id>
				<id>5</id>
				<title>Sends Acknowledge Merchandise Notification to Crypto Broker</title>
				<desc>Sends the successful Acknowledge merchandise notification to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54216</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5421c</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to ready to close.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c541eb</upd_at>
		<_id>56e1e2744268958967c541ec</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer Acknowledge Offline Merchandise</name>
		<desc>Customer receive an Offline Merchandise from a Crypto Broker, this payment is associated to a Customer Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c54225</_id>
				<id>0</id>
				<title>Crypto Customer acknowledges merchandise</title>
				<desc>The crypto Customer acknowledges the incoming merchandise</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5422b</_id>
				<id>1</id>
				<title>Process Acknowledge Request</title>
				<desc>Process request and starts the acknowledge process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54231</_id>
				<id>2</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Ack Offline Merchandise Business Transaction with the payment associated to a contract data.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer ack offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54237</_id>
				<id>3</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5423d</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the merchandise is incoming.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer ack offline merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54243</_id>
				<id>5</id>
				<title>Sends Acknowledge Merchandise Notification to Crypto Broker</title>
				<desc>Sends the successful Acknowledge merchandise notification to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54249</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5424f</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to ready to close.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c5421e</upd_at>
		<_id>56e1e2744268958967c5421f</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Close a Purchase Contract</name>
		<desc>Creates and closes a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c54257</_id>
				<id>0</id>
				<title>Start a Customer Broker Sale Contract closing</title>
				<desc>Start a Close Contract Business Transaction.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>user level business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5425d</_id>
				<id>1</id>
				<title>Gets the Negotiation ID</title>
				<desc>Gets the closed negotiation Id.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54263</_id>
				<id>2</id>
				<title>Sends Contract Hash to Crypto Broker</title>
				<desc>Sends the contract hash to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54269</_id>
				<id>3</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5426f</_id>
				<id>4</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to COMPLETED.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54281</_id>
				<id>6</id>
				<title>Sends Contract Hash to Crypto Broker</title>
				<desc>Sends the contract hash to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54287</_id>
				<id>7</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5428d</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to COMPLETED.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>5703ea5ae8ee6870176b62d4</upd_at>
		<_id>56e1e2744268958967c54252</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Add New Account</name>
		<desc>A customer registers a new bank account in the wallet.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c54295</_id>
				<id>0</id>
				<title>inputs account registration</title>
				<desc>inputs account, currency and account type.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2744268958967c5429b</_id>
				<id>1</id>
				<title>sends registration request</title>
				<desc>sends data to the wallet plugin to registrate the account.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c542a1</_id>
				<id>2</id>
				<title>registers account</title>
				<desc>registers account: account, currency and account type</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c5428f</upd_at>
		<_id>56e1e2744268958967c54290</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Deposit</name>
		<desc>A User Deposits a certain amount on a specific account.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c542a9</_id>
				<id>0</id>
				<title>request deposit transaction</title>
				<desc>inputs amount and selects account.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2744268958967c542af</_id>
				<id>1</id>
				<title>sends deposit request</title>
				<desc>sends data to the deposit plugin to make the transaction.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c542b5</_id>
				<id>2</id>
				<title>registers deposit transaction and sends credits to the wallet.</title>
				<desc>registers the transaction and send credits on the available and book balance of the account</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>deposit</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c542bb</_id>
				<id>3</id>
				<title>register credit on the wallet</title>
				<desc>makes credit on the balances of the account.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c542a3</upd_at>
		<_id>56e1e2744268958967c542a4</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Withdraw</name>
		<desc>A User Withdraws a certain amount on a specific account.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c542c3</_id>
				<id>0</id>
				<title>request withdraw transaction</title>
				<desc>inputs amount and selects account.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2744268958967c542c9</_id>
				<id>1</id>
				<title>sends withdraw request</title>
				<desc>sends data to the withdraw plugin to make the transaction.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c542cf</_id>
				<id>2</id>
				<title>registers withdraw transaction and sends debits to the wallet.</title>
				<desc>registers the transaction and validates that the selected account has enough money and send debits to the available and book balance of the account</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>withdraw</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c542d5</_id>
				<id>3</id>
				<title>register credit on the wallet</title>
				<desc>makes credit on the balances of the account.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c542bd</upd_at>
		<_id>56e1e2744268958967c542be</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Balance Inquiry</name>
		<desc>returns the current available and book balance of an account.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c542dd</_id>
				<id>0</id>
				<title>balance inquiry</title>
				<desc>requests book and available balance of an account</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2744268958967c542e3</_id>
				<id>1</id>
				<title>sends balance request</title>
				<desc>sends balance request to the wallet plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c542e9</_id>
				<id>2</id>
				<title>returns balance of the account</title>
				<desc>return balance of the account.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c542d7</upd_at>
		<_id>56e1e2744268958967c542d8</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Transaction History</name>
		<desc>returns the transaction history of an account.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c542f1</_id>
				<id>0</id>
				<title>transaction history request</title>
				<desc>requests list of transactions account</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2744268958967c542f7</_id>
				<id>1</id>
				<title>sends transaction history request</title>
				<desc>sends balance request to the wallet plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>bank money</name>
				<layer>wallet module</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c542fd</_id>
				<id>2</id>
				<title>returns transaction history</title>
				<desc>returns transaction history sorted by date (from most recent to older).</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c542eb</upd_at>
		<_id>56e1e2744268958967c542ec</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Hold</name>
		<desc>Holds a certain amount of money in the bank account</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c54303</_id>
				<id>0</id>
				<title>request Hold</title>
				<desc>request a hold of the funds in an account</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2744268958967c54309</_id>
				<id>1</id>
				<title>process hold transaction request</title>
				<desc>registers and sends holds funds on the available balance of the account</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>hold</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5430f</_id>
				<id>2</id>
				<title>makes hold</title>
				<desc>processes the hold request by making a debit in the account.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c542ff</upd_at>
		<_id>56e1e2744268958967c54300</_id>
	</proc>
	<proc>
		<platfrm>BNK</platfrm>
		<name>Unhold</name>
		<desc>Unholds funds from an account that were previusly held by the hold transaction</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c54315</_id>
				<id>0</id>
				<title>request unhold</title>
				<desc>request an unhold of the funds in an account</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2744268958967c5431b</_id>
				<id>1</id>
				<title>process hold transaction request</title>
				<desc>registers, validates that has enough funds held, and sends unhold funds on the available balance of the account</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>unhold</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54321</_id>
				<id>2</id>
				<title>makes unhhold</title>
				<desc>processes the unhold request by summing all the amount of the hold transactions previusly made in the account, then makes the credit.</desc>
				<type>activity</type>
				<name>bank money</name>
				<layer>wallet</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c54311</upd_at>
		<_id>56e1e2744268958967c54312</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Balance Inquiry</name>
		<desc>Returns the current Available and Book balances of the Cash Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c54329</_id>
				<id>0</id>
				<title>Balance inquiry</title>
				<desc>Requests both Book and Available balances of the wallet</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2744268958967c5432f</_id>
				<id>1</id>
				<title>Sends balance request</title>
				<desc>Sends balance request to the Wallet plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>cash money</name>
				<layer>wallet module</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54335</_id>
				<id>2</id>
				<title>Fetches and returns balances</title>
				<desc>Consults database for current balances of the cash wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c54323</upd_at>
		<_id>56e1e2744268958967c54324</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Transaction History</name>
		<desc>Returns the transaction history (Only deposits and withdrawals) of the cash wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c5433d</_id>
				<id>0</id>
				<title>Transaction history inquiry</title>
				<desc>Requests list of transactions</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54343</_id>
				<id>1</id>
				<title>Sends transaction history request to cash wallet</title>
				<desc>Sends balance request to the cash wallet plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>cash money</name>
				<layer>wallet module</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54349</_id>
				<id>2</id>
				<title>Retches and returns transaction history</title>
				<desc>Returns transaction history sorted by date DESC</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c54337</upd_at>
		<_id>56e1e2744268958967c54338</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Deposit</name>
		<desc>A Fermat user deposits cash money on his Cash Money Reference Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c54351</_id>
				<id>0</id>
				<title>User requests deposit transaction</title>
				<desc>User enters amount and memo</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54357</_id>
				<id>1</id>
				<title>Sends deposit request</title>
				<desc>Sends deposit data to the deposit plugin to make the transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>cash money</name>
				<layer>wallet module</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c5435d</_id>
				<id>2</id>
				<title>Registers deposit transaction and sends credits to the wallet.</title>
				<desc>Tries to register a credit on the Available and Book balances of the wallet and, if succeded, registers the transaction internally</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>deposit</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54363</_id>
				<id>3</id>
				<title>Register credit on the Available and Book balances of the wallet</title>
				<desc>Applies a credit on the Available and Book balances of the wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c5434b</upd_at>
		<_id>56e1e2754268958967c5434c</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Withdrawal</name>
		<desc>A Fermat user whithdraws cash money from his Cash Money Reference Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c5436b</_id>
				<id>0</id>
				<title>User requests withdrawal transaction</title>
				<desc>User enters amount and memo</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54371</_id>
				<id>1</id>
				<title>Sends withdrawal request</title>
				<desc>Sends withdrawal data to the withdrawal plugin to make the transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>cash money</name>
				<layer>wallet module</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54377</_id>
				<id>2</id>
				<title>Registers withdrawal transaction and sends debit to the wallet.</title>
				<desc>Tries to register a debit on the Available and Book balances of the wallet and, if succeded, registers the transaction internally</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>withdrawal</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c5437d</_id>
				<id>3</id>
				<title>Register debit on the Available and Book balances of the wallet</title>
				<desc>Applies a debit on the Available and Book balances of the wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c54365</upd_at>
		<_id>56e1e2754268958967c54366</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Hold</name>
		<desc>Holds (decrements available balance) an amount of cash money from the cash wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c54383</_id>
				<id>0</id>
				<title>External plugin requests a hold of the funds from the cash wallet</title>
				<desc>For this, it sends a transaction UUID, an amount, a memo, and its own public key</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54389</_id>
				<id>1</id>
				<title>Receives hold transaction request</title>
				<desc>Registers hold transaction internally as an ACKNOWLEDGED transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>hold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c5438f</_id>
				<id>2</id>
				<title>Internal agent processes hold transaction request</title>
				<desc>Tries to hold funds in wallet, if succeded, changes internal status to CONFIRMED, otherwise REJECTED</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>hold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54395</_id>
				<id>3</id>
				<title>Tries to hold available funds</title>
				<desc>Processes the hold request by making a debit on the available balance of the cash wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c5437f</upd_at>
		<_id>56e1e2754268958967c54380</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Refuse Payment Request from Intra user</name>
		<desc>A Wallet&apos;s Intra User refuse a payment request sent by another actor.</desc>
		<prev>List Payment Request</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c54423</_id>
				<id>0</id>
				<title>Select payment request record to refuse </title>
				<desc>The actor selects a payment request from the list and press deny button.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54429</_id>
				<id>1</id>
				<title>Route request to payment request plugin</title>
				<desc>The module routes this payment request refuse to the Crypto Payment Request Plugin to reach the selected intra user.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c5442e</_id>
				<id>2</id>
				<title>Route refuse to network service</title>
				<desc>The module routes this refuse to the network service to reach the selected intra user.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54434</_id>
				<id>3</id>
				<title>Call the intra user to deliver the refuse</title>
				<desc>The network service places a call to the intra user and then it delivers the refuse via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54439</_id>
				<id>4</id>
				<title>Transport request</title>
				<desc>The payment request is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>5</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c5443f</_id>
				<id>5</id>
				<title>Receive the payment request</title>
				<desc>The network service receives the refuse and informs that to Request Crypto Payment Plugin.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>event</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54445</_id>
				<id>6</id>
				<title>Update the request status</title>
				<desc>The payment request is update with the status deny.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>crypto payment</name>
				<layer>request</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c5444b</_id>
				<id>7</id>
				<title>Return payment request send list</title>
				<desc>The module returns the payement request send list.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54450</_id>
				<id>8</id>
				<title>List Send Payment Request</title>
				<desc>The wallet&apos;s user go to Payment Request menu and list payment request send, and show this status.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c5441d</upd_at>
		<_id>56e1e2754268958967c5441e</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Accept  Payment Request From Intra user</name>
		<desc>A Wallet&apos;s Intra User accept a payment request sent by another actor.</desc>
		<prev>List Payment Request</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c54458</_id>
				<id>0</id>
				<title>Select payment request receive and accept it</title>
				<desc>The customer selects a payment request from the receive list and press accept button.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c5445e</_id>
				<id>1</id>
				<title>Route request acceptance to plugin</title>
				<desc>The module routes this acceptance to the Crypto Payment Request Plugin to apply the payment to the intra user actor.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54463</_id>
				<id>2</id>
				<title>Route acceptance to network service</title>
				<desc>The Crypto Payment Request Plugin routes this acceptance to the network service to inform the actor intra user about payment acceptance.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54468</_id>
				<id>3</id>
				<title>Route acceptance to Outgoing Intra User</title>
				<desc>The Crypto Payment Request Plugin notifies the outgoing intra user plugin to generate the send crypto transaction. And continuous workflow of sending btc an intra user actor </desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c5446e</_id>
				<id>4</id>
				<title>Call the intra user to deliver the acceptance message</title>
				<desc>The network service places a call to the intra user and then it delivers the message via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54473</_id>
				<id>5</id>
				<title>Transport request</title>
				<desc>The acceptance message is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>6</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54479</_id>
				<id>6</id>
				<title>Receive the acceptance notification</title>
				<desc>The network service receives the acceptance notification and informs that to Request Crypto Payment Plugin.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>event</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c5447f</_id>
				<id>7</id>
				<title>Update the Payment request</title>
				<desc>The payment request is updated  with the Request Action in state INFORM_APPROVAL .</desc>
				<type>end</type>
				<name>crypto payment</name>
				<layer>request</layer>
				<platfrm>CCP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c54452</upd_at>
		<_id>56e1e2754268958967c54453</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Creates an Intra Wallet User</name>
		<desc>Creates an Intra Wallet User Identity.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c54485</_id>
				<id>0</id>
				<title>Open the wallet to create a new Identity</title>
				<desc>The user open the Wallet User Identity and proceed to fill the requested data inside the form and press the save button.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54488</_id>
				<id>1</id>
				<title>Process Intra User Identity creation request</title>
				<desc>The module routes the data containing the name and profile picture to the  IntraWalletUserModule plugin. </desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c5448b</_id>
				<id>2</id>
				<title>Process Intra User Identity creation request</title>
				<desc>The module routes the name and profile picture to the  IntraWalletIdentityPluginRoot  plugin.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54490</_id>
				<id>3</id>
				<title>Process Intra User Identity creation request</title>
				<desc>Within this plugin, two different keys are created, a public one and a private one, after that the plugin routes the data to the IntraWalletUserIdentityDao.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54493</_id>
				<id>4</id>
				<title>Creates the Intra User Identity</title>
				<desc>The dao  inserts the data in the DB.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c54481</upd_at>
		<_id>56e1e2754268958967c54482</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Open Intra Wallet Community</name>
		<desc>List all discovered connections.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c54499</_id>
				<id>0</id>
				<title>Start </title>
				<desc>The user opens the Intra Wallet Community and the fragment proceeds to initialize all required components.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c5449e</_id>
				<id>1</id>
				<title>Processing the requested list </title>
				<desc>The module routes the requested list. </desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544a3</_id>
				<id>2</id>
				<title>Routing the requested list.</title>
				<desc>The NS routes the request to the WS.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544a6</_id>
				<id>3</id>
				<title>Processing the list</title>
				<desc>The ws gets the connected list of components and send it back to the ns</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544ab</_id>
				<id>4</id>
				<title>Getting the list of connected users.</title>
				<desc>The NS routes the request back to the module.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544b0</_id>
				<id>5</id>
				<title>Sends the list back to the view</title>
				<desc>The module routes the requested list to the fragment.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544b3</_id>
				<id>6</id>
				<title>Display the list of users </title>
				<desc>The fragment displays the list of discovered users.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c54495</upd_at>
		<_id>56e1e2754268958967c54496</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Add Intra User Actor as a Wallet Contact</name>
		<desc>A Wallet&apos;s User sends a payment to an intra user is not your wallet contact.</desc>
		<prev>Connect with other intra user</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c544fb</_id>
				<id>0</id>
				<title>Select Send btc options.</title>
				<desc>The wallet user selects Send btc options and write contact name in in the sending form, then select a intra user connection</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54501</_id>
				<id>1</id>
				<title>Convert connection as wallet contact</title>
				<desc>The module create a new contact through the Wallet Contact Middleware and send crypto address request for network services.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54507</_id>
				<id>2</id>
				<title>Call the intra user to deliver the address request</title>
				<desc>The network service places a call to the intra user and then it delivers the address request via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto addresses</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c5450c</_id>
				<id>3</id>
				<title>Transport request</title>
				<desc>The address request is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>4</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54512</_id>
				<id>4</id>
				<title>Receive the address request</title>
				<desc>The network service receives the address request and informs that to Crypto Addresses Middleware.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>crypto addresses</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54516</_id>
				<id>5</id>
				<title>Get the address of intra user</title>
				<desc>Crypto Addresses Middleware gets a new address through the Crypto Address Manager and the return to Crypto Address Network Services.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c5451c</_id>
				<id>6</id>
				<title>Call the Wallet Contacts middleware to deliver the intra user address</title>
				<desc>The network service places a call to the Wallet Contacts middleware and then it delivers the crypto address via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>crypto addresses</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54521</_id>
				<id>7</id>
				<title>Transport request</title>
				<desc>The crypto address is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>8</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54526</_id>
				<id>8</id>
				<title>Update wallet contact crypto address</title>
				<desc>The crypto address network services returns the address of the contact, which is updated in the database .</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c5452b</_id>
				<id>9</id>
				<title>List wallets contacts</title>
				<desc>The wallet&apos;s user will contact list and select the new contact to view his address.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c544f5</upd_at>
		<_id>56e1e2754268958967c544f6</_id>
	</proc>
	<proc>
		<platfrm>COR</platfrm>
		<name>Test Process</name>
		<desc>This is a process intended to test the workflow drawing</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c54533</_id>
				<id>0</id>
				<title>Start step</title>
				<desc>This is the first step</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54538</_id>
				<id>1</id>
				<title>Next step</title>
				<desc>This is the first step, this one has a bifurcation, which can be parallel process or an &apos;if&apos;</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c5453d</_id>
				<id>2</id>
				<title>True state</title>
				<desc>This step is executed if the sentence is true</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54542</_id>
				<id>3</id>
				<title>False state</title>
				<desc>This step is executed if the sentence is false, it loops back</desc>
				<type>activity</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c54547</_id>
				<id>4</id>
				<title>Out of loop</title>
				<desc>This is out of the loop</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c5452d</upd_at>
		<_id>56e1e2754268958967c5452e</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer requests a connection to a Broker</name>
		<desc>A Crypto Customer sends a connection request to a Crypto Broker, in order to be able to see his products and start a negotiation</desc>
		<prev>Listing of Crypto Broker Identities</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2724268958967c53cd0</_id>
				<id>0</id>
				<title>Broker selection and request submission</title>
				<desc>The Customer selects a Broker from the list of Brokers, and submits the request to make a connection</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53cd6</_id>
				<id>1</id>
				<title>Route request to Network Service</title>
				<desc>The module routes this request to the Network Service so that it reaches the selected Broker</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker community</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53cdc</_id>
				<id>2</id>
				<title>Call the Broker to deliver the request</title>
				<desc>The network service places a call to the broker, delivering the request via the Fermat Network.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53ce1</_id>
				<id>3</id>
				<title>Routing of the Customer&apos;s request through the network</title>
				<desc>The request is then transported through the communication layer, using one of the available channels</desc>
				<type>communication</type>
				<next>
					<id>4</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2724268958967c53ce7</_id>
				<id>4</id>
				<title>Request reception on the Broker&apos;s side</title>
				<desc>The Network Service receives the request and informs the Crypto Broker Actor</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>crypto broker</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53ced</_id>
				<id>5</id>
				<title>Request recording and notification</title>
				<desc>The request is saved and a notification to the Broker is generated</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53cf3</_id>
				<id>6</id>
				<title>Records the notification</title>
				<desc>The the notification is saved, and the OS core library is notified.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>event</type>
				</next>
				<name>notification</name>
				<layer>middleware</layer>
				<platfrm>PIP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53cf8</_id>
				<id>7</id>
				<title>Sends notification to the OS</title>
				<desc>The notification manager displays the notification to the OS, notifying the Broker of the connection request</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2724268958967c53cc9</upd_at>
		<_id>56e1e2724268958967c53cca</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Update Negotiation Customer Broker</name>
		<desc>The Crypto Customer update negotiation with Crypto Broker.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2724268958967c53e96</_id>
				<id>0</id>
				<title>Start Customer Broker Update Negotiation Transaction</title>
				<desc>The Crypto Customer indicates to update negotiations with the selected Crypto Broker</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e9c</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to update negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53ea2</_id>
				<id>2</id>
				<title>Manages the update of Negotiation</title>
				<desc>Create a transaction to manage the update negotiation Customer Broker</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53ea7</_id>
				<id>3</id>
				<title>Update The Purchase Negotiation</title>
				<desc>Update the purchase negotiation of Customer</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2724268958967c53ead</_id>
				<id>4</id>
				<title>Process Sending Update Negotiation To Broker</title>
				<desc>Process Sending Update Negotiation To Broker</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53eb3</_id>
				<id>5</id>
				<title>Sending Update Negotiation To Broker</title>
				<desc>Sending update negotiation to Broker for update Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>fermat message</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53eb9</_id>
				<id>6</id>
				<title>Receiving Update Negotiation From Customer</title>
				<desc>Receiving update negotiation from Customer for update Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53ebf</_id>
				<id>7</id>
				<title>Process Receiving Update Negotiation From Customer</title>
				<desc>Process Receiving Update Negotiation From Customer and Request data Sale negotiation</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53ec5</_id>
				<id>8</id>
				<title>Provides data of Sale negotiation</title>
				<desc>Provides data of Sale negotiation</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53ecb</_id>
				<id>9</id>
				<title>Compare Date of Purchase Negotiation vs Sale Negotiation</title>
				<desc>Compare Date of Purchase Negotiation vs Sale Negotiation to maintain synchronization of Negotiation Customer-Broker.</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53ed1</_id>
				<id>10</id>
				<title>Update The Sale Negotiation</title>
				<desc>If the data del Sale Negotiation are more updated than the negotiation Purchase keeps if not update</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53ed7</_id>
				<id>11</id>
				<title>Sending Confirmation of Update Negotiation</title>
				<desc>Sending Confirmation of Update Negotiation to Customer</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>fermat message</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53edd</_id>
				<id>12</id>
				<title>Receiving Confirmation of Update Negotiation</title>
				<desc>Receiving Confirmation of Update Negotiation From Broker</desc>
				<type>activity</type>
				<next>
					<id>13</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53ee3</_id>
				<id>13</id>
				<title>Process the Receive Confirmation of Update Negotiation</title>
				<desc>Process the Receive Confirmation of Update Negotiation</desc>
				<type>activity</type>
				<next>
					<id>14</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53ee9</_id>
				<id>14</id>
				<title>Confirm the Update Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2724268958967c53e8f</upd_at>
		<_id>56e1e2724268958967c53e90</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Update Negotiation Broker Customer</name>
		<desc>The Crypto Broker update negotiation with Crypto Customer.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2734268958967c53ef2</_id>
				<id>0</id>
				<title>Start Customer Broker Update Negotiation Transaction</title>
				<desc>The Crypto Broker indicates to update negotiations with the selected Crypto Customer</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53ef8</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to update negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53efe</_id>
				<id>2</id>
				<title>Manages the update of Negotiation</title>
				<desc>Create a transaction to manage the update negotiation Broker Customer</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f04</_id>
				<id>3</id>
				<title>Update The Sale Negotiation</title>
				<desc>Update the Sale negotiation of Customer</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f0a</_id>
				<id>4</id>
				<title>Process Sending Update Negotiation To Customer</title>
				<desc>Process Sending Update Negotiation To Customer</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f10</_id>
				<id>5</id>
				<title>Sending Update Negotiation To Customer</title>
				<desc>Sending update negotiation to Customer for update Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f16</_id>
				<id>6</id>
				<title>Receiving Update Negotiation From Broker</title>
				<desc>Receiving update negotiation from Broker for update Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f1c</_id>
				<id>7</id>
				<title>Prosess Receiving Update Negotiation From Broker</title>
				<desc>Prosess Receiving Update Negotiation From Broker and Request data Purchase negotiation</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f21</_id>
				<id>8</id>
				<title>Provides data of Pruchase negotiation</title>
				<desc>Provides data of Purchase negotiation</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2734268958967c53f27</_id>
				<id>9</id>
				<title>Compare Date of Sale Negotiation vs Purchase Negotiation</title>
				<desc>Compare Date of Sale Negotiation vs Purchase Negotiation to maintain synchronization of Negotiation Customer-Broker.</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f2d</_id>
				<id>10</id>
				<title>Update The Purchase Negotiation</title>
				<desc>If the data del Purchase Negotiation are more updated than the negotiation Purchase keeps if not update</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f33</_id>
				<id>11</id>
				<title>Sending Confirmation of Update Negotiation</title>
				<desc>Sending Confirmation of Update Negotiation to Broker</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f39</_id>
				<id>12</id>
				<title>Receiving Confirmation of Update Negotiation</title>
				<desc>Receiving Confirmation of Update Negotiation From Customer</desc>
				<type>activity</type>
				<next>
					<id>13</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f3f</_id>
				<id>13</id>
				<title>Process the Receive Confirmation of Update Negotiation</title>
				<desc>Process the Receive Confirmation of Update Negotiation</desc>
				<type>activity</type>
				<next>
					<id>14</id>
					<type>direct call</type>
				</next>
				<name>customer broker update</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f45</_id>
				<id>14</id>
				<title>Confirm the Update Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2734268958967c53eeb</upd_at>
		<_id>56e1e2734268958967c53eec</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Close Negotiation Customer Broker</name>
		<desc>The Crypto Customer update negotiation with Crypto Broker.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2734268958967c53f4e</_id>
				<id>0</id>
				<title>Start Customer Broker Close Negotiation Transaction</title>
				<desc>The Crypto Customer Acept all clause and it Close negotiations with the selected Crypto Broker</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f54</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to Close negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f5a</_id>
				<id>2</id>
				<title>Manages the Close of Negotiation</title>
				<desc>Create a transaction to manage the Close negotiation Customer Broker, If the merchandise is currency Crypto, requesting Crypto address actuality the Customer</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f5f</_id>
				<id>3</id>
				<title>Close The Purchase Negotiation</title>
				<desc>If the merchandise is currency Crypto, add to information of Purchase Negotiation the Crypto address actuality the Customer and later Close the Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2734268958967c53f65</_id>
				<id>4</id>
				<title>Process Sending Close Negotiation To Broker</title>
				<desc>Process Sending Close Negotiation To Broker</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f6b</_id>
				<id>5</id>
				<title>Sending Close Negotiation To Broker</title>
				<desc>Sending Close negotiation to Broker for Close Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f71</_id>
				<id>6</id>
				<title>Receiving Close Negotiation From Customer</title>
				<desc>Receiving Close negotiation from Customer for Close Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f77</_id>
				<id>7</id>
				<title>Process Receiving Close Negotiation From Customer</title>
				<desc>Process Receiving Close Negotiation From Customer. If the payment is currency Crypto, requesting Crypto address actuality the Broker</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f7d</_id>
				<id>8</id>
				<title>Close The Sale Negotiation</title>
				<desc>If the payment is currency Crypto, add to information of Sale Negotiation the Crypto address actuality the Broker and later Close the Sale Negotiation </desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f83</_id>
				<id>9</id>
				<title>Sending Confirmation of Close Negotiation</title>
				<desc>Sending Confirmation of Close Negotiation to Customer</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f89</_id>
				<id>10</id>
				<title>Receiving Confirmation of Close Negotiation</title>
				<desc>Receiving Confirmation of Close Negotiation From Broker</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f8f</_id>
				<id>11</id>
				<title>Process the Receive Confirmation of Close Negotiation</title>
				<desc>Process the Receive Confirmation of Close Negotiation</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53f95</_id>
				<id>12</id>
				<title>Confirm the Close Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2734268958967c53f47</upd_at>
		<_id>56e1e2734268958967c53f48</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Close Negotiation Broker Customer</name>
		<desc>The Crypto Broker update negotiation with Crypto Customer.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2734268958967c53f9e</_id>
				<id>0</id>
				<title>Start Customer Broker Close Negotiation Transaction</title>
				<desc>The Crypto Broker Acept all clause and it Close negotiations with the selected Crypto Customer</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53fa4</_id>
				<id>1</id>
				<title>Process Negotiation Request</title>
				<desc>Processes the request to Close negotiation</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53faa</_id>
				<id>2</id>
				<title>Manages the Close of Negotiation</title>
				<desc>Create a transaction to manage the Close Negotiation Broker Customer. If the payment is currency Crypto, requesting Crypto address actuality the Broker</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53fb0</_id>
				<id>3</id>
				<title>Close The Sale Negotiation</title>
				<desc>If the merchandise is currency Crypto, add to information of Sale Negotiation the Crypto address actuality the Broker and later Close the Sale Negotiation</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53fb6</_id>
				<id>4</id>
				<title>Process Sending Close Negotiation To Customer</title>
				<desc>Process Sending Close Negotiation To Customer</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53fbc</_id>
				<id>5</id>
				<title>Sending Close Negotiation To Customer</title>
				<desc>Sending Close negotiation to Customer for Close Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53fc2</_id>
				<id>6</id>
				<title>Receiving Close Negotiation From Broker</title>
				<desc>Receiving Close negotiation from Broker for Close Purchase Negotiation</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53fc8</_id>
				<id>7</id>
				<title>Process Receiving Close Negotiation From Broker</title>
				<desc>Process Receiving Close Negotiation From Broker. If the merchandise is currency Crypto, requesting Crypto address actuality the Customer</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53fce</_id>
				<id>8</id>
				<title>Close The Purchase Negotiation</title>
				<desc>If the merchandise is currency Crypto, add to information of Purchase Negotiation the Crypto address actuality the Customer and later Close the Purchase Negotiation </desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53fd4</_id>
				<id>9</id>
				<title>Sending Confirmation of Close Negotiation</title>
				<desc>Sending Confirmation of Close Negotiation to Customer</desc>
				<type>activity</type>
				<next>
					<id>10</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53fda</_id>
				<id>10</id>
				<title>Receiving Confirmation of Close Negotiation</title>
				<desc>Receiving Confirmation of Close Negotiation From Broker</desc>
				<type>activity</type>
				<next>
					<id>11</id>
					<type>direct call</type>
				</next>
				<name>negotiation transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53fe0</_id>
				<id>11</id>
				<title>Process the Receive Confirmation of Close Negotiation</title>
				<desc>Process the Receive Confirmation of Close Negotiation</desc>
				<type>activity</type>
				<next>
					<id>12</id>
					<type>direct call</type>
				</next>
				<name>customer broker close</name>
				<layer>negotiation transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c53fe6</_id>
				<id>12</id>
				<title>Confirm the Close Negotiation is Done</title>
				<desc></desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2734268958967c53f97</upd_at>
		<_id>56e1e2734268958967c53f98</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Broker Acknowledge Offline Payment</name>
		<desc>Broker receive an Offline Payment from a Crypto Customer, this payment is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2734268958967c54105</_id>
				<id>0</id>
				<title>Crypto Broker acknowledges payment</title>
				<desc>The crypto broker acknowledges the incoming payment</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c5410b</_id>
				<id>1</id>
				<title>Process Acknowledge Request</title>
				<desc>Process request and starts the acknowledge process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54111</_id>
				<id>2</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Offline Payment Business Transaction with the payment associated to a contract data.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>broker ack offline payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54117</_id>
				<id>3</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5411d</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate an incoming payment.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>broker ack offline payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54123</_id>
				<id>5</id>
				<title>Sends Acknowledge Payment Notification to Crypto Customer</title>
				<desc>Sends the successful Acknowledge payment notification to Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54129</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5412f</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to pending merchandise.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2734268958967c540fe</upd_at>
		<_id>56e1e2734268958967c540ff</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Send Crypto to Intra user</name>
		<desc>A Wallet&apos;s Intra User sends a crypto to another intra user contact for a specific amount.</desc>
		<prev>List Wallet Contacts</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c543b5</_id>
				<id>0</id>
				<title>Select Intra User contact and send crypto</title>
				<desc>The customer selects a contact from the list and press send button, then complete Send forms and confirms the operation.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c543bb</_id>
				<id>1</id>
				<title>Route send crypto to outgoing intra user plugin</title>
				<desc>The module sends it to the outgoing intra user plugin to create the crypto transaction.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c543c1</_id>
				<id>2</id>
				<title>Route send crypto metadata to network service</title>
				<desc>The outgoing intra user plugin routes this crypto transaction to the crypto transmission network service to send metadata.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c543c7</_id>
				<id>3</id>
				<title>Route send crypto to Crypto Bitcoin Vault</title>
				<desc>The outgoing intra user plugin routes this crypto transaction to the Crypto Bitcoin Vault to send btc to another actor and debit amount to Available Balance.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c543cd</_id>
				<id>4</id>
				<title>Send the crypto metadata</title>
				<desc>The network service sends the crypto metadata and informs that to Incoming Intra User Plugin.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>crypto transmission</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c543d2</_id>
				<id>5</id>
				<title>Transport request</title>
				<desc>The send metadata is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>6</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c543d8</_id>
				<id>6</id>
				<title>Receive the crypto metadata</title>
				<desc>The network service receives the crypto metadata and informs that to Incoming Intra User Plugin.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>event</type>
				</next>
				<name>crypto transmission</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c543dc</_id>
				<id>7</id>
				<title>Call the incoming intra user plugin to deliver the sends bitcoins</title>
				<desc>The crypto network bitcoin places a call to the incoming intra user plugin and then it delivers the sends crypto.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c543e2</_id>
				<id>8</id>
				<title>List Received Transaction</title>
				<desc>The wallet&apos;s user go to Home menu and list receive transactions.</desc>
				<type>end</type>
				<name>incoming intra user</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c543af</upd_at>
		<_id>56e1e2754268958967c543b0</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Create Artist identity</name>
		<desc>An artist creates a Artist identity in Tokenly platform.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d6f005e22a239818eb</_id>
				<id>0</id>
				<title>The user submit the data to create the Artist identity.</title>
				<desc>Includes the data to create an identity.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818ef</_id>
				<id>1</id>
				<title>Send the artist data.</title>
				<desc>Sends acces data to Tokenly to verify the access data</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818f3</_id>
				<id>2</id>
				<title>Request user verification</title>
				<desc>Sends the necessary data to check a Tokenly user</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818f6</_id>
				<id>3</id>
				<title>Request to the Tokenly API the user verification</title>
				<desc>Checks with the public API if the user data is correct.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818fa</_id>
				<id>4</id>
				<title>Create the identity.</title>
				<desc>With authenticated data, proceeds to create the new identity.</desc>
				<type>activity</type>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>570560be6dee529b2dbfbdcc</upd_at>
		<_id>56fa81d6f005e22a239818e7</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Broker Reference Wallet Installation</name>
		<desc>Wallet Store installation procedure for the Crypto Broker Reference Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2714268958967c53b6d</_id>
				<id>0</id>
				<title>User selects the Broker Wallet on the Wallet Store</title>
				<desc>The user enters the Wallet Store and selects the Crypto Broker Reference Wallet to install it</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>wallet store</name>
				<layer>sub app</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53b73</_id>
				<id>1</id>
				<title>Wallet Store invokes the Wallet Manager Middleware Plugin</title>
				<desc>Notifies the Wallet Manager Middleware Plugin so it can install the Wallet</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>wallet store</name>
				<layer>sub app module</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53b79</_id>
				<id>2</id>
				<title>Wallet Manager Middleware Plugin processes installation request</title>
				<desc>Sends a request to the Wallet Resources Network Service, to gather the resources of the Reference Wallet to be installed</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>wallet manager</name>
				<layer>middleware</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53b7f</_id>
				<id>3</id>
				<title>Wallet Resources Network Service downloads wallet&apos;s resources</title>
				<desc>Downloads the Crypto Broker Reference Wallet&apos;s resources, from the GitHub repository</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>wallet resources</name>
				<layer>network service</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53b85</_id>
				<id>4</id>
				<title>Processing of the Wallet&apos;s Navigation Structure</title>
				<desc>Processes the Navigation Structure of the Reference Wallet and fires an event which effectively registers the Reference Wallet</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>wallet runtime</name>
				<layer>engine</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53b8b</_id>
				<id>5</id>
				<title>Setting the Crypto Broker Reference Wallet as Installed</title>
				<desc>Sets the Crypto Broker Reference Wallet as installed, and fires an event</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>event</type>
				</next>
				<name>wallet manager</name>
				<layer>middleware</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53b90</_id>
				<id>6</id>
				<title>Sub App Manager requests resources for the Wallet&apos;s Sub Apps</title>
				<desc>Sends a request to the Sub App Resources Network Service so it can download the necessary resources (Crypto Broker Identity and Crypto Customer Community Sub Apps)</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2714268958967c53b95</_id>
				<id>7</id>
				<title>Sub App Resources Network Service downloads Sub App&apos;s resources</title>
				<desc>Downloads resources for Crypto Broker Identity and Crypto Customer Community Sub Apps</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2714268958967c53b9a</_id>
				<id>8</id>
				<title>Sub App Runtime parses the Navigation Structure and activates the Sub Apps</title>
				<desc>Processes the Navigation Structure of the Crypto Broker Identity and Crypto Customer Community Sub Apps and fires a event to activate them</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2714268958967c53b9f</_id>
				<id>9</id>
				<title>Setting the Sub Apps as Installed</title>
				<desc>The Sub App Manager Middleware sets the Sub Apps as Installed</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2714268958967c53b66</upd_at>
		<_id>56e1e2714268958967c53b67</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Customer Reference Wallet Installation</name>
		<desc>Wallet Store installation procedure for the Crypto Customer Reference Wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2714268958967c53ba8</_id>
				<id>0</id>
				<title>User selects the Customer Wallet on the Wallet Store</title>
				<desc>The user enters the Wallet Store and selects the Crypto Customer Reference Wallet to install it</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>wallet store</name>
				<layer>sub app</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53bae</_id>
				<id>1</id>
				<title>Wallet Store invokes the Wallet Manager Middleware Plugin</title>
				<desc>The Wallet Store notifies the Wallet Manager Middleware Plugin so it can install the Wallet</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>wallet store</name>
				<layer>sub app module</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53bb4</_id>
				<id>2</id>
				<title>Wallet Manager Middleware Plugin processes installation request</title>
				<desc>Sends a request to the Wallet Resources Network Service, to gather the resources of the Reference Wallet to be installed</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>wallet manager</name>
				<layer>middleware</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53bba</_id>
				<id>3</id>
				<title>Wallet Resources Network Service downloads wallet&apos;s resources</title>
				<desc>Downloads the Crypto Customer Reference Wallet&apos;s resources, from the GitHub repository</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>wallet resources</name>
				<layer>network service</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53bc0</_id>
				<id>4</id>
				<title>Processing of the Wallet&apos;s Navigation Structure</title>
				<desc>Processes the Navigation Structure of the Reference Wallet and fires an event which effectively registers this</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>wallet runtime</name>
				<layer>engine</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53bc6</_id>
				<id>5</id>
				<title>Setting the Crypto Customer Reference Wallet as Installed</title>
				<desc>Sets the Crypto Customer Reference Wallet as installed, and fires an event</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>event</type>
				</next>
				<name>wallet manager</name>
				<layer>middleware</layer>
				<platfrm>WPD</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53bcb</_id>
				<id>6</id>
				<title>Sub App Manager requests resources for the Wallet&apos;s Sub Apps</title>
				<desc>Sends a request to the Sub App Resources Network Service so it can download the necessary resources (Crypto Customer Identity and Crypto Customer Community Sub Apps)</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2714268958967c53bd0</_id>
				<id>7</id>
				<title>Sub App Resources Network Service downloads Sub App&apos;s resources</title>
				<desc>Downloads resources for Crypto Customer Identity and Crypto Customer Community Sub Apps</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2714268958967c53bd5</_id>
				<id>8</id>
				<title>Sub App Runtime parses the Navigation Structure and activates the Sub Apps</title>
				<desc>Processes the Navigation Structure of the Crypto Customer Identity and Crypto Customer Community Sub Apps and fires a event to activate them</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2714268958967c53bda</_id>
				<id>9</id>
				<title>Setting the Sub Apps as Installed</title>
				<desc>The Sub App Manager Middleware sets the Sub Apps as Installed</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2714268958967c53ba1</upd_at>
		<_id>56e1e2714268958967c53ba2</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Listing of Crypto Broker Identities</name>
		<desc>Shows a list of Crypto Broker Identities</desc>
		<prev>Crypto Broker Identity creation</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2714268958967c53c0d</_id>
				<id>0</id>
				<title>Request list of identities</title>
				<desc>The Broker requests the list of his identities</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c13</_id>
				<id>1</id>
				<title>Process the request of the list of Identities</title>
				<desc>The Crypto Broker Identity Sub App Module processes the request</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c19</_id>
				<id>2</id>
				<title>Fetches and returns the list of identities</title>
				<desc>The Crypto Broker Identity returns the list of identities associated to the broker</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c1f</_id>
				<id>3</id>
				<title>Returns the list of Identities</title>
				<desc>Returns the list of Identities to the Identity Sub App</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c25</_id>
				<id>4</id>
				<title>Shows the list of Identities</title>
				<desc>Shows the Broker the list of his Identities</desc>
				<type>end</type>
				<name>crypto broker identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2714268958967c53c06</upd_at>
		<_id>56e1e2714268958967c53c07</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Listing of Crypto Customer Identities</name>
		<desc>Shows a list of Crypto Customer Identities</desc>
		<prev>Crypto Customer Identity creation</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2714268958967c53c2e</_id>
				<id>0</id>
				<title>Request list of identities</title>
				<desc>The Customer requests the list of his identities</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c34</_id>
				<id>1</id>
				<title>Process the request of the list of Identities</title>
				<desc>The Crypto Customer Identity Sub App Module processes the request</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c3a</_id>
				<id>2</id>
				<title>Fetches and returns the list of identities</title>
				<desc>The Crypto Customer Identity returns the list of identities associated to the Customer</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c40</_id>
				<id>3</id>
				<title>Returns the list of Identities</title>
				<desc>Returns the list of Identities to the Identity Sub App</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto customer identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c46</_id>
				<id>4</id>
				<title>Shows the list of Identities</title>
				<desc>Shows the Customer the list of his Identities</desc>
				<type>end</type>
				<name>crypto customer identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2714268958967c53c27</upd_at>
		<_id>56e1e2714268958967c53c28</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Broker Identity - Reference Wallet association</name>
		<desc>A Broker associates one of his Identities to a Crypto Broker Reference Wallet</desc>
		<prev>List of Crypto Broker Identities</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2714268958967c53c4f</_id>
				<id>0</id>
				<title>Broker selects a Crypto Broker Reference Wallet and requests the list of Identities</title>
				<desc>The Broker enter in a Crypto Broker Reference Wallet and requests the list of his identities to associate with this wallet</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c55</_id>
				<id>1</id>
				<title>Process the request of the list of Identities</title>
				<desc>Wallet module receives the request from the Reference Wallet to obtain the list of Identities. The module forwards the request to the Crypto Broker Identity Plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c5b</_id>
				<id>2</id>
				<title>Return the Identities list</title>
				<desc>Crypto broker Identity returns the list of Identities</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c61</_id>
				<id>3</id>
				<title>Return Identities list</title>
				<desc>The Crypto Broker Wallet Module returns the list of Identities</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c67</_id>
				<id>4</id>
				<title>Reference Wallet shows the list of Identities andthe Broker selects one</title>
				<desc>Displays the list to the Broker, he then selects one, requesting the wallet module to commit the association</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c6d</_id>
				<id>5</id>
				<title>Processing of the Wallet - Identity association request</title>
				<desc>Wallet Module receives the request and indicates the Crypto Broker Actor Plugin to create the association</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c73</_id>
				<id>6</id>
				<title>Wallet - Identity association</title>
				<desc>The Wallet module registers the Wallet - Identity association in its database</desc>
				<type>end</type>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2714268958967c53c48</upd_at>
		<_id>56e1e2714268958967c53c49</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer Identity - Reference Wallet association</name>
		<desc>A Customer associates one of his Identities to a Crypto Customer Reference Wallet</desc>
		<prev>List of Crypto Customer Identities</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2714268958967c53c7c</_id>
				<id>0</id>
				<title>Customer selects a Crypto Customer Reference Wallet and requests the list of Identities</title>
				<desc>The Customer enter in a Crypto Customer Reference Wallet and requests the list of his identities to associate with this wallet</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c82</_id>
				<id>1</id>
				<title>Process the request of the list of Identities</title>
				<desc>Wallet module receives the request from the Reference Wallet to obtain the list of Identities. The module forwards the request to the Crypto Customer Identity Plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c88</_id>
				<id>2</id>
				<title>Return the Identities list</title>
				<desc>Crypto Customer Identity returns the list of Identities</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c8e</_id>
				<id>3</id>
				<title>Return Identities list</title>
				<desc>The Crypto Customer Wallet Module returns the list of Identities</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c94</_id>
				<id>4</id>
				<title>Reference Wallet shows the list of Identities and the Customer selects one</title>
				<desc>Displays the list to the Customer, he then selects one, requesting the wallet module to commit the association</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53c9a</_id>
				<id>5</id>
				<title>Processing of the Wallet - Identity association request</title>
				<desc>Wallet Module receives the request and indicates the Crypto Customer Actor Plugin to create the association</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53ca0</_id>
				<id>6</id>
				<title>Wallet - Identity association</title>
				<desc>The Wallet module registers the Wallet - Identity association in its database</desc>
				<type>end</type>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2714268958967c53c75</upd_at>
		<_id>56e1e2714268958967c53c76</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Publishing the Crypto Broker Identity</name>
		<desc>The Broker publishes his Identity, making it visible to the Fermat Network</desc>
		<prev>Listing of Crypto Broker Identities</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2714268958967c53ca9</_id>
				<id>0</id>
				<title>Broker selects an Identity and selects &apos;Publish&apos;</title>
				<desc>The Broker selects one of his associated identities and publishes it. This requests the wallet module to change the state of this identity to Public</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53caf</_id>
				<id>1</id>
				<title>Forward the request to the actor in order to publish the identity</title>
				<desc>The Crypto Broker Identity Sub App Module forwards this request to the Crypto Broker Actor</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker identity</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53cb5</_id>
				<id>2</id>
				<title>Changes the status of the Identity to Public</title>
				<desc>The Crypto Broker Actor modifies the status of the Identity to Public</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53cbb</_id>
				<id>3</id>
				<title>Commits status change in database</title>
				<desc>The Crypto Broker Identity Plugin changes its database to reflect the new Public status of the selected Identity</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>identity</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53cc1</_id>
				<id>4</id>
				<title>Sends the Identity to the Actor Network Service</title>
				<desc>The Crypto Broker Actor Plugin sends the Identity&apos;s Information to the Actor Network Service</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2714268958967c53cc7</_id>
				<id>5</id>
				<title>Consults the details of the identity to publish</title>
				<desc>The Crypto Broker Actor Network Seervice consults the details of the identity to publish and finally sends it to the Fermat Network</desc>
				<type>end</type>
				<name>crypto broker</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2714268958967c53ca2</upd_at>
		<_id>56e1e2714268958967c53ca3</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Broker accepts a connection from a Customer</name>
		<desc>A Crypto Broker accepts a connection request send by a Crypto Customer</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2724268958967c53d01</_id>
				<id>0</id>
				<title>Request list of Crypto Customers waiting for connection</title>
				<desc>The Broker requests a list of Crypto Customers waiting to connect to him</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d07</_id>
				<id>1</id>
				<title>Forward request of list of Crypto Customers waiting for connection</title>
				<desc>The module routes this request to the Actor Plugin to get the list</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d0d</_id>
				<id>2</id>
				<title>Returns list of Crypto Customers waiting for connection</title>
				<desc>Plugin consults its database to get the Crypto Customers waiting for connection</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d13</_id>
				<id>3</id>
				<title>Return the list of Crypto Customers waiting for connection</title>
				<desc>The module returns the list of Crypto Customers waiting for connection</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d19</_id>
				<id>4</id>
				<title>Customer selection from returned Customer list</title>
				<desc>Shows the Broker the list of Crypto Customers waiting for connection so that he can select one to accept</desc>
				<type>start</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d1f</_id>
				<id>5</id>
				<title>Register the acceptance of the connection</title>
				<desc>The Crypto Customer Community Module routes this request to the Actor so it can register the new connection</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>crypto customer community</name>
				<layer>sub app module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d25</_id>
				<id>6</id>
				<title>Register the new connection in database</title>
				<desc>Changes in database the state of the connection to Accepted, while also notifying the Network Service to forward the change to the Crypto Customer</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>actor</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d2b</_id>
				<id>7</id>
				<title>Sends the message of the accepted connection to the Crypto Customer</title>
				<desc>Forwards the change of state to the Crypto Customer&apos;s device, that the connection request has been accepted</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>fermat message</type>
				</next>
				<name>crypto customer</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d31</_id>
				<id>8</id>
				<title>Receives the accepted changed state</title>
				<desc>Receives the state change of the acceptance of the connection by the Broker, while also sending an event to the OS</desc>
				<type>activity</type>
				<next>
					<id>9</id>
					<type>event</type>
				</next>
				<name>crypto customer</name>
				<layer>actor network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d36</_id>
				<id>9</id>
				<title>Sends notification to the OS</title>
				<desc>Sends the notification to the OS, to notify the Customer of the state change</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2724268958967c53cfa</upd_at>
		<_id>56e1e2724268958967c53cfb</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Bank Account Restock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2724268958967c53d3f</_id>
				<id>0</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Broker indicates he want to increase  the stock of merchandise in Bank indicating the amount and account concept.</desc>
				<type>activity</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d45</_id>
				<id>1</id>
				<title>Create a Restock Business Transaction</title>
				<desc>Process the request and execute a Bank Money Restock Business Transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Bank Money Restock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d4b</_id>
				<id>2</id>
				<title>CBP-Business Transaction-Bank Money Restock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Bank Money Restock</name>
				</next>
				<name>bank money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d51</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Bank Money Restock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Hold</name>
				</next>
				<name>bank money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d57</_id>
				<id>4</id>
				<title>BNK-Bank Hold Transaction</title>
				<desc>Records the transaction and generates a debit to the Available Balance.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>hold</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d5d</_id>
				<id>5</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and credit records Available</desc>
				<type>activity</type>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2724268958967c53d38</upd_at>
		<_id>56e1e2724268958967c53d39</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Bank Account Destock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2724268958967c53d66</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Bank Money Destock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d6c</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Bank. Then indicates the amount and account concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d72</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Bank Money Destock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d78</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Bank Money Destock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Bank Money Destock</name>
				</next>
				<name>bank money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d7e</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Bank Money Destock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>bank money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d84</_id>
				<id>5</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and debit records Available</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Unhold</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d8a</_id>
				<id>6</id>
				<title>BNK-Bank UnHold Transaction</title>
				<desc>Records the transaction and generates a credit to the Available Balance.</desc>
				<type>activity</type>
				<name>unhold</name>
				<layer>bank money transaction</layer>
				<platfrm>BNK</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2724268958967c53d5f</upd_at>
		<_id>56e1e2724268958967c53d60</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Cash Restock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2724268958967c53d93</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Cash Money Restock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d99</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Cash. Then indicates the amount and concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53d9f</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Cash Money Restock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53da5</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Cash Money Restock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>cash money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53dab</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Cash Money Restock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Hold</name>
				</next>
				<name>cash money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53db1</_id>
				<id>5</id>
				<title>CSH-Bank Hold Transaction</title>
				<desc>Records the transaction and generates a debit to the Available Balance.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Reference Wallet</name>
				</next>
				<name>hold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53db7</_id>
				<id>6</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and credit records Available</desc>
				<type>activity</type>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2724268958967c53d8c</upd_at>
		<_id>56e1e2724268958967c53d8d</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Cash Destock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2724268958967c53dc0</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Cash Money Destock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53dc6</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Cash. Then indicates the amount and concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53dcc</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Cash Money Destock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53dd2</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Cash Money Destock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Cash Money Destock</name>
				</next>
				<name>cash money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53dd8</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Cash Money Destock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>cash money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53dde</_id>
				<id>5</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and debit records Available</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Unhold</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53de3</_id>
				<id>6</id>
				<title>CSH-Cash UnHold Transaction</title>
				<desc>Records the transaction and generates a credit to the Available Balance.</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56e1e2724268958967c53db9</upd_at>
		<_id>56e1e2724268958967c53dba</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Restock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2724268958967c53dec</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Crypto Money Restock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53df2</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Crypto. Then indicates the amount and concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53df8</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Crypto Money Restock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53dfe</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Crypto Money Restock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Crypto Money Restock</name>
				</next>
				<name>crypto money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e04</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Crypto Money Restock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Hold</name>
				</next>
				<name>crypto money restock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e0a</_id>
				<id>5</id>
				<title>CCP-Crypto Hold Transaction</title>
				<desc>Records the transaction and generates a debit to the Available Balance.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>hold</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e0f</_id>
				<id>6</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and credit records Available</desc>
				<type>activity</type>
			</step>
		</steps>
		<upd_at>56e1e2724268958967c53de5</upd_at>
		<_id>56e1e2724268958967c53de6</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto Destock</name>
		<desc></desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2724268958967c53e18</_id>
				<id>0</id>
				<title>Broker declare a new merchandise</title>
				<desc>Start Crypto Money Destock</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e1e</_id>
				<id>1</id>
				<title>CBP-Reference Wallet-Crypto Broker</title>
				<desc>The Crypto Broker indicates that you want to declare an increase in the stock of merchandise Crypto. Then indicates the amount and concept.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e24</_id>
				<id>2</id>
				<title>CBP-Wallet Module-Crypto Broker</title>
				<desc>Transaction processing a Business.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
					<name>Crypto Money Destock</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e2a</_id>
				<id>3</id>
				<title>CBP-Business Transaction-Crypto Money Destock</title>
				<desc>Transaction register</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
					<name>Crypto Money Destock</name>
				</next>
				<name>crypto money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e30</_id>
				<id>4</id>
				<title>CBP-Business Transaction-Cash Money Destock</title>
				<desc>The transactional agent start to review the records according to the transaction status to proceed with the flow.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
					<name>Crypto Broker</name>
				</next>
				<name>crypto money destock</name>
				<layer>stock transactions</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e36</_id>
				<id>5</id>
				<title>CBP-Wallet-Crypto Broker</title>
				<desc>Booked and debit records Available</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
					<name>Unhold</name>
				</next>
				<name>crypto broker</name>
				<layer>wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2724268958967c53e3c</_id>
				<id>6</id>
				<title>CCP-Crypto UnHold Transaction</title>
				<desc>Records the transaction and generates a credit to the Available Balance.</desc>
				<type>activity</type>
				<name>unhold</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2724268958967c53e11</upd_at>
		<_id>56e1e2724268958967c53e12</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Open a Sale Contract</name>
		<desc>Creates and opens a Customer- Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2734268958967c54028</_id>
				<id>0</id>
				<title>Start a Sale Contract beetwen a Broker and a Customer</title>
				<desc>Start a Open Contract Business Transaction.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>user level business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c5402e</_id>
				<id>1</id>
				<title>Gets the Negotiation ID</title>
				<desc>Gets the ID of th closed negotiation.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54034</_id>
				<id>2</id>
				<title>Creates a Open Contract Business Transaction</title>
				<desc>Creates a Open Contract Business Transaction with the closed negotiation data.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>open contract</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c5403a</_id>
				<id>3</id>
				<title>Gets the Negotiation clauses</title>
				<desc>Gets the Clauses associated to the ID of the closed negotiation.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>negotiation</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54040</_id>
				<id>4</id>
				<title>Creates a new Contract Record</title>
				<desc>Creates a new Contract Record with the Negotiation data.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>open contract</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54046</_id>
				<id>5</id>
				<title>Creates a new Customer Broker Sale Contract</title>
				<desc>Creates a new Customer Broker Sale Contract with the negotiation data.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c5404c</_id>
				<id>6</id>
				<title>Sends Contract Hash to a Crypto Customer</title>
				<desc>Sends the contract hash to a Crypto Customer, this hash will use as the contract Id</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54052</_id>
				<id>7</id>
				<title>Gets the Crypto Customer Confirmation</title>
				<desc>Raises an event with the Crypto Customer Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54058</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to pending payment.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2734268958967c54021</upd_at>
		<_id>56e1e2734268958967c54022</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer sends an Online Payment</name>
		<desc>Customer sends an Online Payment to a Crypto Broker; this payment is associated to a Customer Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2734268958967c54061</_id>
				<id>0</id>
				<title>Customer sends online payment</title>
				<desc>Customer select a contract and send a payment.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54067</_id>
				<id>1</id>
				<title>Process Payment Request</title>
				<desc>Process request and starts the payment process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c5406d</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54073</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Online Payment Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54079</_id>
				<id>4</id>
				<title>Sends the Online Payment</title>
				<desc>Sends the Online Payment to a Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c5407f</_id>
				<id>5</id>
				<title>Verifies the Transaction Status</title>
				<desc>Verifies the Crypto Status until this is confirmed.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54085</_id>
				<id>6</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the payment was submitted.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>customer online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c5408b</_id>
				<id>7</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c54096</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to submit payment.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2734268958967c5405a</upd_at>
		<_id>56e1e2734268958967c5405b</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Customer sends an Offline Payment</name>
		<desc>Customer sends an Offline Payment to a Crypto Broker, this payment is associated to a Customer Broker Purchase Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2734268958967c5409f</_id>
				<id>0</id>
				<title>Customer sends offline payment</title>
				<desc>Customer select a contract and send payment.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540a5</_id>
				<id>1</id>
				<title>Process Payment Request</title>
				<desc>Process request and starts the payment process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto customer</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540ab</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540b1</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Offline Payment Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>customer offline payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540b7</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the payment was submitted.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>customer offline payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540bd</_id>
				<id>5</id>
				<title>Sends Payment Notification to Crypto Broker</title>
				<desc>Sends the sucessful payment notification to Crypto Broker.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540c3</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540c9</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to payment submit.</desc>
				<type>end</type>
				<name>customer broker purchase</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2734268958967c54098</upd_at>
		<_id>56e1e2734268958967c54099</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Broker Acknowledge Online Payment</name>
		<desc>Broker receive an Online Payment from a Crypto Customer, this payment is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2734268958967c540d2</_id>
				<id>0</id>
				<title>Incoming an Online payment</title>
				<desc>Raise an event when incoming an online payment</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>customer online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540d8</_id>
				<id>1</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Customer Online Payment Business Transaction with the payment associated to a contract data.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>broker ack online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540de</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540e4</_id>
				<id>3</id>
				<title>Listen an incoming money event</title>
				<desc>Listen an incoming money event that indicates that a online transaction is complete.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>incoming intra user</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540ea</_id>
				<id>4</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate an incoming payment.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>broker ack online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540f0</_id>
				<id>5</id>
				<title>Sends Acknowledge Payment Notification to Crypto Customer</title>
				<desc>Sends the successful Acknowledge payment notification to Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540f6</_id>
				<id>6</id>
				<title>Gets the Crypto Broker Confirmation</title>
				<desc>Raises an event with the Crypto Broker Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2734268958967c540fc</_id>
				<id>7</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to pending merchandise.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2734268958967c540cb</upd_at>
		<_id>56e1e2734268958967c540cc</_id>
	</proc>
	<proc>
		<platfrm>CBP</platfrm>
		<name>Crypto broker submits an Online Merchandise</name>
		<desc>Crypto Broker submits an Online merchandise to a Customer, this merchandise is associated to a Customer Broker Sale Contract.</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2744268958967c54138</_id>
				<id>0</id>
				<title>Cryto Broker submits online merchandise</title>
				<desc>Crypto Broker selects a contract and submits merchandise.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>reference wallet</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5413e</_id>
				<id>1</id>
				<title>Process Payment Request</title>
				<desc>Process request and starts the submit process.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto broker</name>
				<layer>wallet module</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54144</_id>
				<id>2</id>
				<title>Gets the Contract clauses</title>
				<desc>Gets the Contract clauses associated to a open contract.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5414a</_id>
				<id>3</id>
				<title>Creates a Business Transaction</title>
				<desc>Creates a Broker Submit Online Merchandise Business Transaction with the contract data.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>broker submit online merchandise</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54150</_id>
				<id>4</id>
				<title>Submit the Online Merchandise</title>
				<desc>Submit the Online Merchandise to a Crypto Customer.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54156</_id>
				<id>5</id>
				<title>Verifies the Transaction Status</title>
				<desc>Verifies the Crypto Status until this is confirmed.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5415c</_id>
				<id>6</id>
				<title>Update the Transaction Contract Status</title>
				<desc>Update the Transaction Contract status to indicate that the merchandise is submitted.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>customer online payment</name>
				<layer>business transaction</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c54162</_id>
				<id>7</id>
				<title>Gets the Crypto Customer Confirmation</title>
				<desc>Raises an event with the Crypto Customer Confirmation.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>transaction transmission</name>
				<layer>network service</layer>
				<platfrm>CBP</platfrm>
			</step>
			<step>
				<_id>56e1e2744268958967c5416d</_id>
				<id>8</id>
				<title>Update the Contract Status</title>
				<desc>Update the Contract status to submit merchandise.</desc>
				<type>end</type>
				<name>customer broker sale</name>
				<layer>contract</layer>
				<platfrm>CBP</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2744268958967c54131</upd_at>
		<_id>56e1e2744268958967c54132</_id>
	</proc>
	<proc>
		<platfrm>CSH</platfrm>
		<name>Unhold</name>
		<desc>Unholds (increments available balance) an amount of cash money from the cash wallet</desc>
		<prev></prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c5439b</_id>
				<id>0</id>
				<title>External plugin requests am unhold of the funds from the cash wallet</title>
				<desc>For this, it sends a transaction UUID, an amount, a memo, and its own public key</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c543a1</_id>
				<id>1</id>
				<title>Receives unhold transaction request</title>
				<desc>Registers unhold transaction internally as an ACKNOWLEDGED transaction</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>unhold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c543a7</_id>
				<id>2</id>
				<title>Internal agent processes unhold transaction request</title>
				<desc>Tries to unhold funds in wallet, if succeded, changes internal status to CONFIRMED, otherwise REJECTED</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>unhold</name>
				<layer>cash money transaction</layer>
				<platfrm>CSH</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c543ad</_id>
				<id>3</id>
				<title>Tries to unhold available funds</title>
				<desc>Processes the unhold request by making a debit on the available balance of the cash wallet</desc>
				<type>activity</type>
				<name>cash money</name>
				<layer>wallet</layer>
				<platfrm>CSH</platfrm>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c54397</upd_at>
		<_id>56e1e2754268958967c54398</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Send Payment Request to Intra user</name>
		<desc>A Wallet&apos;s Intra User sends a payment request to another intra user contact to request payment for a specific amount.</desc>
		<prev>List Wallet Contacts</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c543ee</_id>
				<id>0</id>
				<title>Select Intra User contact and submit payment request</title>
				<desc>The customer selects a contact from the list and submits the payment request.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c543f4</_id>
				<id>1</id>
				<title>Route Send to Outgoing Intra Actor Plugin</title>
				<desc>The module routes this crypto send to the Outgoing Intra Actor Plugin to send the actor selected.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c543f9</_id>
				<id>2</id>
				<title>Send metadata to network service</title>
				<desc>The Outgoing Intra Actor plugin routes the send metadata to the network service to send payment information to actor selected.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c543ff</_id>
				<id>3</id>
				<title>Call the intra user to deliver the payment request</title>
				<desc>The network service places a call to the intra user and then it delivers the payment request via the Fermat network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54404</_id>
				<id>4</id>
				<title>Transport request</title>
				<desc>The payment request is transported through the communication layer and one of the available channels.</desc>
				<type>communication</type>
				<next>
					<id>5</id>
					<type>fermat message</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c5440a</_id>
				<id>5</id>
				<title>Receive the payment request</title>
				<desc>The network service receives the payment request and informs that to Request Crypto Payment Plugin.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>event</type>
				</next>
				<name>crypto payment request</name>
				<layer>network service</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54410</_id>
				<id>6</id>
				<title>Records the request</title>
				<desc>The payment request is saved with the type received and associated to intra user actor .</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>crypto payment</name>
				<layer>request</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c54416</_id>
				<id>7</id>
				<title>Return payment request list</title>
				<desc>The module returns the payement request receive list.</desc>
				<type>activity</type>
				<next>
					<id>8</id>
					<type>direct call</type>
				</next>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>56e1e2754268958967c5441b</_id>
				<id>8</id>
				<title>List Received Payment Request</title>
				<desc>The wallet&apos;s user go to Payment Request menu and list payment request receive.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c543e8</upd_at>
		<_id>56e1e2754268958967c543e9</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Open the Intra Wallet Community Connections</name>
		<desc>List all connected users.</desc>
		<prev>Open Intra Wallet Community</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c544b9</_id>
				<id>0</id>
				<title>Start </title>
				<desc>The user opens the Community Connections and the fragment proceeds to initialize all required components.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544be</_id>
				<id>1</id>
				<title>Processing the requested list </title>
				<desc>The module routes the requested list to the IntraWalletUser plugin.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544c3</_id>
				<id>2</id>
				<title>Routing the requested list.</title>
				<desc>The plugin routes the request to the IntraWalletUserDao.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544c6</_id>
				<id>3</id>
				<title>Processing the list</title>
				<desc>The list is retrived from the DB and send back to the plugin.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544cb</_id>
				<id>4</id>
				<title>Getting the list of connected users.</title>
				<desc>The plugin send the request back to the module.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544d0</_id>
				<id>5</id>
				<title>Sends the list back to the view</title>
				<desc>The module routes the requested list to the fragment.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544d3</_id>
				<id>6</id>
				<title>Display list of users</title>
				<desc>The fragment displays the list of connected users.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c544b5</upd_at>
		<_id>56e1e2754268958967c544b6</_id>
	</proc>
	<proc>
		<platfrm>CCP</platfrm>
		<name>Open Intra Wallet Community Requested Connections</name>
		<desc>List all users pending for acceptance.</desc>
		<prev>Open Intra Wallet Community</prev>
		<next></next>
		<steps>
			<step>
				<_id>56e1e2754268958967c544d9</_id>
				<id>0</id>
				<title>Start </title>
				<desc>The user opens the Community Request Connections and the fragment proceeds to initialize all required components.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544de</_id>
				<id>1</id>
				<title>Processing the requested list of users pending for acceptance. </title>
				<desc>The module routes the requested list to the IntraWalletUserActor plugin.</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544e3</_id>
				<id>2</id>
				<title>Routing the requested list.</title>
				<desc>The plugin routes the request to the IntraWalletUserDao.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544e6</_id>
				<id>3</id>
				<title>Processing the list</title>
				<desc>The list is retrived from the DB and send back to the plugin.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544eb</_id>
				<id>4</id>
				<title>Getting the list of connected users.</title>
				<desc>The plugin send the request back to the module.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544f0</_id>
				<id>5</id>
				<title>Sends the list back to the view</title>
				<desc>The module routes the requested list to the fragment.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
			</step>
			<step>
				<_id>56e1e2754268958967c544f3</_id>
				<id>6</id>
				<title>Display the list of users. </title>
				<desc>The fragment displays the list of users pending for acceptance.</desc>
				<type>end</type>
			</step>
		</steps>
		<upd_at>56e1e2754268958967c544d5</upd_at>
		<_id>56e1e2754268958967c544d6</_id>
	</proc>
	<proc>
		<platfrm>PIP</platfrm>
		<name>Probando WorkFlow</name>
		<desc>Prueba de Workflow</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56f160eb301492726c7fe2a7</_id>
				<id>0</id>
				<title>Este es el paso 1</title>
				<desc>Este es la descripcion del paso 1</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fermat core</name>
				<layer>core</layer>
				<platfrm>COR</platfrm>
			</step>
			<step>
				<_id>56f160ec301492726c7fe2ad</_id>
				<id>1</id>
				<title>Paso 2</title>
				<desc>Este es el paso 2</desc>
				<type>start</type>
				<name>fermat api</name>
				<layer>api</layer>
				<platfrm>COR</platfrm>
			</step>
		</steps>
		<upd_at>56f16337301492726c802a95</upd_at>
		<_id>56f160e8301492726c7fe29f</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Delete song</name>
		<desc>The user wants to delete a song.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d6f005e22a239818a9</_id>
				<id>0</id>
				<title>User request to delete a song.</title>
				<desc>The user makes a deleting request in the view element that represents the song to delete.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fan wallet</name>
				<layer>reference wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818ad</_id>
				<id>1</id>
				<title>Request to delete a song.</title>
				<desc>Performs the request to delete the song from the device storage</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet Module</name>
				<layer>wallet module</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818b0</_id>
				<id>2</id>
				<title>Requesto to delete a song from device storage.</title>
				<desc>Check that the song is available and proceeds to request the song to be deleted</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818b6</_id>
				<id>3</id>
				<title>Delete the requested song file.</title>
				<desc>Deletes the file corresponding the song the user wants to delete.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>file system</name>
				<layer>multi os</layer>
				<suprlay>OSA</suprlay>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818b9</_id>
				<id>4</id>
				<title>Set the song status in database.</title>
				<desc>Song status is change to deleted.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818bd</_id>
				<id>5</id>
				<title>Update the songs tab.</title>
				<desc>The view is updated with the new status of the song.</desc>
				<type>activity</type>
				<name>Fan Wallet Module</name>
				<layer>wallet module</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>5705646a6dee529b2dbfc5b5</upd_at>
		<_id>56fa81d6f005e22a239818a5</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Create Fan identity</name>
		<desc>A Fanatic creates a fan identity in Tokenly platform.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d6f005e22a23981901</_id>
				<id>0</id>
				<title>The user submit the data to create the Fan identity.</title>
				<desc>Includes the data to create an identity.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a23981905</_id>
				<id>1</id>
				<title>Send the fanatic data.</title>
				<desc>Sends acces data to Tokenly to verify the access data</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a23981909</_id>
				<id>2</id>
				<title>Request user verification</title>
				<desc>Sends the necessary data to check a Tokenly user</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a2398190c</_id>
				<id>3</id>
				<title>Request to the Tokenly API the user verification</title>
				<desc>Checks with the public API if the user data is correct.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a23981910</_id>
				<id>4</id>
				<title>Create the identity.</title>
				<desc>With authenticated data, proceeds to create the new identity.</desc>
				<type>activity</type>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>570683c76dee529b2dc0478c</upd_at>
		<_id>56fa81d6f005e22a239818fd</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Play a song</name>
		<desc>The user wants to play a available song.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a23981929</_id>
				<id>0</id>
				<title>The user presses a song element.</title>
				<desc>A song in the setlist is pressed.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a2398192d</_id>
				<id>1</id>
				<title>Request the available song.</title>
				<desc>Request the necessary data to play the song</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981930</_id>
				<id>2</id>
				<title>Get the song local storage path</title>
				<desc>Search the file path corresponding the song in database</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981936</_id>
				<id>3</id>
				<title>Open the song file</title>
				<desc>The requested file is opened and its contents is obtained.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>file system</name>
				<layer>multi os</layer>
				<suprlay>OSA</suprlay>
			</step>
			<step>
				<_id>56fa81d7f005e22a2398193a</_id>
				<id>4</id>
				<title>Update the view</title>
				<desc>Submit the data to pla the song and updates the view</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a2398193e</_id>
				<id>5</id>
				<title>Play the song</title>
				<desc>Play the song provided</desc>
				<type>activity</type>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>5706714e6dee529b2dc03d7c</upd_at>
		<_id>56fa81d7f005e22a23981925</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Create Fan identity</name>
		<desc>An artist creates a Fan identity in Artist platform.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a23981954</_id>
				<id>0</id>
				<title>The user submit the data to create the Fan identity.</title>
				<desc>Includes the data to create an identity.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981958</_id>
				<id>1</id>
				<title>Send the Fan data.</title>
				<desc>Send the necessary data to create the identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a2398195c</_id>
				<id>2</id>
				<title>Create the identity.</title>
				<desc>The Fan Identity is persisted.</desc>
				<type>activity</type>
				<name>fan</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>5706728a6dee529b2dc03ddb</upd_at>
		<_id>56fa81d7f005e22a23981950</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>List Artists identities in external systems</name>
		<desc>The artist list the available external platforms identities.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a23981989</_id>
				<id>0</id>
				<title>List external platforms identities.</title>
				<desc>The user request the list of available external identities.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a2398198d</_id>
				<id>1</id>
				<title>Request the external identities.</title>
				<desc>Request the identity created in the external platform</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981991</_id>
				<id>2</id>
				<title>Submit external platform identities list.</title>
				<desc>Returns the list of identities created in external platforms registered in the Fan Identity.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981995</_id>
				<id>3</id>
				<title>Provides the identities list.</title>
				<desc>The identities list is returned.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981999</_id>
				<id>4</id>
				<title>Show the identities list.</title>
				<desc>Shows the external platform identities list.</desc>
				<type>activity</type>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>570674946dee529b2dc03e3e</upd_at>
		<_id>56fa81d7f005e22a23981985</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Link Artist Identity to an account in an external system</name>
		<desc>The artist makes a connection with external platforms identities.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a239819a0</_id>
				<id>0</id>
				<title>Select an external platforms identity.</title>
				<desc>The user selects an element of external identities list displayed on the view.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819a4</_id>
				<id>1</id>
				<title>Request link with external platform identity.</title>
				<desc>Requests to persist the selected identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819a8</_id>
				<id>2</id>
				<title>The Artist identity is updated.</title>
				<desc>The Artist identity perists the external platform identity in database.</desc>
				<type>activity</type>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>5706759f6dee529b2dc03e67</upd_at>
		<_id>56fa81d7f005e22a2398199c</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Link Fan Identity to an account in an external system</name>
		<desc>The fanatic makes a connection with external platforms identities.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a239819af</_id>
				<id>0</id>
				<title>Select an external platforms identity.</title>
				<desc>The user selects an element of external identities list displayed on the view.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819b3</_id>
				<id>1</id>
				<title>Request link with external platform identity.</title>
				<desc>Requests to persist the selected identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819b7</_id>
				<id>2</id>
				<title>The Fan identity is updated.</title>
				<desc>The Fan identity perists the external platform identity in database.</desc>
				<type>activity</type>
				<name>fan</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>570675ef6dee529b2dc03e84</upd_at>
		<_id>56fa81d7f005e22a239819ab</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>View Artist profile</name>
		<desc>The Artist community user want to see the artist associated profile.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a239819be</_id>
				<id>0</id>
				<title>Select an artist picture.</title>
				<desc>The user presses the image of the artist to see the associated profile.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819c2</_id>
				<id>1</id>
				<title>Request the artist profile.</title>
				<desc>Request the profile of the selected artist identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819c6</_id>
				<id>2</id>
				<title>Provide the selected artist profile.</title>
				<desc>The artist profile is get from database.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819ca</_id>
				<id>3</id>
				<title>Provides the profile data.</title>
				<desc>The identities profile data is returned.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819ce</_id>
				<id>4</id>
				<title>Show the artist profile.</title>
				<desc>Shows the identities profile.</desc>
				<type>activity</type>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>570676b86dee529b2dc03ea1</upd_at>
		<_id>56fa81d7f005e22a239819ba</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Request list of Fan identities</name>
		<desc>The user get in the Fan Community screen.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a239819ec</_id>
				<id>0</id>
				<title>Request the fan actors availables.</title>
				<desc>Request the module the list of fan identities.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fan community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819f0</_id>
				<id>1</id>
				<title>Request the artist list.</title>
				<desc>Request a list of available fan identities</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>fan community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819f4</_id>
				<id>2</id>
				<title>Provide the fan list.</title>
				<desc>Provides the list of fan Identities.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>fan</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819f8</_id>
				<id>3</id>
				<title>Submit the fan list.</title>
				<desc>The fan list is returned to update the view.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>fan community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819fc</_id>
				<id>4</id>
				<title>Show the fan list.</title>
				<desc>The view is updated with the available fan identities.</desc>
				<type>activity</type>
				<name>fan community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>570677c66dee529b2dc03ef3</upd_at>
		<_id>56fa81d7f005e22a239819e8</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>The fan to artist connection request  is not accepted</name>
		<desc>The artist sees a connection request and rejects it.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a23981a41</_id>
				<id>0</id>
				<title>Register the denial of a connection.</title>
				<desc>A request connection request is selected to reject it.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a45</_id>
				<id>1</id>
				<title>Submit request rejection.</title>
				<desc>Route the rejection to notify to the connection petitioner</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a49</_id>
				<id>2</id>
				<title>Send rejection to a remote device.</title>
				<desc>Send the connection rejection to a remote device.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a4d</_id>
				<id>3</id>
				<title>Route the connection rejection to a remote device.</title>
				<desc>Route the connection rejection to a remote device through the P2P network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a51</_id>
				<id>4</id>
				<title>Receive the connection rejection.</title>
				<desc>Receive a message with the connection rejection.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a55</_id>
				<id>5</id>
				<title>Send notification to OS.</title>
				<desc>Raises an event indicating the arrival of a new connection rejection.</desc>
				<type>activity</type>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>57067b5b6dee529b2dc03f86</upd_at>
		<_id>56fa81d7f005e22a23981a3d</_id>
	</proc>
	<proc>
		<platfrm>CHT</platfrm>
		<name>Identity</name>
		<desc>pending</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fda6dfc5031371630ead3b</_id>
				<id>0</id>
				<title>Paso 1</title>
				<desc>Paso 1 bla, bla</desc>
				<type>start</type>
				<name>chat</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
			<step>
				<_id>56fda6e0c5031371630ead41</_id>
				<id>1</id>
				<title>Paso 2</title>
				<desc>Paso 2</desc>
				<type>start</type>
				<name>chat</name>
				<layer>sub app</layer>
				<platfrm>CHT</platfrm>
			</step>
		</steps>
		<upd_at>56fda6dec5031371630ead32</upd_at>
		<_id>56fda6dec5031371630ead33</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Browse to the site of the Artist</name>
		<desc>The user select an artist list element to browse to its web site.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d6f005e22a239818d7</_id>
				<id>0</id>
				<title>Select an artist element.</title>
				<desc>The list item representing the artist is pressed.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fan wallet</name>
				<layer>reference wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818db</_id>
				<id>1</id>
				<title>Request the artist website URL.</title>
				<desc>The URL to the artist site is requested</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet Module</name>
				<layer>wallet module</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818de</_id>
				<id>2</id>
				<title>Request the URL to the artist site to Tokenly API.</title>
				<desc>Request to the Tokenly external API the URL belonging to the artist in Tokenly Swapbot</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818e1</_id>
				<id>3</id>
				<title>Updates the view with the connected artist.</title>
				<desc>Gets the URL of the selected artist and updates view.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet Module</name>
				<layer>wallet module</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818e4</_id>
				<id>4</id>
				<title>Browse to the artist site.</title>
				<desc>Opens the default browser of the device with the URL of the artist.</desc>
				<type>activity</type>
				<name>fan wallet</name>
				<layer>reference wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>570566e16dee529b2dbfcce2</upd_at>
		<_id>56fa81d6f005e22a239818d3</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Sync songs manually with External System</name>
		<desc>A Tokenly wallet user request a synchronization with a external platform.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d6f005e22a23981867</_id>
				<id>0</id>
				<title>User request a sync from tab songs.</title>
				<desc>The user proceeds to request the synchronization list of songs</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fan wallet</name>
				<layer>reference wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a2398186b</_id>
				<id>1</id>
				<title>Request the Tokenly tokens owned by the user.</title>
				<desc>The Fan Wallet Module requests information from the tokens associated with the identity of the user to the external system</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet Module</name>
				<layer>wallet module</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a2398186e</_id>
				<id>2</id>
				<title>Request the Tokenly tokens owned by the user to external platform.</title>
				<desc>Request Tokenly API the tokens associated with the Tokenly identity</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a23981871</_id>
				<id>3</id>
				<title>Request the tokens owned by the user to Tokenly music manager public API.</title>
				<desc>Asks Tokenly public API (external) the information available of the associated tokens with the Tokenly identity.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a23981874</_id>
				<id>4</id>
				<title>Download the missing songs.</title>
				<desc>Proceed to download the songs not present on the device.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a2398187a</_id>
				<id>5</id>
				<title>Persist songs on device storage.</title>
				<desc>Downloaded songs are persisted in the local storage.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>file system</name>
				<layer>multi os</layer>
				<suprlay>OSA</suprlay>
			</step>
			<step>
				<_id>56fa81d6f005e22a2398187d</_id>
				<id>6</id>
				<title>Set the song status in database.</title>
				<desc>Song status is change to available.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a23981881</_id>
				<id>7</id>
				<title>Update the songs tab.</title>
				<desc>The list of available songs is received and updates the view.</desc>
				<type>activity</type>
				<name>fermat core</name>
				<layer>core</layer>
				<platfrm>COR</platfrm>
			</step>
		</steps>
		<upd_at>570561c46dee529b2dbfbe3c</upd_at>
		<_id>56fa81d6f005e22a23981863</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Break</name>
		<desc>Describes the process of breaking an asset. Which is getting the bitcoins of the asset.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>570563826dee529b2dbfbe97</_id>
				<id>0</id>
				<title>Start</title>
				<desc>DAP Actor selects asset to break</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>asset user</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570563826dee529b2dbfbe9d</_id>
				<id>1</id>
				<title>Break Transaction starts</title>
				<desc>We start the transaction controller</desc>
				<type>start</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Asset Break</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570566356dee529b2dbfccb3</_id>
				<id>2</id>
				<title>Asset Blocked</title>
				<desc>Asset is not available until the end of the transaction</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
			</step>
			<step>
				<_id>570566366dee529b2dbfccb9</_id>
				<id>3</id>
				<title>DAP Transaction started</title>
				<desc>We start the DAP Transaction</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
				<name>Asset Break</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570566366dee529b2dbfccc3</_id>
				<id>4</id>
				<title>Intra User selected</title>
				<desc>We create or get the intra user of the BTC Wallet</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>5</id>
				</next>
				<name>intra user</name>
				<layer>module</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>570566376dee529b2dbfccc9</_id>
				<id>5</id>
				<title>BTC Transaction created</title>
				<desc>The BTC Transaction is created and published on CryptoNetwork.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>6</id>
				</next>
				<name>asset outgoing crypto</name>
				<layer>crypto transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570566376dee529b2dbfcccf</_id>
				<id>6</id>
				<title>Incoming Crypto Detected by Wallet</title>
				<desc>BTCs from the asset to the wallet detected and balance updated.</desc>
				<type>start</type>
				<name>incoming intra user</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>570566386dee529b2dbfccd5</_id>
				<id>7</id>
				<title>Asset sent confirmed</title>
				<desc>The outgoing transaction is confirmed, so book balance is updated.</desc>
				<type>start</type>
				<name>asset outgoing crypto</name>
				<layer>crypto transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>570566326dee529b2dbfcc9e</upd_at>
		<_id>570563816dee529b2dbfbe8f</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Restore deleted song</name>
		<desc>The user wants to restore a deleted song.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d6f005e22a23981888</_id>
				<id>0</id>
				<title>User request to restore a deleted song.</title>
				<desc>When pressing the list item that represents the song that is not available on the device</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fan wallet</name>
				<layer>reference wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a2398188c</_id>
				<id>1</id>
				<title>Request the deleted song.</title>
				<desc>Request to restore the deleted song to the Tokenly Song Wallet</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet Module</name>
				<layer>wallet module</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a2398188f</_id>
				<id>2</id>
				<title>Request the song download URL.</title>
				<desc>Request to the Tokenly API the download URL of the requested song</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a23981892</_id>
				<id>3</id>
				<title>Request the song download URL to the Tokenly public API.</title>
				<desc>Request to the public Tokenly API (external) the download URL</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a23981895</_id>
				<id>4</id>
				<title>Download the requested song.</title>
				<desc>Starts the process of downloading song.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a2398189b</_id>
				<id>5</id>
				<title>Persist songs on device storage.</title>
				<desc>Downloaded songs are persisted in the local storage.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>file system</name>
				<layer>multi os</layer>
				<suprlay>OSA</suprlay>
			</step>
			<step>
				<_id>56fa81d6f005e22a2398189e</_id>
				<id>6</id>
				<title>Set the song status in database.</title>
				<desc>Song status is change to available.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818a2</_id>
				<id>7</id>
				<title>Update the songs tab.</title>
				<desc>The view is updated with the new status of the song.</desc>
				<type>activity</type>
				<name>Fan Wallet Module</name>
				<layer>wallet module</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>570563aa6dee529b2dbfc57a</upd_at>
		<_id>56fa81d6f005e22a23981884</_id>
	</proc>
	<proc>
		<platfrm>TKY</platfrm>
		<name>Synchronize list of connected Artist identities</name>
		<desc>The user wants to get the connected artists list.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d6f005e22a239818c4</_id>
				<id>0</id>
				<title>Enter to Following tab.</title>
				<desc>Request the list of connected artists to the user.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>fan wallet</name>
				<layer>reference wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818c8</_id>
				<id>1</id>
				<title>Request the connected artist list.</title>
				<desc>Request the connection information associated with the fan identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Wallet Module</name>
				<layer>wallet module</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818cc</_id>
				<id>2</id>
				<title>Return the Artis connected list.</title>
				<desc>Fan identity provides the list of the artist linked to this identity</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a239818d0</_id>
				<id>3</id>
				<title>Updates the view with the connected artist.</title>
				<desc>Gets the list of connected artists and updates the view.</desc>
				<type>activity</type>
				<name>Fan Wallet Module</name>
				<layer>wallet module</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>570564d16dee529b2dbfcc5e</upd_at>
		<_id>56fa81d6f005e22a239818c0</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>List available songs</name>
		<desc>A Fanatic wants to list the available songs in the device.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d6f005e22a23981917</_id>
				<id>0</id>
				<title>The user opens the Music player.</title>
				<desc>Request the list of available songs.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a2398191b</_id>
				<id>1</id>
				<title>Request the available songs from external platforms.</title>
				<desc>Request to the External API the list of available songs in the device</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a2398191e</_id>
				<id>2</id>
				<title>Get the available songs list</title>
				<desc>Search in the database the available songs</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>Tokenly</name>
				<layer>song wallet</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d6f005e22a23981922</_id>
				<id>3</id>
				<title>Updates the Music player view</title>
				<desc>Organizes the information received and updates the view.</desc>
				<type>activity</type>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>57056dd86dee529b2dbfdaaf</upd_at>
		<_id>56fa81d6f005e22a23981913</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Multi Transaction Asset Issuing</name>
		<desc>Describes the process of issuing assets using multi bitcoin transations</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>570595f56dee529b2dc01142</_id>
				<id>0</id>
				<title>Start</title>
				<desc>Issuer defines asset properties and publish result-.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>asset factory</name>
				<layer>sub app</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570595f56dee529b2dc01148</_id>
				<id>1</id>
				<title>Asset Issuing Transaction starts</title>
				<desc>Transaction starts.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<name>Multi Transaction Asset Issuing</name>
				<layer>digital asset transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570595f56dee529b2dc0114e</_id>
				<id>2</id>
				<title>Genesis address generated</title>
				<desc>Genesis Address delivered by asset vault</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<name>assets over bitcoin</name>
				<layer>crypto vault</layer>
				<suprlay>BCH</suprlay>
			</step>
			<step>
				<_id>570595f66dee529b2dc01154</_id>
				<id>3</id>
				<title>Asset Metadata stored</title>
				<desc>metadata stored for asset</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
				<name>digital asset metadata</name>
				<layer>metadata</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570595f66dee529b2dc0115a</_id>
				<id>4</id>
				<title>Genesis Address created</title>
				<desc>Genesis address created and sent to broadcast.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>5</id>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>570595f76dee529b2dc01160</_id>
				<id>5</id>
				<title>Transaction broadcasted</title>
				<desc>Transaction broadcasted by peers</desc>
				<type>start</type>
				<next>
					<type>event</type>
					<id>6</id>
				</next>
				<next>
					<type>direct call</type>
					<id>9</id>
				</next>
				<name>bitcoin</name>
				<layer>crypto network</layer>
				<suprlay>BCH</suprlay>
			</step>
			<step>
				<_id>570595f76dee529b2dc01166</_id>
				<id>6</id>
				<title>Incoming Asset</title>
				<desc>Transaction detected on network for specific asset</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>7</id>
				</next>
				<name>asset incoming crypto</name>
				<layer>crypto transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570595f86dee529b2dc0116c</_id>
				<id>7</id>
				<title>Asset Confirmed</title>
				<desc>When transaction is confimed, asset is confirmed.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>8</id>
				</next>
				<name>asset issuer</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570595f86dee529b2dc01172</_id>
				<id>8</id>
				<title>Stats updated</title>
				<desc>Statistics stored for this asset</desc>
				<type>start</type>
				<name>asset issuing</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570595f96dee529b2dc01178</_id>
				<id>9</id>
				<title>Outgoing Bitcoins</title>
				<desc>Outgoing transaction is on blockchain.
Wallet debit is executed</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>10</id>
				</next>
				<name>outgoing intra actor</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>570595f96dee529b2dc0117e</_id>
				<id>10</id>
				<title>BTC wallet updated</title>
				<desc>Transaction is confirmed. Bitcoins are gone.</desc>
				<type>start</type>
				<name>crypto wallet</name>
				<layer>wallet module</layer>
				<platfrm>CCP</platfrm>
			</step>
		</steps>
		<upd_at>570595f46dee529b2dc01139</upd_at>
		<_id>570595f46dee529b2dc0113a</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Statistics</name>
		<desc>Describes the process of collecting and sending to the Asset Issuer the statistics of transaction</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>5705cac36dee529b2dc02f23</_id>
				<id>0</id>
				<title>Stats collected for Asset Transfer</title>
				<desc>Stats are collected for Asset Transfer transactions</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>asset transfer</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5705cac46dee529b2dc02f29</_id>
				<id>1</id>
				<title>Stats collected for Asset Swap</title>
				<desc>Stats are collected for Asset Swap transactions</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<name>asset swap</name>
				<layer>statistic collector</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5705cac46dee529b2dc02f2f</_id>
				<id>2</id>
				<title>Stats agregated periodically</title>
				<desc>Stats for Asset Issuer are prepared</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<name>asset issuer</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5705cac56dee529b2dc02f35</_id>
				<id>3</id>
				<title>Asset Issuer Stats sent to issuer</title>
				<desc>Asset Issuer owner of Assets.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
				<name>asset issuer</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5705cac56dee529b2dc02f3b</_id>
				<id>4</id>
				<title>Stats sent over P2P</title>
				<desc>Stats sent to Asset Issuer with a predefined amount of retries.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>5</id>
				</next>
				<name>statistics</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5705cac66dee529b2dc02f41</_id>
				<id>5</id>
				<title>Stats received by Issuer</title>
				<desc>Statistics are recevied</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>6</id>
				</next>
				<name>statistics</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5705cac66dee529b2dc02f47</_id>
				<id>6</id>
				<title>Stats are aggregated at issuer</title>
				<desc>Sumary of stats for Assets is created</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>7</id>
				</next>
				<name>asset issuer</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5705cac66dee529b2dc02f4d</_id>
				<id>7</id>
				<title>Stats are showed at wallet.</title>
				<desc>Stats are showed at wallet-.</desc>
				<type>start</type>
				<name>asset issuer</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>5705cac26dee529b2dc02f1a</upd_at>
		<_id>5705cac26dee529b2dc02f1b</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Create Artist identity</name>
		<desc>An artist creates a Artist identity in Artist platform.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a23981945</_id>
				<id>0</id>
				<title>The user submit the data to create the Artist identity.</title>
				<desc>Includes the data to create an identity.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981949</_id>
				<id>1</id>
				<title>Send the artist data.</title>
				<desc>Send the necessary data to create the identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>music player</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a2398194d</_id>
				<id>2</id>
				<title>Create the identity.</title>
				<desc>The Artist Identity is persisted.</desc>
				<type>activity</type>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>5706723b6dee529b2dc03dcd</upd_at>
		<_id>56fa81d7f005e22a23981941</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Artist accepts all connections</name>
		<desc>The artist indicates that accepts all connections requested by fans.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a23981963</_id>
				<id>0</id>
				<title>The user set the acceptance of all fans requested connections.</title>
				<desc>Change the status of accepting all connections.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981967</_id>
				<id>1</id>
				<title>Request to update the Identity.</title>
				<desc>Sends the change to the Artist Identity plugin</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a2398196b</_id>
				<id>2</id>
				<title>Update identity.</title>
				<desc>Updates the information in the database.</desc>
				<type>activity</type>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>570672fd6dee529b2dc03df8</upd_at>
		<_id>56fa81d7f005e22a2398195f</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>List Fan identities in external systems</name>
		<desc>The fan list the available external platforms identities.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a23981972</_id>
				<id>0</id>
				<title>List external platforms identities.</title>
				<desc>The user request the list of available external identities.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981976</_id>
				<id>1</id>
				<title>Request the external identities.</title>
				<desc>Request the identity created in the external platform</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a2398197a</_id>
				<id>2</id>
				<title>Submit external platform identities list.</title>
				<desc>Returns the list of identities created in external platforms registered in the Fan Identity.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a2398197e</_id>
				<id>3</id>
				<title>Provides the identities list.</title>
				<desc>The identities list is returned.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981982</_id>
				<id>4</id>
				<title>Show the identities list.</title>
				<desc>Shows the external platform identities list.</desc>
				<type>activity</type>
				<name>Fan Identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>570673ef6dee529b2dc03e15</upd_at>
		<_id>56fa81d7f005e22a2398196e</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Request list of Artist identities</name>
		<desc>The user get in the Artist Community screen.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a239819d5</_id>
				<id>0</id>
				<title>Request the artist actors availables.</title>
				<desc>Request the module the list of artist identities.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819d9</_id>
				<id>1</id>
				<title>Request the artist list.</title>
				<desc>Request a list of available artist identities</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819dd</_id>
				<id>2</id>
				<title>Provide the artist list.</title>
				<desc>Provides the list of artist Identities.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819e1</_id>
				<id>3</id>
				<title>Submit the artist list.</title>
				<desc>The artist list is returned to update the view.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a239819e5</_id>
				<id>4</id>
				<title>Show the artist list.</title>
				<desc>The view is updated with the available artists identities.</desc>
				<type>activity</type>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>570677436dee529b2dc03eca</upd_at>
		<_id>56fa81d7f005e22a239819d1</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>Request connection of a Fan to an Artist</name>
		<desc>The user request a connection between a fan identity and an artist identity.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a23981a03</_id>
				<id>0</id>
				<title>Request an artist identity connection.</title>
				<desc>The artist to request connection is selected.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a07</_id>
				<id>1</id>
				<title>Request the identities connection.</title>
				<desc>Request a connection with an artist identity</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a0b</_id>
				<id>2</id>
				<title>Send request to a remote device.</title>
				<desc>Send the connection request to a remote device.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a0f</_id>
				<id>3</id>
				<title>Route the connection request to a remote device.</title>
				<desc>Route the connection request to a remote device through the P2P network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a13</_id>
				<id>4</id>
				<title>Receive the connection request.</title>
				<desc>Receive a message with the connection request.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a17</_id>
				<id>5</id>
				<title>Send notification to OS.</title>
				<desc>Raises an event indicating the arrival of a new connection request.</desc>
				<type>activity</type>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
		</steps>
		<upd_at>570678bd6dee529b2dc03f1c</upd_at>
		<_id>56fa81d7f005e22a239819ff</_id>
	</proc>
	<proc>
		<platfrm>ART</platfrm>
		<name>An artist accepts a fan connection</name>
		<desc>The artist sees a connection request and accepts it.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>56fa81d7f005e22a23981a1e</_id>
				<id>0</id>
				<title>Register the acceptance of a connection.</title>
				<desc>A request connection request is selected to approve it.</desc>
				<type>start</type>
				<next>
					<id>1</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a22</_id>
				<id>1</id>
				<title>Submit request acceptance.</title>
				<desc>Route the acceptance to notify to the connection petitioner</desc>
				<type>activity</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<name>artist community</name>
				<layer>sub app</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a26</_id>
				<id>2</id>
				<title>Send acceptance to a remote device.</title>
				<desc>Send the connection acceptance to a remote device.</desc>
				<type>activity</type>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a2a</_id>
				<id>3</id>
				<title>Route the connection acceptance to a remote device.</title>
				<desc>Route the connection acceptance to a remote device through the P2P network.</desc>
				<type>activity</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a2e</_id>
				<id>4</id>
				<title>Receive the connection acceptance.</title>
				<desc>Receive a message with the connection acceptance.</desc>
				<type>activity</type>
				<next>
					<id>5</id>
					<type>event</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a32</_id>
				<id>5</id>
				<title>Send notification to OS.</title>
				<desc>Raises an event indicating the arrival of a new connection acceptance.</desc>
				<type>activity</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a36</_id>
				<id>6</id>
				<title>The connection is registered in Fan identity.</title>
				<desc>The Fan identity is updated with the connection.</desc>
				<type>activity</type>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<name>artist</name>
				<layer>identity</layer>
				<platfrm>ART</platfrm>
			</step>
			<step>
				<_id>56fa81d7f005e22a23981a3a</_id>
				<id>7</id>
				<title>The external platform identity is updated.</title>
				<desc>The Tokenly Fan identity is updated with the connection.</desc>
				<type>activity</type>
				<name>artist identity</name>
				<layer>sub app</layer>
				<platfrm>TKY</platfrm>
			</step>
		</steps>
		<upd_at>57067a6c6dee529b2dc03f4b</upd_at>
		<_id>56fa81d7f005e22a23981a1a</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Fixed Bitcoin Price Direct Private Sell - Seller Workflow</name>
		<desc>Describes the Selling workflow from the seller perspective</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>5706a00c6dee529b2dc08126</_id>
				<id>0</id>
				<title>Start</title>
				<desc>Seller defines asset, price and buyer</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>asset user</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a00c6dee529b2dc0812c</_id>
				<id>1</id>
				<title>Transaction is started</title>
				<desc>Transaction is started and time out process is defined.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
				<name>Asset Fixed Bitcoin Price Direct Private Sell</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a00d6dee529b2dc08132</_id>
				<id>2</id>
				<title>Asset Hold</title>
				<desc>Asset is hold for the remainingh of the transaction</desc>
				<type>start</type>
				<name>asset hold</name>
				<layer>business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a00d6dee529b2dc08138</_id>
				<id>3</id>
				<title>Offer created</title>
				<desc>An specific asset offer is created with information of the offer, including the asset info and timeouts.</desc>
				<type>start</type>
				<name>asset specific</name>
				<layer>offer</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a00e6dee529b2dc0813e</_id>
				<id>4</id>
				<title>Offer sent yo buyer</title>
				<desc>We sent the offer to the buyer for evaluation</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>5</id>
				</next>
				<name>outgoing asset offer</name>
				<layer>offer transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a00e6dee529b2dc08144</_id>
				<id>5</id>
				<title>Offer sent over P2P</title>
				<desc>We sent the offer to the buyer with retries.</desc>
				<type>start</type>
				<next>
					<id>6</id>
					<type>event</type>
				</next>
				<name>offer</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a38f6dee529b2dc0906a</_id>
				<id>6</id>
				<title>Incoming response</title>
				<desc>We receive the response from the buyer</desc>
				<type>start</type>
				<next>
					<type>event</type>
					<id>7</id>
				</next>
				<name>offer</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a3906dee529b2dc09070</_id>
				<id>7</id>
				<title>Response processed</title>
				<desc>We process the response of the buyer</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>8</id>
				</next>
				<name>incoming asset offer</name>
				<layer>offer transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a3906dee529b2dc09076</_id>
				<id>8</id>
				<title>Swap transaction created</title>
				<desc>Swap transaction is started</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>9</id>
				</next>
				<next>
					<type>direct call</type>
					<id>11</id>
				</next>
				<name>Asset For Bitcoin</name>
				<layer>swap transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a3916dee529b2dc0907c</_id>
				<id>9</id>
				<title>Metadata sent</title>
				<desc>We send the metadata over P2P</desc>
				<type>start</type>
				<name>outgoing asset metadata</name>
				<layer>metadata transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a3916dee529b2dc09082</_id>
				<id>10</id>
				<title>Metadata sent over P2P</title>
				<desc>We sent the metadata over P2P</desc>
				<type>start</type>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a3926dee529b2dc09088</_id>
				<id>11</id>
				<title>MultiSig Transaction created</title>
				<desc>Multi Signature transaction is created</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>12</id>
				</next>
				<name>assets over bitcoin</name>
				<layer>crypto vault</layer>
				<suprlay>BCH</suprlay>
			</step>
			<step>
				<_id>5706a3926dee529b2dc0908e</_id>
				<id>12</id>
				<title>MultiSig Transaction sent over P2P</title>
				<desc>We sent the multi sig transaction over P2P</desc>
				<type>start</type>
				<next>
					<type>event</type>
					<id>13</id>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a3936dee529b2dc09094</_id>
				<id>13</id>
				<title>MultiSig transaction received</title>
				<desc>We received the signed transaction</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>14</id>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a3936dee529b2dc0909a</_id>
				<id>14</id>
				<title>Transaction signed</title>
				<desc>Transaction is signed and prepare to broadcast</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>15</id>
				</next>
				<name>assets over bitcoin</name>
				<layer>crypto vault</layer>
				<suprlay>BCH</suprlay>
			</step>
			<step>
				<_id>5706a3946dee529b2dc090a0</_id>
				<id>15</id>
				<title>Transaction is broadcasted</title>
				<desc>transaction sent over P2P</desc>
				<type>start</type>
				<name>bitcoin</name>
				<layer>crypto network</layer>
				<suprlay>BCH</suprlay>
			</step>
			<step>
				<_id>5706a3946dee529b2dc090a6</_id>
				<id>16</id>
				<title>Outgoing Asset</title>
				<desc>Asset transaction detected as outgoing</desc>
				<type>start</type>
				<name>asset outgoing crypto</name>
				<layer>crypto transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5706a3966dee529b2dc090b4</_id>
				<id>18</id>
				<title>Wallet balance updated</title>
				<desc>We updated the balance once the asset is confir,ed</desc>
				<type>start</type>
				<name>asset user</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>5707b79a6dee529b2dc10e01</upd_at>
		<_id>5706a00b6dee529b2dc0811e</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Metadata Transmission - Sender workflow</name>
		<desc>Describes the process of transmiting the Asset Metadata to a destination.
The asset is formed by Metadata and Bitcoins.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>57070ef96dee529b2dc0d831</_id>
				<id>0</id>
				<title>Transaction coordinator</title>
				<desc>A request to transmit metadata is created.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<next>
					<type>direct call</type>
					<id>6</id>
				</next>
				<next>
					<type>direct call</type>
					<id>8</id>
				</next>
				<name>outgoing asset metadata</name>
				<layer>metadata transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>57070efa6dee529b2dc0d837</_id>
				<id>1</id>
				<title>Asset Metadata loaded</title>
				<desc>Asset Metadata is loaded.</desc>
				<type>start</type>
				<name>digital asset metadata</name>
				<layer>metadata</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>57070efa6dee529b2dc0d83d</_id>
				<id>2</id>
				<title>Asset metadata validated</title>
				<desc>We validate everything is correct to be sent.</desc>
				<type>start</type>
				<name>outgoing asset metadata</name>
				<layer>metadata transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>57070efb6dee529b2dc0d843</_id>
				<id>3</id>
				<title>TimeOut agent started</title>
				<desc>Subscription added to wait response.</desc>
				<type>start</type>
				<next>
					<type>event</type>
					<id>4</id>
				</next>
				<name>timeout notifier</name>
				<layer>agent</layer>
				<platfrm>PIP</platfrm>
			</step>
			<step>
				<_id>57070efb6dee529b2dc0d849</_id>
				<id>4</id>
				<title>Timeout reached</title>
				<desc>Timeout reached without response.
Transaction is rollbacked.</desc>
				<type>start</type>
				<next>
					<type>event</type>
					<id>5</id>
				</next>
				<name>outgoing asset metadata</name>
				<layer>metadata transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>57070efb6dee529b2dc0d84f</_id>
				<id>5</id>
				<title>Rollback Event raised</title>
				<desc>Rollback event raise to notify caller.</desc>
				<type>start</type>
				<name>outgoing asset metadata</name>
				<layer>metadata transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>57070efc6dee529b2dc0d855</_id>
				<id>6</id>
				<title>Metadata sent over P2P</title>
				<desc>Asset Metadata sent over P2P</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>7</id>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>57070efc6dee529b2dc0d85b</_id>
				<id>7</id>
				<title>Send confirmation event</title>
				<desc>Metadata send confirmation event</desc>
				<type>start</type>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>57070efd6dee529b2dc0d861</_id>
				<id>8</id>
				<title>Incomming Message</title>
				<desc>Incomming Message detected</desc>
				<type>start</type>
				<next>
					<type>event</type>
					<id>9</id>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>57070efd6dee529b2dc0d867</_id>
				<id>9</id>
				<title>Message processed</title>
				<desc>Message from destination received.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>10</id>
				</next>
				<next>
					<type>direct call</type>
					<id>11</id>
				</next>
				<name>outgoing asset metadata</name>
				<layer>metadata transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>57070efe6dee529b2dc0d86d</_id>
				<id>10</id>
				<title>Asset accepted</title>
				<desc>Accepted Metadata event raised</desc>
				<type>start</type>
				<name>outgoing asset metadata</name>
				<layer>metadata transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>57070eff6dee529b2dc0d875</_id>
				<id>11</id>
				<title>Asset not accepted</title>
				<desc>Not Accepted Metadata event raised</desc>
				<type>start</type>
				<name>outgoing asset metadata</name>
				<layer>metadata transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>570e59fe019d61dc4dea7d34</upd_at>
		<_id>57070ef86dee529b2dc0d829</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Metadata Transmission - Receiver workflow</name>
		<desc>Describes the process of receiving an asset metadata.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>570713e26dee529b2dc0d88f</_id>
				<id>0</id>
				<title>New Message received</title>
				<desc>New metadata message received</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570713e36dee529b2dc0d895</_id>
				<id>1</id>
				<title>Metadata transaction started</title>
				<desc>Transaction coordinator started</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<name>incoming asset metadata</name>
				<layer>metadata transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570713e46dee529b2dc0d89b</_id>
				<id>2</id>
				<title>Metadata stored</title>
				<desc>Received metadata stored</desc>
				<type>start</type>
				<name>digital asset metadata</name>
				<layer>metadata</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570713e46dee529b2dc0d8a1</_id>
				<id>3</id>
				<title>Metadata evaluated</title>
				<desc>We validate asset metadata is valid.</desc>
				<type>start</type>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<next>
					<id>7</id>
					<type>direct call</type>
				</next>
				<next>
					<id>8</id>
					<type>event</type>
				</next>
				<name>incoming asset metadata</name>
				<layer>metadata transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570713e46dee529b2dc0d8a7</_id>
				<id>4</id>
				<title>Genesis Transaction tracking</title>
				<desc>We track the path of transactions until Genesis</desc>
				<type>start</type>
				<name>bitcoin</name>
				<layer>crypto network</layer>
				<suprlay>BCH</suprlay>
			</step>
			<step>
				<_id>570713e56dee529b2dc0d8ad</_id>
				<id>5</id>
				<title>Asset accepted</title>
				<desc>Asset metadata is accepted.</desc>
				<type>start</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>incoming asset metadata</name>
				<layer>metadata transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>570713e56dee529b2dc0d8b3</_id>
				<id>6</id>
				<title>Send response to sender</title>
				<desc>Metadata send over P2P</desc>
				<type>start</type>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707a09f6dee529b2dc0ee9f</_id>
				<id>7</id>
				<title>Asset Not accepted</title>
				<desc>Asset is not accepted.
End of transaction.</desc>
				<type>start</type>
				<next>
					<id>6</id>
					<type>direct call</type>
				</next>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>570e5d23019d61dc4dea7dba</upd_at>
		<_id>570713e26dee529b2dc0d887</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Sending Asset Bitcoin - Sender workflow</name>
		<desc>Describes the process of sending bitcoins associated to an specific asset from the sender perspective.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>5707a2cd6dee529b2dc0eeae</_id>
				<id>0</id>
				<title>Start of Transaction</title>
				<desc>A request to send Bitcoins from an specific asset is initiated.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>asset outgoing crypto</name>
				<layer>crypto transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707a2cd6dee529b2dc0eeb4</_id>
				<id>1</id>
				<title>Transaction is generated</title>
				<desc>Transaction is created using asset inputs.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<name>assets over bitcoin</name>
				<layer>crypto vault</layer>
				<suprlay>BCH</suprlay>
			</step>
			<step>
				<_id>5707a2cd6dee529b2dc0eeba</_id>
				<id>2</id>
				<title>Transaction is broadcasted</title>
				<desc>Transaction is broadcasted</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<name>bitcoin</name>
				<layer>crypto network</layer>
				<suprlay>BCH</suprlay>
			</step>
			<step>
				<_id>5707a2ce6dee529b2dc0eec0</_id>
				<id>3</id>
				<title>Outgoing transaction is detected</title>
				<desc>Outgoing Crypto is detected and visible on the network</desc>
				<type>start</type>
				<next>
					<type>event</type>
					<id>4</id>
				</next>
				<name>outgoing crypto</name>
				<layer>crypto router</layer>
				<suprlay>BCH</suprlay>
			</step>
			<step>
				<_id>5707a2ce6dee529b2dc0eec6</_id>
				<id>4</id>
				<title>Outgoing Asset is detected</title>
				<desc>An outgoing transaction of the asset is detected.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>5</id>
				</next>
				<next>
					<type>direct call</type>
					<id>6</id>
				</next>
				<name>asset outgoing crypto</name>
				<layer>crypto transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707a2cf6dee529b2dc0eecc</_id>
				<id>5</id>
				<title>Wallet is updated</title>
				<desc>Book Balance is updated.</desc>
				<type>start</type>
				<name>asset user</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707a2cf6dee529b2dc0eed2</_id>
				<id>6</id>
				<title>Asset debit confirmed</title>
				<desc>Asset is gone.</desc>
				<type>start</type>
				<name>asset user</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>5707a2cc6dee529b2dc0eea5</upd_at>
		<_id>5707a2cc6dee529b2dc0eea6</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Send Asset Bitcoin - Receiver workflow</name>
		<desc>Describes the process of sending bitcoins associated with an asset from the receiver perspective.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>5707a3c56dee529b2dc0eee1</_id>
				<id>0</id>
				<title>Start</title>
				<desc>Incoming Bitcoins detected for an asset</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<name>asset incoming crypto</name>
				<layer>crypto transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707a3c56dee529b2dc0eee7</_id>
				<id>1</id>
				<title>Asset Metadata retrieved</title>
				<desc>We get the metadata of this asset.</desc>
				<type>start</type>
				<name>digital asset metadata</name>
				<layer>metadata</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707a3c66dee529b2dc0eeed</_id>
				<id>2</id>
				<title>Wallet credit</title>
				<desc>We send the asset to the wallet</desc>
				<type>start</type>
				<name>asset user</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707a3c66dee529b2dc0eef3</_id>
				<id>3</id>
				<title>Asset confirmed</title>
				<desc>When asset confirmed, we update the wallet balance.</desc>
				<type>start</type>
				<name>asset user</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>5707a3c46dee529b2dc0eed8</upd_at>
		<_id>5707a3c46dee529b2dc0eed9</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Transfer - Sender workflow</name>
		<desc>Describes the process of transfering an asset from the sender perspective.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>5707a5ca6dee529b2dc0ef02</_id>
				<id>0</id>
				<title>A transfer request is started</title>
				<desc>A transfer request is started.
Validations are performed.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<name>asset transfer</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707a5cb6dee529b2dc0ef08</_id>
				<id>1</id>
				<title>Asset Metadata Send</title>
				<desc>****Asset Metadata Transmission workflow link***</desc>
				<type>start</type>
				<name>fermat core</name>
				<layer>core</layer>
				<platfrm>COR</platfrm>
			</step>
			<step>
				<_id>5707a5cb6dee529b2dc0ef0e</_id>
				<id>2</id>
				<title>Asset Crypto Send</title>
				<desc>****Asset crypto send workflow link***</desc>
				<type>start</type>
				<name>asset outgoing crypto</name>
				<layer>crypto transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>5707a5c96dee529b2dc0eef9</upd_at>
		<_id>5707a5c96dee529b2dc0eefa</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Transfer - User Transaction</name>
		<desc>Describes the process for an user to transfer an asset from one actor to another.</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>5707a6f06dee529b2dc0ef1d</_id>
				<id>0</id>
				<title>Start</title>
				<desc>Owner of asset chooses to transfer.
Asset and destination are selected.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>asset user</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707a6f16dee529b2dc0ef23</_id>
				<id>1</id>
				<title>Transaction is started</title>
				<desc>Transfer transaction is started.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<name>asset transfer</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707a6f16dee529b2dc0ef29</_id>
				<id>2</id>
				<title>Asset holded</title>
				<desc>An asset hold is placed on the selected asset for the specific destination actor.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<name>asset hold</name>
				<layer>business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707a6f26dee529b2dc0ef2f</_id>
				<id>3</id>
				<title>Asset is transfered</title>
				<desc>****Asset transfer workflow link***</desc>
				<type>start</type>
				<next>
					<type>event</type>
					<id>4</id>
				</next>
				<name>asset transfer</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707a6f26dee529b2dc0ef35</_id>
				<id>4</id>
				<title>Rollback</title>
				<desc>A rollback event is handled.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>5</id>
				</next>
				<name>asset transfer</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707a6f36dee529b2dc0ef3b</_id>
				<id>5</id>
				<title>Asset unhold</title>
				<desc>The hold is released from the asset</desc>
				<type>start</type>
				<name>asset unhold</name>
				<layer>business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>5707a6ef6dee529b2dc0ef14</upd_at>
		<_id>5707a6ef6dee529b2dc0ef15</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Fixed Bitcoin Price Direct Private Sell - Buyer Workflow</name>
		<desc>Describes the process of selling an asset, from the buyer perspective</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>5707bb5a6dee529b2dc11c6d</_id>
				<id>0</id>
				<title>Start</title>
				<desc>Offer is received over P2P</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>offer</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707bb5b6dee529b2dc11c73</_id>
				<id>1</id>
				<title>New transaction is started</title>
				<desc>A new offer is received and stored.</desc>
				<type>start</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<next>
					<id>4</id>
					<type>direct call</type>
				</next>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>incoming asset offer</name>
				<layer>offer transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707bb5b6dee529b2dc11c79</_id>
				<id>2</id>
				<title>Offer is stored</title>
				<desc>Specific offer stored</desc>
				<type>start</type>
				<name>asset specific</name>
				<layer>offer</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707bb5c6dee529b2dc11c7f</_id>
				<id>3</id>
				<title>User responds to offer</title>
				<desc>User accepts or declines the offer</desc>
				<type>start</type>
				<name>asset user</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707bb5c6dee529b2dc11c85</_id>
				<id>4</id>
				<title>Response is sent to seller</title>
				<desc>Response is sent over P2P</desc>
				<type>start</type>
				<name>offer</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707bb5d6dee529b2dc11c8b</_id>
				<id>5</id>
				<title>New swap transaction started</title>
				<desc>New swap transaction is started</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>6</id>
				</next>
				<next>
					<type>direct call</type>
					<id>7</id>
				</next>
				<next>
					<type>direct call</type>
					<id>8</id>
				</next>
				<next>
					<type>direct call</type>
					<id>9</id>
				</next>
				<next>
					<type>direct call</type>
					<id>10</id>
				</next>
				<next>
					<type>direct call</type>
					<id>11</id>
				</next>
				<name>Bitcoin For Asset</name>
				<layer>swap transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707bb5d6dee529b2dc11c91</_id>
				<id>6</id>
				<title>Metadata is recieved</title>
				<desc>***Asset Metadata Transmission Receiver workflow link***</desc>
				<type>start</type>
				<name>fermat core</name>
				<layer>core</layer>
				<platfrm>COR</platfrm>
			</step>
			<step>
				<_id>5707bb5e6dee529b2dc11c97</_id>
				<id>7</id>
				<title>MultiSig Transaction received</title>
				<desc>MultiSig Transaction received over P2P</desc>
				<type>start</type>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707bb5e6dee529b2dc11c9d</_id>
				<id>8</id>
				<title>MultiSig completed and Signed</title>
				<desc>Multi sig transaction completed</desc>
				<type>start</type>
				<name>outgoing draft transaction</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>5707bb5f6dee529b2dc11ca3</_id>
				<id>9</id>
				<title>Bitcoins hold</title>
				<desc>Bitcoins are hold</desc>
				<type>start</type>
				<name>hold</name>
				<layer>crypto transaction</layer>
				<platfrm>CCP</platfrm>
			</step>
			<step>
				<_id>5707bb5f6dee529b2dc11ca9</_id>
				<id>10</id>
				<title>Multi Sig transaction is send to seller</title>
				<desc>We send back the signed transaction</desc>
				<type>start</type>
				<name>asset transmission</name>
				<layer>network service</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707bb606dee529b2dc11cb1</_id>
				<id>11</id>
				<title>Incoming Asset detected</title>
				<desc>***Send Asset Bitcoin - Receiver Workflow***</desc>
				<type>start</type>
				<name>fermat core</name>
				<layer>core</layer>
				<platfrm>COR</platfrm>
			</step>
		</steps>
		<upd_at>5707c89a6dee529b2dc12b41</upd_at>
		<_id>5707bb596dee529b2dc11c65</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Redemption</name>
		<desc>Describes the process of redeeming an asset</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>5707ca456dee529b2dc1326a</_id>
				<id>0</id>
				<title>Start</title>
				<desc>User Selects Asset and Redeem Point, and select Redeem Asset</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>asset user</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707ca456dee529b2dc13270</_id>
				<id>1</id>
				<title>Transaction is Started</title>
				<desc>Transaction is started.</desc>
				<type>start</type>
				<next>
					<id>2</id>
					<type>direct call</type>
				</next>
				<next>
					<id>3</id>
					<type>direct call</type>
				</next>
				<next>
					<id>4</id>
					<type>event</type>
				</next>
				<next>
					<id>5</id>
					<type>direct call</type>
				</next>
				<name>asset redemption</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707ca466dee529b2dc13276</_id>
				<id>2</id>
				<title>Asset is holded</title>
				<desc>asset remains hold for the rest of the transaction</desc>
				<type>start</type>
				<name>asset hold</name>
				<layer>business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707ca466dee529b2dc1327c</_id>
				<id>3</id>
				<title>Asset is transfered to redeem point</title>
				<desc>***Asset Transfer workflow link***</desc>
				<type>start</type>
				<name>asset transfer</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707ca476dee529b2dc13282</_id>
				<id>4</id>
				<title>Statistics updated</title>
				<desc>Asset transfer statistics updated</desc>
				<type>start</type>
				<name>asset transfer</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707cc926dee529b2dc132ce</_id>
				<id>5</id>
				<title>Rollback</title>
				<desc>Hold is released from asset</desc>
				<type>start</type>
				<name>asset unhold</name>
				<layer>business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>5707cc8f6dee529b2dc132bb</upd_at>
		<_id>5707ca446dee529b2dc13262</_id>
	</proc>
	<proc>
		<platfrm>DAP</platfrm>
		<name>Asset Distribution</name>
		<desc>Describes the process of Distributing an asset from the issuer to an user</desc>
		<prev>null</prev>
		<next>null</next>
		<steps>
			<step>
				<_id>5707cc2a6dee529b2dc13291</_id>
				<id>0</id>
				<title>Start</title>
				<desc>Issuer selects asset and user to distribute to.</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>1</id>
				</next>
				<name>asset issuer</name>
				<layer>wallet module</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707cc2b6dee529b2dc13297</_id>
				<id>1</id>
				<title>Transaction Starts</title>
				<desc>Transaction starts</desc>
				<type>start</type>
				<next>
					<type>direct call</type>
					<id>2</id>
				</next>
				<next>
					<type>direct call</type>
					<id>3</id>
				</next>
				<next>
					<type>direct call</type>
					<id>4</id>
				</next>
				<next>
					<type>event</type>
					<id>5</id>
				</next>
				<name>asset distribution</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707cc2b6dee529b2dc1329d</_id>
				<id>2</id>
				<title>Asset hold</title>
				<desc>The asset is holded for the remaining of the transaction</desc>
				<type>start</type>
				<name>asset hold</name>
				<layer>business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707cc2c6dee529b2dc132a3</_id>
				<id>3</id>
				<title>Asset is transfered</title>
				<desc>Asset is transfered to user</desc>
				<type>start</type>
				<name>asset transfer</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707cc2c6dee529b2dc132a9</_id>
				<id>4</id>
				<title>Statistics are updated</title>
				<desc>Transfer stats is updated</desc>
				<type>start</type>
				<name>asset transfer</name>
				<layer>user level business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
			<step>
				<_id>5707cc2d6dee529b2dc132af</_id>
				<id>5</id>
				<title>Rollback</title>
				<desc>Hold is released from asset</desc>
				<type>start</type>
				<name>asset unhold</name>
				<layer>business transaction</layer>
				<platfrm>DAP</platfrm>
			</step>
		</steps>
		<upd_at>5707cc296dee529b2dc13288</upd_at>
		<_id>5707cc296dee529b2dc13289</_id>
	</proc>
</procs>